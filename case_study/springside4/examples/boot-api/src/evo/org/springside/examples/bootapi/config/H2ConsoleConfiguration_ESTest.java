/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 18:17:43 GMT 2017
 */

package org.springside.examples.bootapi.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import java.util.Set;
import javax.servlet.ServletContext;
import javax.servlet.ServletRegistration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springside.examples.bootapi.config.H2ConsoleConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class H2ConsoleConfiguration_ESTest extends H2ConsoleConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      H2ConsoleConfiguration h2ConsoleConfiguration0 = new H2ConsoleConfiguration();
      ServletRegistration.Dynamic servletRegistration_Dynamic0 = mock(ServletRegistration.Dynamic.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(servletRegistration_Dynamic0).setInitParameter(anyString() , anyString());
      doReturn((Set) null).when(servletRegistration_Dynamic0).addMapping(any(java.lang.String[].class));
      ServletContext servletContext0 = mock(ServletContext.class, new ViolatedAssumptionAnswer());
      doReturn(servletRegistration_Dynamic0).when(servletContext0).addServlet(anyString() , any(javax.servlet.Servlet.class));
      h2ConsoleConfiguration0.onStartup(servletContext0);
  }
}
