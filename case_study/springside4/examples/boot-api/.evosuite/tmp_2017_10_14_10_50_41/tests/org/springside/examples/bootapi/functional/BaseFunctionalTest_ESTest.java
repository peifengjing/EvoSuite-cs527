/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 18:13:54 GMT 2017
 */

package org.springside.examples.bootapi.functional;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;
import org.springside.examples.bootapi.functional.BookEndpointTest;
import org.springside.examples.bootapi.repository.BookDao;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BaseFunctionalTest_ESTest extends BaseFunctionalTest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BookEndpointTest bookEndpointTest0 = new BookEndpointTest();
      BookDao bookDao0 = mock(BookDao.class, new ViolatedAssumptionAnswer());
      Injector.inject(bookEndpointTest0, (Class<?>) BookEndpointTest.class, "bookDao", (Object) bookDao0);
      Injector.validateBean(bookEndpointTest0, (Class<?>) BookEndpointTest.class);
  }
}
