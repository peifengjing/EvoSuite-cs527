/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 19:33:22 GMT 2017
 */

package org.springside.modules.utils.concurrent.jsr166e;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import org.springside.modules.utils.concurrent.jsr166e.LongAdder;
import org.springside.modules.utils.concurrent.jsr166e.Striped64;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Striped64_ESTest extends Striped64_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[2];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-1L));
      striped64_CellArray0[0] = striped64_Cell0;
      Striped64.Cell striped64_Cell1 = new Striped64.Cell((-1286));
      striped64_CellArray0[1] = striped64_Cell1;
      longAdder0.cells = striped64_CellArray0;
      striped64_Cell0.p4 = (-1759L);
      striped64_Cell1.p5 = 794L;
      longAdder0.casBusy();
      longAdder0.sumThenReset();
      longAdder0.base = (-1L);
      longAdder0.casBase((-185L), 0L);
      longAdder0.busy = (-1286);
      longAdder0.doubleValue();
      longAdder0.casBase(2149L, 1415L);
      striped64_Cell1.q0 = 1171L;
      Random.setNextRandom(2);
      longAdder0.retryUpdate((-1660L), (int[]) null, false);
      longAdder0.increment();
      longAdder0.sumThenReset();
      longAdder0.decrement();
      longAdder0.floatValue();
      longAdder0.doubleValue();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.sumThenReset();
      longAdder0.decrement();
      longAdder0.increment();
      longAdder0.internalReset(1757L);
      longAdder0.intValue();
      longAdder0.retryUpdate(0L, (int[]) null, true);
      longAdder0.reset();
      longAdder0.retryUpdate(0L, (int[]) null, true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.reset();
      longAdder0.fn(0L, 0L);
      int[] intArray0 = new int[2];
      longAdder0.increment();
      longAdder0.internalReset((-430L));
      longAdder0.casBusy();
      intArray0[0] = 0;
      longAdder0.base = 2373L;
      intArray0[1] = (-2659);
      longAdder0.busy = (-2659);
      longAdder0.casBase((-2659), 0);
      // Undeclared exception!
      longAdder0.retryUpdate(0L, intArray0, true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBase(0L, 3562L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        longAdder0.retryUpdate(0L, intArray0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.springside.modules.utils.concurrent.jsr166e.Striped64", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBusy();
      longAdder0.casBusy();
      longAdder0.increment();
      longAdder0.sumThenReset();
      longAdder0.decrement();
      longAdder0.reset();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.fn(0L, (-3625L));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.fn(809L, 809L);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.add(0L);
      Striped64.Cell striped64_Cell0 = new Striped64.Cell(839L);
      striped64_Cell0.cas((-2089L), 839L);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.internalReset(761L);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[1];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.sumThenReset();
      longAdder0.increment();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[2];
      Striped64.Cell striped64_Cell0 = new Striped64.Cell((-1L));
      striped64_CellArray0[0] = striped64_Cell0;
      longAdder0.cells = striped64_CellArray0;
      striped64_Cell0.p4 = (-1L);
      longAdder0.casBusy();
      longAdder0.casBase((-185L), 0L);
      Random.setNextRandom(1);
      longAdder0.retryUpdate((-1660L), (int[]) null, false);
      longAdder0.decrement();
      longAdder0.floatValue();
      longAdder0.doubleValue();
      longAdder0.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBusy();
      longAdder0.intValue();
      longAdder0.internalReset(0);
      int[] intArray0 = new int[26];
      intArray0[2] = 0;
      intArray0[8] = 0;
      longAdder0.retryUpdate(0, intArray0, true);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      Striped64.Cell[] striped64_CellArray0 = new Striped64.Cell[0];
      longAdder0.cells = striped64_CellArray0;
      longAdder0.decrement();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      longAdder0.casBusy();
      longAdder0.fn(0L, 0L);
      longAdder0.floatValue();
      longAdder0.add(0L);
      int[] intArray0 = new int[2];
      longAdder0.decrement();
      longAdder0.retryUpdate(0L, intArray0, true);
      longAdder0.fn(0, 0);
      longAdder0.add(1515L);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongAdder longAdder0 = new LongAdder();
      int[] intArray0 = new int[7];
      intArray0[3] = 0;
      longAdder0.retryUpdate(0L, intArray0, false);
      longAdder0.reset();
      longAdder0.add(0L);
      longAdder0.sum();
      longAdder0.sumThenReset();
      longAdder0.casBusy();
      longAdder0.retryUpdate(0L, (int[]) null, true);
      assertEquals(0.0F, longAdder0.floatValue(), 0.01F);
  }
}
