/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:03:44 GMT 2017
 */

package org.springside.modules.utils.collection.type;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.collection.type.Pair;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pair_ESTest extends Pair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Pair<Object, String> pair0 = Pair.of((Object) integer0, "Pair [first=java.lang.Object@496fa779, second=null]");
      Object object0 = pair0.getFirst();
      assertEquals(1, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Pair<Integer, String> pair0 = Pair.of(integer0, "xP.6[<Tet+)-{O");
      Pair<Object, String> pair1 = Pair.of((Object) integer0, "Pair [first=java.lang.Object@496fa779, second=null]");
      boolean boolean0 = pair1.equals(pair0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pair<String, Object> pair0 = Pair.of((String) null, (Object) null);
      Pair<Object, String> pair1 = new Pair<Object, String>((Object) null, (String) null);
      boolean boolean0 = pair0.equals(pair1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Pair<Object, Object> pair0 = new Pair<Object, Object>(">9J 3$'7Xj\"7^A&", ">9J 3$'7Xj\"7^A&");
      Pair<String, Object> pair1 = Pair.of(">9J 3$'7Xj\"7^A&", (Object) ">9J 3$'7Xj\"7^A&");
      boolean boolean0 = pair0.equals(pair1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object object0 = new Object();
      Pair<Object, String> pair0 = new Pair<Object, String>(object0, "WzC`iw6JtBh%U");
      Pair<Object, Object> pair1 = new Pair<Object, Object>((Object) null, object0);
      boolean boolean0 = pair1.equals(pair0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Pair<String, Object> pair0 = Pair.of((String) null, (Object) null);
      Integer integer0 = new Integer(0);
      Pair<Integer, String> pair1 = Pair.of(integer0, "~P^3");
      Pair<String, Object> pair2 = Pair.of("", (Object) pair1);
      Object object0 = pair0.getSecond();
      Pair<Object, Object> pair3 = Pair.of(object0, (Object) "");
      boolean boolean0 = pair2.equals(pair3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Pair<String, String> pair0 = Pair.of("xP.6[<Tet+)-{O", "Pair [first=java.lang.Object@496fa779, second=null]");
      boolean boolean0 = pair0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Pair<Object, Object> pair0 = new Pair<Object, Object>(integer0, "xP.6[<Tet+)-{O");
      boolean boolean0 = pair0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Pair<String, Integer> pair0 = new Pair<String, Integer>("", integer0);
      Pair<String, Object> pair1 = Pair.of((String) null, (Object) pair0);
      Object object0 = pair1.getSecond();
      boolean boolean0 = pair0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pair<String, Object> pair0 = Pair.of((String) null, (Object) null);
      pair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Pair<Integer, Integer> pair0 = Pair.of(integer0, integer0);
      pair0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Pair<String, Object> pair0 = Pair.of((String) null, (Object) null);
      String string0 = pair0.toString();
      assertEquals("Pair [first=null, second=null]", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Pair<String, Object> pair0 = Pair.of((String) null, (Object) null);
      Object object0 = pair0.getSecond();
      Pair<Object, Object> pair1 = Pair.of(object0, (Object) "");
      boolean boolean0 = pair0.equals(pair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pair<Object, String> pair0 = new Pair<Object, String>((Object) null, (String) null);
      Object object0 = pair0.getFirst();
      assertNull(object0);
  }
}
