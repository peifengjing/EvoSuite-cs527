/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:19:57 GMT 2017
 */

package org.springside.modules.utils.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.ParseException;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.springside.modules.utils.time.ClockUtil;
import org.springside.modules.utils.time.DateFormatUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateFormatUtil_ESTest extends DateFormatUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(3600000L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(3599000L);
      assertEquals("1\u79D2\u524D", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      String string0 = DateFormatUtil.formatDate("yyyy-MM-dd HH:mm:ss.SSS", date0);
      assertEquals("2014-02-14 20:21:21.320", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      String string0 = DateFormatUtil.formatDate("", date0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = DateFormatUtil.formatDate("\u521A\u521A", 2481L);
      assertEquals("\u521A\u521A", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      try { 
        DateFormatUtil.pareDate("*6S`7m", "");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable date: 
         //
         verifyException("org.apache.commons.lang3.time.FastDateParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate("%d\u79D2\u524D", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate((String) null, "RTL;");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.pareDate(" is not valid.", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: i
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("]", "]");
      System.setCurrentTimeMillis(9223372036854775796L);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow(date0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Calendar value too large for accurate calculations
         //
         verifyException("org.apache.commons.lang3.time.DateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClockUtil.useDummyClock(9223372036854775807L);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatFriendlyTimeSpanByNow(1392321600000L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Calendar value too large for accurate calculations
         //
         verifyException("org.apache.commons.lang3.time.DateUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "org.springside.modules.utils.time.DateFormatUtil");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond(date0, (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      System.setCurrentTimeMillis(0L);
      Date date1 = DateFormatUtil.pareDate("\u521A\u521A", "\u521A\u521A");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond(date0, date1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDurationOnSecond((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "QuX3YH8[ DS");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration((Date) null, date0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.time.DateFormatUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      System.setCurrentTimeMillis(0L);
      Date date1 = DateFormatUtil.pareDate("", (String) null);
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration(date0, date1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDuration((-1L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // durationMillis must not be negative
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("yyyy-MM-dd'T'HH:mm:ss.SSSZZ", (Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate((String) null, date0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate((String) null, 1756L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pattern must not be null
         //
         verifyException("org.apache.commons.lang3.time.FormatCache", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("JdfS3fWa", 0L);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: J
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      System.setCurrentTimeMillis(3600000L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(3600000L);
      assertEquals("\u521A\u521A", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClockUtil.useDummyClock(3600000L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(0L);
      assertEquals("\u6628\u592900:00", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      System.setCurrentTimeMillis((-5772L));
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(9223372036854775807L);
      assertEquals("\u4ECA\u592907:12", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(1392409221320L);
      assertEquals("1\u5206\u949F\u524D", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(0L);
      assertEquals("1970-01-01", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClockUtil.useDummyClock(3600000L);
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(1392321600000L);
      assertEquals("Thu Feb 13 20:00:00 GMT 2014", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DateFormatUtil dateFormatUtil0 = new DateFormatUtil();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      String string0 = DateFormatUtil.formatDurationOnSecond(date0, date0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = DateFormatUtil.formatDuration(0L);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      String string0 = DateFormatUtil.formatDuration(date0, date0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = DateFormatUtil.formatDurationOnSecond(0L);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = DateFormatUtil.formatDate("", 9223372036854775807L);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      String string0 = DateFormatUtil.formatFriendlyTimeSpanByNow(date0);
      assertEquals("\u521A\u521A", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Date date0 = DateFormatUtil.pareDate("", "");
      // Undeclared exception!
      try { 
        DateFormatUtil.formatDate("00java.lang.StringBuilder@000000002400java.lang.StringBuilder@000000002500java.lang.StringBuilder@0000000026000", date0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern component: j
         //
         verifyException("org.apache.commons.lang3.time.FastDatePrinter", e);
      }
  }
}
