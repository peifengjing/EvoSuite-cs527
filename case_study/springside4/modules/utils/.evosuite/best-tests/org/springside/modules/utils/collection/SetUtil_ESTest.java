/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:40:07 GMT 2017
 */

package org.springside.modules.utils.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springside.modules.utils.collection.SetUtil;
import org.springside.modules.utils.collection.type.ConcurrentHashSet;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SetUtil_ESTest extends SetUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConcurrentHashSet<Boolean> concurrentHashSet0 = SetUtil.newConcurrentHashSet();
      Set<Boolean> set0 = SetUtil.unmodifiableSet((Set<? extends Boolean>) concurrentHashSet0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[0];
      HashSet<Boolean> hashSet0 = SetUtil.newHashSet(booleanArray0);
      assertTrue(hashSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashSet<Boolean> hashSet0 = SetUtil.newHashSet();
      Set<Boolean> set0 = SetUtil.emptySetIfNull((Set<Boolean>) hashSet0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.unionView((Set<? extends Boolean>) null, (Set<? extends Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // set1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.newSortedSet((Comparator<? super String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.newSetFromMap((Map<Integer, Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$SetFromMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.newHashSetWithCapacity((-638));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // expectedSize cannot be negative but was: -638
         //
         verifyException("com.google.common.collect.CollectPreconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.newHashSet((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.Sets", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.newHashSet((Iterable<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.collect.Sets", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object object0 = new Object();
      Set<Object> set0 = SetUtil.singletonSet(object0);
      // Undeclared exception!
      try { 
        SetUtil.intersectionView((Set<Boolean>) null, (Set<?>) set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // set1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashSet<Integer> hashSet0 = SetUtil.newHashSet();
      // Undeclared exception!
      try { 
        SetUtil.differenceView((Set<String>) null, (Set<?>) hashSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // set1
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Set<Integer> set0 = SetUtil.emptySetIfNull((Set<Integer>) null);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean[] booleanArray0 = new Boolean[6];
      HashSet<Boolean> hashSet0 = SetUtil.newHashSet(booleanArray0);
      Set<Boolean> set0 = SetUtil.emptySetIfNull((Set<Boolean>) hashSet0);
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Set<Integer> set0 = SetUtil.singletonSet(integer0);
      HashSet<Integer> hashSet0 = SetUtil.newHashSet((Iterable<? extends Integer>) set0);
      // Undeclared exception!
      try { 
        SetUtil.disjointView((Set<? extends Integer>) hashSet0, (Set<? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // set2
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConcurrentHashSet<Boolean> concurrentHashSet0 = SetUtil.newConcurrentHashSet();
      Set<Boolean> set0 = SetUtil.disjointView((Set<? extends Boolean>) concurrentHashSet0, (Set<? extends Boolean>) concurrentHashSet0);
      Set<Boolean> set1 = SetUtil.unionView((Set<? extends Boolean>) set0, (Set<? extends Boolean>) concurrentHashSet0);
      assertTrue(set1.equals((Object)set0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SetUtil setUtil0 = new SetUtil();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TreeSet<Integer> treeSet0 = SetUtil.newSortedSet();
      assertNotNull(treeSet0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Set<Object> set0 = SetUtil.emptySet();
      HashSet<Object> hashSet0 = SetUtil.newHashSet((Iterable<?>) set0);
      Set<Object> set1 = SetUtil.intersectionView((Set<Object>) hashSet0, (Set<?>) set0);
      assertTrue(set1.equals((Object)set0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashSet<Object> hashSet0 = SetUtil.newHashSet();
      Set<Object> set0 = SetUtil.differenceView((Set<Object>) hashSet0, (Set<?>) hashSet0);
      assertNotNull(set0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Comparator<Boolean> comparator0 = (Comparator<Boolean>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<Boolean> treeSet0 = SetUtil.newSortedSet((Comparator<? super Boolean>) comparator0);
      assertNotNull(treeSet0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        SetUtil.unmodifiableSet((Set<? extends Boolean>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashSet<Integer> hashSet0 = SetUtil.newHashSetWithCapacity(0);
      assertEquals(0, hashSet0.size());
  }
}
