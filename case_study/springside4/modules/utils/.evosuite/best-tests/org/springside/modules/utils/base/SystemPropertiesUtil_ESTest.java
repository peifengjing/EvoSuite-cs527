/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 19:55:44 GMT 2017
 */

package org.springside.modules.utils.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.base.SystemPropertiesUtil;
import org.springside.modules.utils.base.SystemPropertiesUtilTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SystemPropertiesUtil_ESTest extends SystemPropertiesUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SystemPropertiesUtilTest.TestPropertiesListener systemPropertiesUtilTest_TestPropertiesListener0 = new SystemPropertiesUtilTest.TestPropertiesListener((String) null);
      systemPropertiesUtilTest_TestPropertiesListener0.onChange("envName ", "4.");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("uotUJxbm}~iq'o.Xj", "", "");
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("should fail before", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("onTZ?:!dU+", "@UhI}{DWv<#swSQ8Mt");
      assertEquals("@UhI}{DWv<#swSQ8Mt", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Long long0 = new Long(1L);
      Long long1 = SystemPropertiesUtil.getLong("VAD%#d_)ML5WeYvZSq", "Gl*Kq|'!Gx7", long0);
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = SystemPropertiesUtil.getLong("}LfsJ#uuGVE@4", "}LfsJ#uuGVE@4", long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-4056L));
      Long long1 = SystemPropertiesUtil.getLong("H", "H", long0);
      assertEquals((-4056L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Long long0 = new Long((-624L));
      Long long1 = SystemPropertiesUtil.getLong("org.springside.modules.utils.base.SystemPropertiesUtil$ListenableProperties", "LO;J", long0);
      assertEquals((-624L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = SystemPropertiesUtil.getLong("B^f;C", (Long) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = SystemPropertiesUtil.getLong("", long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-402L));
      Long long1 = SystemPropertiesUtil.getLong("rwx5NPFW", long0);
      assertEquals((-402L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = SystemPropertiesUtil.getInteger("Qo)e_(cApJ{f657=A", "123", (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = SystemPropertiesUtil.getInteger("mq6n[eVw]~TgmQ<", ">#X^}GA~H$O0=f2{GY", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Integer integer0 = new Integer(309);
      Integer integer1 = SystemPropertiesUtil.getInteger("w`a'l%#J,Ird", "&JtNJH~aesO", integer0);
      assertEquals(309, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = SystemPropertiesUtil.getInteger("%.2f", (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = SystemPropertiesUtil.getInteger("", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(757);
      Integer integer1 = SystemPropertiesUtil.getInteger(";", integer0);
      assertEquals(757, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = SystemPropertiesUtil.getDouble("HOME", "HOME", double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Double double0 = new Double(1855.400398719423);
      Double double1 = SystemPropertiesUtil.getDouble("envName ", "envName ", double0);
      assertEquals(1855.400398719423, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Double double0 = new Double((-11.39760269984312));
      Double double1 = SystemPropertiesUtil.getDouble("'ix4-6F", "ss_test", double0);
      assertEquals((-11.39760269984312), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = SystemPropertiesUtil.getDouble("jW4", (Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Double double0 = new Double(0.0);
      Double double1 = SystemPropertiesUtil.getDouble("2#(8\"HyC]}yH\"WlhCR", double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Double double0 = new Double((-1297.383911));
      Double double1 = SystemPropertiesUtil.getDouble("B^f;C", double0);
      assertEquals((-1297.383911), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = SystemPropertiesUtil.getBoolean(">=lL]tkHf", ">=lL]tkHf", boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Boolean boolean0 = SystemPropertiesUtil.getBoolean("B^f;C", (Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = SystemPropertiesUtil.getBoolean(">=lL]tkHf", boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Boolean boolean0 = SystemPropertiesUtil.getBoolean("org.springside.modules.utils.base.SystemPropertiesUtil$ListenableProperties");
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString((String) null, "|Tvhc@LBYDo#H =N)N", "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString("", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString((String) null, "pvB4[r)(S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Long long0 = new Long((-276L));
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getLong((String) null, "", long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Long long0 = new Long((-1392L));
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getLong("", "", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getLong((String) null, "Fvs<Vk7.]L(Fge%", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // envName Fvs<Vk7.]L(Fge% has dot which is not valid
         //
         verifyException("org.springside.modules.utils.base.SystemPropertiesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(3773);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getInteger((String) null, "L9aC=,JggcD", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Integer integer0 = new Integer((-2028361258));
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getInteger("", "", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble((String) null, "", (Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double(1014.650317);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble("", "", double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble("", ">Ykfb?.5Y~X2", double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // envName >Ykfb?.5Y~X2 has dot which is not valid
         //
         verifyException("org.springside.modules.utils.base.SystemPropertiesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Double double0 = new Double((-1934.0327362));
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble((String) null, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble("", double0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getDouble("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Boolean boolean0 = new Boolean("456");
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean((String) null, "p5^^[*z}3;)[&jZRz=", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean("", "o", boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Boolean boolean0 = new Boolean((String) null);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean("EP", (String) null, boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // envName null has dot which is not valid
         //
         verifyException("org.springside.modules.utils.base.SystemPropertiesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean((String) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean("", boolean0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUtil.ListenableProperties systemPropertiesUtil_ListenableProperties0 = new SystemPropertiesUtil.ListenableProperties(properties0);
      SystemPropertiesUtilTest.TestPropertiesListener systemPropertiesUtilTest_TestPropertiesListener0 = new SystemPropertiesUtilTest.TestPropertiesListener("J");
      systemPropertiesUtil_ListenableProperties0.register(systemPropertiesUtilTest_TestPropertiesListener0);
      Object object0 = systemPropertiesUtil_ListenableProperties0.setProperty("'ix4-6F", "J");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Properties properties0 = new Properties();
      SystemPropertiesUtil.ListenableProperties systemPropertiesUtil_ListenableProperties0 = new SystemPropertiesUtil.ListenableProperties(properties0);
      SystemPropertiesUtilTest.TestPropertiesListener systemPropertiesUtilTest_TestPropertiesListener0 = new SystemPropertiesUtilTest.TestPropertiesListener("ss_test");
      systemPropertiesUtil_ListenableProperties0.register(systemPropertiesUtilTest_TestPropertiesListener0);
      Object object0 = systemPropertiesUtil_ListenableProperties0.setProperty("ss_test", "'ix4-6F");
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getString("gmg", "org.springside.modules.utils.base.SystemPropertiesUtil$ListenableProperties", "gmg");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // envName org.springside.modules.utils.base.SystemPropertiesUtil$ListenableProperties has dot which is not valid
         //
         verifyException("org.springside.modules.utils.base.SystemPropertiesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Integer integer0 = SystemPropertiesUtil.getInteger((String) null);
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getInteger((String) null, (String) null, integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // envName null has dot which is not valid
         //
         verifyException("org.springside.modules.utils.base.SystemPropertiesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SystemPropertiesUtilTest.TestPropertiesListener systemPropertiesUtilTest_TestPropertiesListener0 = new SystemPropertiesUtilTest.TestPropertiesListener("HOME");
      SystemPropertiesUtil.registerSystemPropertiesListener(systemPropertiesUtilTest_TestPropertiesListener0);
      SystemPropertiesUtil.registerSystemPropertiesListener(systemPropertiesUtilTest_TestPropertiesListener0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Boolean boolean0 = SystemPropertiesUtil.getBoolean("{,h)%.&$^a@V", "envName ", (Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Boolean boolean0 = new Boolean("g_40hRr*7Y2~`Rn|&|");
      Boolean boolean1 = SystemPropertiesUtil.getBoolean("HOME", "HOME", boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Double double0 = SystemPropertiesUtil.getDouble("7T=l[<Gz_", "Mk>", (Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Long long0 = SystemPropertiesUtil.getLong("c-f7>?RRr~sV&Nan!O<", "c-f7>?RRr~sV&Nan!O<", (Long) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Integer integer0 = new Integer((-2092));
      Integer integer1 = SystemPropertiesUtil.getInteger("M>g:R", "M>g:R", integer0);
      assertEquals((-2092), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("org.springside.modules.utils.base.SystemPropertiesUtil$ListenableProperties", "HOME", "2.1");
      assertEquals("/Users/Peifeng", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("|Tvhc@LBYDo#H =N)N", "Minimum abbreviation width with offset is 7", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Double double0 = new Double(1.1);
      Double double1 = SystemPropertiesUtil.getDouble("HOME", double0);
      assertEquals(1.1, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SystemPropertiesUtil systemPropertiesUtil0 = new SystemPropertiesUtil();
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("2.1", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      String string0 = SystemPropertiesUtil.getString("|Tvhc@LBYDo#H =N)N");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Double double0 = SystemPropertiesUtil.getDouble("c-f7>?RRr~sV&Nan!O<");
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Integer integer0 = new Integer((-2781));
      Integer integer1 = SystemPropertiesUtil.getInteger("opQ)", integer0);
      assertEquals((-2781), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      // Undeclared exception!
      try { 
        SystemPropertiesUtil.getBoolean("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Long long0 = new Long(6851L);
      Long long1 = SystemPropertiesUtil.getLong("", long0);
      assertEquals(6851L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Long long0 = SystemPropertiesUtil.getLong("c-f7>?RRr~sV&Nan!O<");
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Boolean boolean0 = new Boolean("456");
      Boolean boolean1 = SystemPropertiesUtil.getBoolean("456", boolean0);
      assertFalse(boolean1);
  }
}
