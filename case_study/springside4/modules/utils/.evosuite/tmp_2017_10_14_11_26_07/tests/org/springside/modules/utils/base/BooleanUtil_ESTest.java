/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:27:36 GMT 2017
 */

package org.springside.modules.utils.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.base.BooleanUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BooleanUtil_ESTest extends BooleanUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject("");
      Boolean boolean1 = BooleanUtil.negate(boolean0);
      Boolean boolean2 = BooleanUtil.toBooleanObject((String) null, boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject("true");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = BooleanUtil.toBoolean("true");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject("Tb{U6[c");
      Boolean boolean1 = BooleanUtil.negate(boolean0);
      Boolean boolean2 = BooleanUtil.parseGeneralString("", boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.parseGeneralString("");
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.parseGeneralString("false");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      booleanArray0[0] = true;
      boolean boolean0 = BooleanUtil.or(booleanArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[2];
      booleanArray0[0] = true;
      booleanArray0[1] = true;
      boolean boolean0 = BooleanUtil.and(booleanArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtil.parseGeneralString((String) null, (Boolean) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.BooleanUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtil.or((boolean[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        BooleanUtil.and((boolean[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Array must not be null
         //
         verifyException("org.apache.commons.lang3.BooleanUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = BooleanUtil.negate(false);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = BooleanUtil.negate(true);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject((String) null, (Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject((String) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[2];
      boolean boolean0 = BooleanUtil.and(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[5];
      boolean boolean0 = BooleanUtil.or(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.parseGeneralString("T");
      Boolean boolean1 = BooleanUtil.negate(boolean0);
      Boolean boolean2 = BooleanUtil.negate(boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BooleanUtil booleanUtil0 = new BooleanUtil();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = BooleanUtil.toBoolean("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.negate((Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = BooleanUtil.toBooleanObject("", (Boolean) null);
      Boolean boolean1 = BooleanUtil.parseGeneralString("m4zV|3TtP6ZX(h?e", boolean0);
      assertFalse(boolean1);
  }
}
