/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:40:45 GMT 2017
 */

package org.springside.modules.test.rule;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.Description;
import org.junit.runner.RunWith;
import org.springside.modules.test.rule.TestProgress;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestProgress_ESTest extends TestProgress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestProgress testProgress0 = new TestProgress();
      Description description0 = mock(Description.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(description0).getTestClass();
      // Undeclared exception!
      try { 
        testProgress0.starting(description0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.test.rule.TestProgress", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestProgress testProgress0 = new TestProgress();
      Description description0 = mock(Description.class, new ViolatedAssumptionAnswer());
      doReturn((Class) null).when(description0).getTestClass();
      // Undeclared exception!
      try { 
        testProgress0.finished(description0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.test.rule.TestProgress", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestProgress testProgress0 = new TestProgress();
      Class<String> class0 = String.class;
      Description description0 = mock(Description.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(description0).getMethodName();
      doReturn(class0).when(description0).getTestClass();
      testProgress0.starting(description0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TestProgress testProgress0 = new TestProgress();
      Class<Object> class0 = Object.class;
      Description description0 = mock(Description.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(description0).getMethodName();
      doReturn(class0).when(description0).getTestClass();
      testProgress0.finished(description0);
  }
}
