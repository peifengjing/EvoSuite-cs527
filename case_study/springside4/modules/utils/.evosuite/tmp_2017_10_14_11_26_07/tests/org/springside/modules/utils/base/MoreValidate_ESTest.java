/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 14 20:05:08 GMT 2017
 */

package org.springside.modules.utils.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springside.modules.utils.base.MoreValidate;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MoreValidate_ESTest extends MoreValidate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        MoreValidate.positive("", (double) integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (0.0) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-17L));
      // Undeclared exception!
      try { 
        MoreValidate.positive("y*De)_>", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // y*De)_> (-17) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("a<G2\" =?;&D,`(l", (long) 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // a<G2\" =?;&D,`(l (0) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = new Integer((-18));
      // Undeclared exception!
      try { 
        MoreValidate.positive("~", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ~ (-18) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("C{", 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // C{ (0) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Long long0 = new Long(2135938036);
      Long long1 = MoreValidate.positive("", long0);
      assertEquals(2135938036L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Integer integer1 = MoreValidate.positive("7~P*M4[]l~PNx@", integer0);
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(2142154904);
      Integer integer1 = MoreValidate.positive("", integer0);
      assertEquals(2142154904, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Long long0 = new Long(0L);
      Long long1 = MoreValidate.nonNegative("f*[80V", long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Long long0 = new Long(2135938036);
      Long long1 = MoreValidate.nonNegative("", long0);
      assertEquals(2135938036L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Integer integer1 = MoreValidate.nonNegative("a<G2\" =?;&D,`(l", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(2606);
      Integer integer1 = MoreValidate.nonNegative("/06JGnR*", integer0);
      assertEquals(2606, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      long long0 = MoreValidate.nonNegative("", 0L);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = MoreValidate.nonNegative("", 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = MoreValidate.nonNegative(") must be >= 0", (double) 0L);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive((String) null, (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("", (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative("", (Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative((String) null, (Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative("MCD:/?Q", (double) (-2145972398));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MCD:/?Q (-2.145972398E9) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = MoreValidate.nonNegative("", 709.145);
      assertEquals(709.145, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Long long0 = new Long((-77L));
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative(";", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // ; (-77) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Long long0 = new Long(548L);
      Long long1 = MoreValidate.nonNegative((String) null, long0);
      assertEquals(548L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative("b-X_fL|}7", (-3733L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // b-X_fL|}7 (-3733) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      long long0 = MoreValidate.nonNegative("", 548L);
      assertEquals(548L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Integer integer0 = new Integer((-6205));
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative("", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (-6205) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Integer integer0 = new Integer(2135938036);
      Integer integer1 = MoreValidate.nonNegative("a<G2\" =?;&D,`(l", integer0);
      assertEquals(2135938036, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.nonNegative("j)[j*o$xs9TIpc", (-3740));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // j)[j*o$xs9TIpc (-3740) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = MoreValidate.nonNegative("O#8XUh6`d01iqH]K=", 2135938036);
      assertEquals(2135938036, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("", (-12.0));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (-12.0) must be >= 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      double double0 = MoreValidate.positive("O#8XUh6`d01iqH]K=", (double) 2135938036);
      assertEquals(2.135938036E9, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        MoreValidate.positive("xo#N", long0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // xo#N (0) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Long long0 = new Long(548L);
      Long long1 = MoreValidate.positive("", long0);
      assertEquals(548L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("", (-372L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (-372) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      long long0 = MoreValidate.positive((String) null, 548L);
      assertEquals(548L, long0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        MoreValidate.positive("", integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (0) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Integer integer0 = new Integer(1073741824);
      Integer integer1 = MoreValidate.positive("k@^f2UD2ft", integer0);
      assertEquals(1073741824, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        MoreValidate.positive("", (-1481));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         //  (-1481) must be > 0
         //
         verifyException("org.springside.modules.utils.base.MoreValidate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = MoreValidate.positive((String) null, 5831);
      assertEquals(5831, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MoreValidate moreValidate0 = new MoreValidate();
  }
}
