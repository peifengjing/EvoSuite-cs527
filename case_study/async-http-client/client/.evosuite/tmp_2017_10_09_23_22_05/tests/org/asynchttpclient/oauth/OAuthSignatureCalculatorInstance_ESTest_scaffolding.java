/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Oct 10 07:30:59 GMT 2017
 */

package org.asynchttpclient.oauth;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class OAuthSignatureCalculatorInstance_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OAuthSignatureCalculatorInstance_ESTest_scaffolding.class.getClassLoader() ,
      "io.netty.util.HashingStrategy$1",
      "io.netty.util.concurrent.ScheduledFutureTask",
      "org.asynchttpclient.channel.ChannelPoolPartitioning",
      "io.netty.handler.codec.http.HttpHeaders",
      "org.asynchttpclient.Request",
      "io.netty.handler.codec.http.HttpMessage",
      "io.netty.util.concurrent.ScheduledFuture",
      "io.netty.util.AsciiString",
      "org.asynchttpclient.util.Utf8UrlEncoder",
      "org.asynchttpclient.Realm$Builder$1",
      "io.netty.handler.codec.http.HttpObject",
      "io.netty.util.concurrent.GlobalEventExecutor",
      "io.netty.util.CharsetUtil",
      "io.netty.handler.codec.http.DefaultHttpHeaders$2",
      "io.netty.handler.codec.http.DefaultHttpHeaders$1",
      "io.netty.resolver.AddressResolver",
      "io.netty.util.internal.logging.Slf4JLoggerFactory",
      "io.netty.resolver.NameResolver",
      "io.netty.util.AsciiString$CharEqualityComparator",
      "io.netty.resolver.InetNameResolver",
      "io.netty.handler.codec.DefaultHeaders",
      "io.netty.resolver.SimpleNameResolver",
      "io.netty.handler.codec.DefaultHeadersImpl",
      "org.asynchttpclient.Realm$AuthScheme",
      "io.netty.handler.codec.http.EmptyHttpHeaders",
      "io.netty.handler.codec.Headers",
      "io.netty.util.concurrent.DefaultPromise",
      "io.netty.util.ByteProcessor$1",
      "io.netty.handler.codec.http.DefaultHttpHeaders",
      "io.netty.resolver.DefaultNameResolver",
      "io.netty.util.concurrent.AbstractScheduledEventExecutor",
      "io.netty.util.concurrent.ProgressivePromise",
      "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator",
      "io.netty.util.internal.logging.InternalLogger",
      "org.asynchttpclient.util.Base64",
      "io.netty.util.concurrent.EventExecutor",
      "org.asynchttpclient.request.body.generator.BodyGenerator",
      "org.asynchttpclient.oauth.ConsumerKey",
      "io.netty.util.AsciiString$2",
      "io.netty.handler.codec.http.HttpVersion",
      "org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance",
      "org.asynchttpclient.Realm",
      "org.asynchttpclient.oauth.RequestToken",
      "org.asynchttpclient.RequestBuilderBase",
      "io.netty.util.concurrent.CompleteFuture",
      "io.netty.util.concurrent.ProgressiveFuture",
      "io.netty.util.internal.InternalThreadLocalMap",
      "io.netty.util.ByteProcessor$2",
      "io.netty.handler.codec.CharSequenceValueConverter",
      "io.netty.util.concurrent.PromiseTask",
      "io.netty.util.AsciiString$1",
      "io.netty.util.concurrent.AbstractEventExecutor",
      "io.netty.util.HashingStrategy",
      "io.netty.util.internal.logging.AbstractInternalLogger",
      "io.netty.util.concurrent.ImmediateEventExecutor",
      "io.netty.util.internal.MathUtil",
      "io.netty.buffer.ByteBuf",
      "io.netty.util.internal.logging.Slf4JLogger",
      "io.netty.util.concurrent.FastThreadLocal",
      "io.netty.util.concurrent.ImmediateEventExecutor$2",
      "io.netty.util.concurrent.ImmediateEventExecutor$1",
      "io.netty.handler.codec.DefaultHeaders$NameValidator",
      "io.netty.util.concurrent.BlockingOperationException",
      "io.netty.handler.codec.DefaultHeaders$HeaderEntry",
      "org.asynchttpclient.RequestBuilder",
      "io.netty.handler.codec.DefaultHeaders$NameValidator$1",
      "io.netty.util.concurrent.AbstractFuture",
      "io.netty.util.concurrent.Promise",
      "io.netty.handler.codec.http.HttpHeaderValues",
      "io.netty.util.ByteProcessor$IndexOfProcessor",
      "io.netty.util.internal.UnpaddedInternalThreadLocalMap",
      "io.netty.util.ByteProcessor",
      "org.asynchttpclient.oauth.Parameters",
      "io.netty.util.concurrent.EventExecutorGroup",
      "io.reactivex.annotations.BackpressureKind",
      "io.netty.util.ReferenceCounted",
      "io.netty.util.internal.SystemPropertyUtil",
      "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter",
      "org.asynchttpclient.util.StringBuilderPool",
      "io.netty.handler.codec.ValueConverter",
      "org.asynchttpclient.uri.Uri",
      "io.netty.handler.codec.http.HttpHeaderNames",
      "io.netty.util.internal.logging.InternalLoggerFactory",
      "io.netty.util.concurrent.Future",
      "io.netty.handler.codec.DecoderResultProvider",
      "org.asynchttpclient.Realm$Builder",
      "io.netty.handler.codec.http.HttpUtil",
      "io.netty.util.ByteProcessor$IndexNotOfProcessor",
      "io.netty.util.concurrent.FailedFuture"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OAuthSignatureCalculatorInstance_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance",
      "org.asynchttpclient.util.StringBuilderPool",
      "org.asynchttpclient.util.Base64",
      "org.asynchttpclient.util.Utf8UrlEncoder",
      "io.netty.util.internal.MathUtil",
      "io.netty.util.AsciiString",
      "io.netty.handler.codec.http.HttpHeaderNames",
      "io.reactivex.annotations.BackpressureKind",
      "org.asynchttpclient.uri.Uri",
      "io.netty.handler.codec.http.HttpHeaderValues",
      "io.netty.handler.codec.http.HttpUtil",
      "io.netty.handler.codec.http.EmptyHttpHeaders",
      "io.netty.handler.codec.http.HttpHeaders",
      "io.netty.handler.codec.http.DefaultHttpHeaders",
      "io.netty.handler.codec.DefaultHeaders",
      "io.netty.handler.codec.CharSequenceValueConverter",
      "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverter",
      "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator",
      "org.asynchttpclient.Realm$Builder",
      "org.asynchttpclient.Realm"
    );
  }
}
