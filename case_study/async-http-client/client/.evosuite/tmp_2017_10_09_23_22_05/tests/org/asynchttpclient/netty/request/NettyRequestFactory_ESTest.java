/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 06:34:59 GMT 2017
 */

package org.asynchttpclient.netty.request;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.handler.codec.http.CombinedHttpHeaders;
import io.netty.handler.codec.http.EmptyHttpHeaders;
import io.netty.handler.codec.http.HttpHeaders;
import java.util.List;
import org.asynchttpclient.AsyncHttpClientConfig;
import org.asynchttpclient.Realm;
import org.asynchttpclient.Request;
import org.asynchttpclient.netty.request.NettyRequestFactory;
import org.asynchttpclient.proxy.ProxyServer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NettyRequestFactory_ESTest extends NettyRequestFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      EmptyHttpHeaders emptyHttpHeaders0 = EmptyHttpHeaders.INSTANCE;
      // Undeclared exception!
      try { 
        nettyRequestFactory0.setProxyAuthorizationHeader(emptyHttpHeaders0, "w/UV+=rskvbku8U4qr!");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // read only
         //
         verifyException("io.netty.handler.codec.http.EmptyHttpHeaders", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      // Undeclared exception!
      try { 
        nettyRequestFactory0.setProxyAuthorizationHeader((HttpHeaders) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.NettyRequestFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      // Undeclared exception!
      try { 
        nettyRequestFactory0.setProxyAuthorizationHeader(combinedHttpHeaders0, "\n\nRequest {}\n\nResponse {}\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // only ' ' and '\\t' are allowed after '\\n': 
         // 
         // Request {}
         // 
         // Response {}
         //
         verifyException("io.netty.handler.codec.http.DefaultHttpHeaders$HeaderValueConverterAndValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      ProxyServer proxyServer0 = new ProxyServer("6=~gvqy'", 0, 60, (Realm) null, (List<String>) null);
      // Undeclared exception!
      try { 
        nettyRequestFactory0.newNettyRequest((Request) null, true, proxyServer0, (Realm) null, (Realm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.NettyRequestFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      // Undeclared exception!
      try { 
        nettyRequestFactory0.addAuthorizationHeader((HttpHeaders) null, "|vd;hb)v0P3p[ ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.NettyRequestFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NettyRequestFactory nettyRequestFactory0 = null;
      try {
        nettyRequestFactory0 = new NettyRequestFactory((AsyncHttpClientConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.NettyRequestFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(false);
      nettyRequestFactory0.setProxyAuthorizationHeader(combinedHttpHeaders0, "\n\nRequest {}\n\nResponse {}\n");
      assertEquals(1, combinedHttpHeaders0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      nettyRequestFactory0.setProxyAuthorizationHeader(combinedHttpHeaders0, (String) null);
      assertTrue(combinedHttpHeaders0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      CombinedHttpHeaders combinedHttpHeaders0 = new CombinedHttpHeaders(true);
      nettyRequestFactory0.addAuthorizationHeader(combinedHttpHeaders0, (String) null);
      assertTrue(combinedHttpHeaders0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(asyncHttpClientConfig0).isUseLaxCookieEncoder();
      NettyRequestFactory nettyRequestFactory0 = new NettyRequestFactory(asyncHttpClientConfig0);
      EmptyHttpHeaders emptyHttpHeaders0 = EmptyHttpHeaders.INSTANCE;
      // Undeclared exception!
      try { 
        nettyRequestFactory0.addAuthorizationHeader(emptyHttpHeaders0, "ubV~QJS3[v7K>:M/6d");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // read only
         //
         verifyException("io.netty.handler.codec.http.EmptyHttpHeaders", e);
      }
  }
}
