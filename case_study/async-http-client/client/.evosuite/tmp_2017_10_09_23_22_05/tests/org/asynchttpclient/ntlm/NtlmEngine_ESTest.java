/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 07:00:19 GMT 2017
 */

package org.asynchttpclient.ntlm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.ntlm.NtlmEngine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NtlmEngine_ESTest extends NtlmEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte) (-24);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte) (-14);
      byteArray0[6] = (byte)2;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("", (String) null, (String) null, "", byteArray0, (byte) (-14), "", (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$Type3Message", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        NtlmEngine.writeULong((byte[]) null, 2602, 2602);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NtlmEngine.H(688, 5, 5);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)40;
      byteArray0[6] = (byte)1;
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte) (-2);
      byteArray0[5] = (byte)40;
      byteArray0[6] = (byte) (-74);
      byteArray0[7] = (byte)78;
      byte[] byteArray1 = new byte[0];
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("p", "", "NHLeqF:K[", "org.apache.commons.io.filefilter.WildcardFileFilter", byteArray0, (byte)40, "", byteArray1);
      ntlmEngine_Type3Message0.prepareResponse(176, (byte)60);
      ntlmEngine_Type3Message0.type2Flags = 3776;
      ntlmEngine_Type3Message0.getResponse();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte) (-106);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte) (-69);
      byteArray0[5] = (byte)2;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message((String) null, (String) null, "xQIbQOZ2Fa", "'uRtPX{", byteArray0, (byte) (-106), "!gJv[t~=ox.jj8", byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NtlmEngine.rotintlft(0, 2254);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      ntlmEngine_MD4_0.A = (-340);
      ntlmEngine_MD4_0.count = 1485L;
      NtlmEngine.F(7, (-56613888), 3);
      ntlmEngine_MD4_0.processBuffer();
      int[] intArray0 = new int[9];
      intArray0[0] = (-56613888);
      intArray0[1] = 3;
      intArray0[2] = 3;
      intArray0[3] = (-56613888);
      intArray0[4] = 0;
      intArray0[5] = 7;
      intArray0[6] = 386;
      intArray0[7] = 3;
      intArray0[8] = 0;
      // Undeclared exception!
      try { 
        ntlmEngine_MD4_0.round2(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$MD4", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        ntlmEngine_MD4_0.round2(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$MD4", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      byte[] byteArray0 = new byte[2];
      ntlmEngine_MD4_0.A = 111;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)8;
      ntlmEngine_MD4_0.update(byteArray0);
      ntlmEngine_MD4_0.count = (-1564L);
      ntlmEngine_MD4_0.getOutput();
      NtlmEngine.Type2Message ntlmEngine_Type2Message0 = null;
      try {
        ntlmEngine_Type2Message0 = new NtlmEngine.Type2Message("org.apache.commons.io.filefilter.FileFileFilter");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NtlmEngine.rotintlft((-2624), (-2624));
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte) (-69);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)8;
      byteArray0[6] = (byte)72;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message((String) null, "NTLM: Message too short", (String) null, "NTLM: Message too short", byteArray0, (-805), (String) null, byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-15);
      byteArray0[2] = (byte)8;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("NTLM message decoding error - packet too short", "NTLM message decoding error - packet too short", "NTLM message decoding error - packet too short", "NTLM message decoding error - packet too short", byteArray0, 57, "", byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NtlmEngine.H(8, 8, 8);
      NtlmEngine.rotintlft(8, 7);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-48);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)93;
      byteArray0[4] = (byte)92;
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte) (-82);
      byteArray0[7] = (byte)124;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("Unicode not supported", "NTLM authentication - buffer too small for DWORD", "NTLM authentication - buffer too small for DWORD", "Vtl(Yq7X", byteArray0, (byte)92, "NTLM authentication - buffer too small for DWORD", byteArray0);
      // Undeclared exception!
      try { 
        ntlmEngine_Type3Message0.addBytes(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NtlmEngine.rotintlft((-2340), (-2340));
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      int[] intArray0 = new int[8];
      intArray0[0] = (-2340);
      intArray0[1] = (-2340);
      intArray0[2] = (-2340);
      intArray0[3] = (-805306515);
      intArray0[4] = (-805306515);
      intArray0[5] = (-2340);
      intArray0[6] = (-805306515);
      intArray0[7] = (-2340);
      // Undeclared exception!
      try { 
        ntlmEngine_MD4_0.round3(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$MD4", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)41;
      byteArray0[1] = (byte)39;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("Random generator not available", "Random generator not available", "Random generator not available", "Random generator not available", byteArray0, (byte)39, "Random generator not available", byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NtlmEngine.G((-3877), (-3877), 3348);
      NtlmEngine.F(3348, 1584, (-3877));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[2];
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message((String) null, (String) null, (String) null, (String) null, byteArray0, (byte) (-72), (String) null, byteArray1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte) (-76);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte) (-115);
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("", "", "", "", byteArray0, (byte)90, "", byteArray0);
      ntlmEngine_Type3Message0.getResponse();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NtlmEngine ntlmEngine0 = NtlmEngine.INSTANCE;
      // Undeclared exception!
      try { 
        ntlmEngine0.generateType3Msg("", "", "", "PathSpec ", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NtlmEngine ntlmEngine0 = NtlmEngine.INSTANCE;
      ntlmEngine0.generateType1Msg();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NtlmEngine.F(6, 6, 6);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NtlmEngine ntlmEngine0 = new NtlmEngine();
      // Undeclared exception!
      try { 
        ntlmEngine0.generateType3Msg("", "", "", "CCM+uUN<?BALu*E>", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      int[] intArray0 = new int[1];
      ntlmEngine_MD4_0.B = 1373;
      intArray0[0] = 1373;
      // Undeclared exception!
      try { 
        ntlmEngine_MD4_0.round3(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$MD4", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NtlmEngine.H(4, (-2751), 4);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-26);
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("NTLM message decoding error - packet too short", "NTLM message decoding error - packet too short", "NTLM message decoding error - packet too short", "Bad pattern: ", byteArray0, (-2751), "U97w7=gL4@]C[``", byteArray0);
      NtlmEngine.G((-2751), 4, 32);
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      int[] intArray0 = new int[1];
      intArray0[0] = 2035;
      // Undeclared exception!
      try { 
        ntlmEngine_MD4_0.round1(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$MD4", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      ntlmEngine_MD4_0.getOutput();
      NtlmEngine.Type2Message ntlmEngine_Type2Message0 = null;
      try {
        ntlmEngine_Type2Message0 = new NtlmEngine.Type2Message("Bj<lM<WFZ5tr");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM message expected - instead got unrecognized bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte) (-14);
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte) (-115);
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("^<", "^<", "", "^<", byteArray0, (byte) (-14), "", byteArray0);
      ntlmEngine_Type3Message0.getResponse();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte) (-76);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)2;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("^<", "^<", "", "^<", byteArray0, (byte)5, "", byteArray0);
      ntlmEngine_Type3Message0.getResponse();
      ntlmEngine_Type3Message0.getResponse();
      NtlmEngine.writeULong(byteArray0, 19, (byte)2);
      NtlmEngine.H(8388608, (byte)0, (-293));
      NtlmEngine.Type2Message ntlmEngine_Type2Message0 = null;
      try {
        ntlmEngine_Type2Message0 = new NtlmEngine.Type2Message("TlRMTVNTUAADAAAAGAAYAEgAAAAYABgAYAAAAAQABAB4AAAAAAAAAHwAAAAEAAQAfAAAAAAAAACAAAAABQAAAgUBKAoAAAAPV0mhADr7f/fSsjh79O8bOGWzzKoETOGEMGj/sNjCfxw7jLzn9wQRRy4RrTwKmnj8XgA8AF4APAA=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM type 2 message expected - instead got type 3
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NtlmEngine ntlmEngine0 = new NtlmEngine();
      String string0 = "";
      String string1 = "zLc%V";
      String string2 = null;
      String string3 = "W3.Wa/gnHgs+Ii$z";
      try { 
        ntlmEngine0.generateType3Msg((String) null, "zLc%V", "yr4r7Hg", "", "W3.Wa/gnHgs+Ii$z");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM message expected - instead got unrecognized bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NtlmEngine ntlmEngine0 = new NtlmEngine();
      String string0 = "";
      String string1 = "zLc%V";
      String string2 = "75b8kamOFp";
      try { 
        ntlmEngine0.generateType3Msg((String) null, "zLc%V", "yr4r7Hg", "75b8kamOFp", "W3.Wa/gnHgs+Ii$z");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM message expected - instead got unrecognized bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)21;
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte) (-59);
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("", "", "\"A%P(tdlj", "", byteArray0, (byte) (-59), (String) null, byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = 6;
      NtlmEngine.H(6, 6, 6);
      NtlmEngine.Type2Message ntlmEngine_Type2Message0 = null;
      try {
        ntlmEngine_Type2Message0 = new NtlmEngine.Type2Message("r\"^#k`wY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM message decoding error - packet too short
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      NtlmEngine.H(6, 6, 6);
      NtlmEngine.Type2Message ntlmEngine_Type2Message0 = null;
      try {
        ntlmEngine_Type2Message0 = new NtlmEngine.Type2Message("r\"^#k`wY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // NTLM message decoding error - packet too short
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine$NTLMMessage", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)100;
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)77;
      byteArray0[5] = (byte)124;
      byteArray0[6] = (byte)110;
      byteArray0[8] = (byte)31;
      // Undeclared exception!
      try { 
        NtlmEngine.writeULong(byteArray0, (byte)32, 2600);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2600
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      String string0 = "H";
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byte byte0 = (byte) (-78);
      byteArray0[1] = (byte) (-78);
      byteArray0[2] = (byte)51;
      byteArray0[3] = (byte) (-25);
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = null;
      try {
        ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("P%}XSe3n.[-X", "P%}XSe3n.[-X", "H", "0qxU{:vq:)vxF@%", byteArray0, (byte) (-25), "F3s<_y8gB!C~V(r9S", byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input length not multiple of 8 bytes
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      NtlmEngine.G(4, 4, (-2828));
      NtlmEngine.MD4 ntlmEngine_MD4_0 = new NtlmEngine.MD4();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte) (-24);
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte)90;
      byteArray0[4] = (byte) (-59);
      byteArray0[5] = (byte)40;
      ntlmEngine_MD4_0.update(byteArray0);
      ntlmEngine_MD4_0.D = (-1054);
      ntlmEngine_MD4_0.processBuffer();
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-39);
      byteArray1[1] = (byte)124;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)40;
      byteArray1[4] = (byte)24;
      NtlmEngine.Type3Message ntlmEngine_Type3Message0 = new NtlmEngine.Type3Message("J0\"p_vgzWsJPF}%iz", "58e4LepQ", "58e4LepQ", "", byteArray1, (-2302), "J0\"p_vgzWsJPF}%iz", byteArray1);
      ntlmEngine_Type3Message0.getResponse();
      ntlmEngine_Type3Message0.getResponse();
      // Undeclared exception!
      try { 
        NtlmEngine.writeULong(byteArray1, 1650, (byte) (-39));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -39
         //
         verifyException("org.asynchttpclient.ntlm.NtlmEngine", e);
      }
  }
}
