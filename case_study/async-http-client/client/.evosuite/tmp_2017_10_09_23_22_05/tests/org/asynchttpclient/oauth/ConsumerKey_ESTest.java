/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 07:38:17 GMT 2017
 */

package org.asynchttpclient.oauth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.oauth.ConsumerKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConsumerKey_ESTest extends ConsumerKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("{Consumer key, key=", "{Consumer key, key=");
      consumerKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("5;Z(m^eEcw\"0W>!dvyl", (String) null);
      String string0 = consumerKey0.getSecret();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, "C-}MS\t");
      String string0 = consumerKey0.getSecret();
      assertEquals("C-}MS\t", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, (String) null);
      String string0 = consumerKey0.getPercentEncodedKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("", "");
      String string0 = consumerKey0.getPercentEncodedKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("{Consumer key, key=", "{Consumer key, key=");
      String string0 = consumerKey0.getKey();
      assertEquals("{Consumer key, key=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("", "");
      String string0 = consumerKey0.getKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("org.asynchttpclient.util.Utf8UrlEncoder", (String) null);
      ConsumerKey consumerKey1 = new ConsumerKey("org.asynchttpclient.util.Utf8UrlEncoder", "0123456789ABCDEF");
      // Undeclared exception!
      try { 
        consumerKey0.equals(consumerKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("N>e^M", "V?i]4");
      ConsumerKey consumerKey1 = new ConsumerKey("N>e^M", "N>e^M");
      boolean boolean0 = consumerKey0.equals(consumerKey1);
      assertEquals("N>e^M", consumerKey0.getKey());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("N>e^M", "V?i]4");
      ConsumerKey consumerKey1 = new ConsumerKey("N>egM", "N>egM");
      boolean boolean0 = consumerKey0.equals(consumerKey1);
      assertFalse(boolean0);
      assertEquals("V?i]4", consumerKey0.getSecret());
      assertEquals("N>e^M", consumerKey0.getKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("5", "5");
      ConsumerKey consumerKey1 = new ConsumerKey("5", "5");
      boolean boolean0 = consumerKey0.equals(consumerKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("{Consumer key, key=", "{Consumer key, key=");
      boolean boolean0 = consumerKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("", "");
      boolean boolean0 = consumerKey0.equals(consumerKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, "");
      boolean boolean0 = consumerKey0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey("5", "5");
      String string0 = consumerKey0.getPercentEncodedKey();
      assertEquals("5", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, "");
      String string0 = consumerKey0.toString();
      assertEquals("{Consumer key, key=null, secret=\"\"}", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, "");
      String string0 = consumerKey0.getSecret();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, (String) null);
      String string0 = consumerKey0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConsumerKey consumerKey0 = new ConsumerKey((String) null, "");
      // Undeclared exception!
      try { 
        consumerKey0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.oauth.ConsumerKey", e);
      }
  }
}
