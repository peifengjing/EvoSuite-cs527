/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 07:30:59 GMT 2017
 */

package org.asynchttpclient.oauth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.Request;
import org.asynchttpclient.oauth.ConsumerKey;
import org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance;
import org.asynchttpclient.oauth.RequestToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OAuthSignatureCalculatorInstance_ESTest extends OAuthSignatureCalculatorInstance_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuthSignatureCalculatorInstance oAuthSignatureCalculatorInstance0 = new OAuthSignatureCalculatorInstance();
      RequestToken requestToken0 = new RequestToken("\"", "\"");
      // Undeclared exception!
      try { 
        oAuthSignatureCalculatorInstance0.constructAuthHeader((ConsumerKey) null, requestToken0, "\"", 0L, "*");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuthSignatureCalculatorInstance oAuthSignatureCalculatorInstance0 = new OAuthSignatureCalculatorInstance();
      ConsumerKey consumerKey0 = new ConsumerKey("", "");
      RequestToken requestToken0 = new RequestToken("org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance", "org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance");
      // Undeclared exception!
      try { 
        oAuthSignatureCalculatorInstance0.signatureBaseString(consumerKey0, requestToken0, (Request) null, 0L, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.oauth.OAuthSignatureCalculatorInstance", e);
      }
  }
}
