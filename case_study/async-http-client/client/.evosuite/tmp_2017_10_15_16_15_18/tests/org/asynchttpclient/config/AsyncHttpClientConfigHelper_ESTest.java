/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 01:11:33 GMT 2017
 */

package org.asynchttpclient.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.config.AsyncHttpClientConfigHelper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncHttpClientConfigHelper_ESTest extends AsyncHttpClientConfigHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      String string0 = asyncHttpClientConfigHelper_Config0.getString("%P1Yr['[N2j~@!=C{u");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      // Undeclared exception!
      try { 
        asyncHttpClientConfigHelper_Config0.getStringArray("ahc-default.properties");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.config.AsyncHttpClientConfigHelper$Config", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = new AsyncHttpClientConfigHelper.Config();
      Integer integer0 = asyncHttpClientConfigHelper_Config0.getInteger("ahc.properties");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      AsyncHttpClientConfigHelper.reloadProperties();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AsyncHttpClientConfigHelper.reloadProperties();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config1 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      assertSame(asyncHttpClientConfigHelper_Config1, asyncHttpClientConfigHelper_Config0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AsyncHttpClientConfigHelper asyncHttpClientConfigHelper0 = new AsyncHttpClientConfigHelper();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      // Undeclared exception!
      try { 
        asyncHttpClientConfigHelper_Config0.getLong(":~RAj*L");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      // Undeclared exception!
      try { 
        asyncHttpClientConfigHelper_Config0.getInt("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = AsyncHttpClientConfigHelper.getAsyncHttpClientConfig();
      boolean boolean0 = asyncHttpClientConfigHelper_Config0.getBoolean("!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AsyncHttpClientConfigHelper.Config asyncHttpClientConfigHelper_Config0 = new AsyncHttpClientConfigHelper.Config();
      asyncHttpClientConfigHelper_Config0.reload();
  }
}
