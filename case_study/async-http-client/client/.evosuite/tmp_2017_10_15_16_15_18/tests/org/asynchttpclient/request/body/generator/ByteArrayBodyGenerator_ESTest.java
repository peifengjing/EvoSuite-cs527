/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 01:35:17 GMT 2017
 */

package org.asynchttpclient.request.body.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import io.netty.buffer.ByteBuf;
import org.asynchttpclient.request.body.Body;
import org.asynchttpclient.request.body.generator.ByteArrayBodyGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ByteArrayBodyGenerator_ESTest extends ByteArrayBodyGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBodyGenerator byteArrayBodyGenerator0 = new ByteArrayBodyGenerator(byteArray0);
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      ByteArrayBodyGenerator.ByteBody byteArrayBodyGenerator_ByteBody0 = byteArrayBodyGenerator0.new ByteBody();
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      ByteArrayBodyGenerator.ByteBody byteArrayBodyGenerator_ByteBody1 = byteArrayBodyGenerator0.new ByteBody();
      ByteBuf byteBuf0 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      byteArrayBodyGenerator0.createBody();
      ByteBuf byteBuf1 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf2 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn(1130).when(byteBuf2).writableBytes();
      doReturn(byteBuf1).when(byteBuf2).writeBytes(any(byte[].class) , anyInt() , anyInt());
      byteArrayBodyGenerator_ByteBody1.transferTo(byteBuf2);
      byteArrayBodyGenerator_ByteBody1.transferTo(byteBuf0);
      byteArrayBodyGenerator_ByteBody1.close();
      byteArrayBodyGenerator_ByteBody1.close();
      byteArrayBodyGenerator0.createBody();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayBodyGenerator byteArrayBodyGenerator0 = new ByteArrayBodyGenerator(byteArray0);
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator0.createBody();
      ByteArrayBodyGenerator byteArrayBodyGenerator1 = new ByteArrayBodyGenerator(byteArray0);
      ByteArrayBodyGenerator.ByteBody byteArrayBodyGenerator_ByteBody0 = byteArrayBodyGenerator1.new ByteBody();
      byteArrayBodyGenerator_ByteBody0.close();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      ByteArrayBodyGenerator byteArrayBodyGenerator0 = new ByteArrayBodyGenerator(byteArray0);
      ByteArrayBodyGenerator.ByteBody byteArrayBodyGenerator_ByteBody0 = byteArrayBodyGenerator0.new ByteBody();
      ByteBuf byteBuf0 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf1 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((-2316)).when(byteBuf1).writableBytes();
      doReturn(byteBuf0).when(byteBuf1).writeBytes(any(byte[].class) , anyInt() , anyInt());
      Body.BodyState body_BodyState0 = byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf1);
      byteArrayBodyGenerator0.createBody();
      ByteBuf byteBuf2 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf3 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((-2316)).when(byteBuf3).writableBytes();
      doReturn(byteBuf2).when(byteBuf3).writeBytes(any(byte[].class) , anyInt() , anyInt());
      byteArrayBodyGenerator_ByteBody0.close();
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf3);
      ByteBuf byteBuf4 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf5 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      byteArrayBodyGenerator_ByteBody0.close();
      ByteBuf byteBuf6 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf7 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((int)(byte)1).when(byteBuf7).writableBytes();
      doReturn(byteBuf6).when(byteBuf7).writeBytes(any(byte[].class) , anyInt() , anyInt());
      byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf7);
      byteArrayBodyGenerator0.createBody();
      Body.BodyState body_BodyState1 = byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf5);
      byteArrayBodyGenerator_ByteBody0.close();
      ByteBuf byteBuf8 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf9 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((-2316)).when(byteBuf9).writableBytes();
      doReturn(byteBuf8).when(byteBuf9).writeBytes(any(byte[].class) , anyInt() , anyInt());
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf9);
      byteArrayBodyGenerator0.createBody();
      byteArrayBodyGenerator_ByteBody0.getContentLength();
      byteArrayBodyGenerator_ByteBody0.getContentLength();
      byteArrayBodyGenerator_ByteBody0.getContentLength();
      byteArrayBodyGenerator_ByteBody0.getContentLength();
      byteArrayBodyGenerator_ByteBody0.getContentLength();
      byteArrayBodyGenerator0.createBody();
      ByteBuf byteBuf10 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf11 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((int)(byte)1).when(byteBuf11).writableBytes();
      doReturn(byteBuf10).when(byteBuf11).writeBytes(any(byte[].class) , anyInt() , anyInt());
      byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf11);
      ByteBuf byteBuf12 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      ByteBuf byteBuf13 = mock(ByteBuf.class, new ViolatedAssumptionAnswer());
      doReturn((int)(byte)1).when(byteBuf13).writableBytes();
      doReturn(byteBuf12).when(byteBuf13).writeBytes(any(byte[].class) , anyInt() , anyInt());
      Body.BodyState body_BodyState2 = byteArrayBodyGenerator_ByteBody0.transferTo(byteBuf13);
      assertSame(body_BodyState2, body_BodyState0);
      assertNotSame(body_BodyState2, body_BodyState1);
  }
}
