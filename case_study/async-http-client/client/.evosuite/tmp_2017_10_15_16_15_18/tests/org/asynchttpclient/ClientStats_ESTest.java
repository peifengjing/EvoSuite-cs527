/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:57:42 GMT 2017
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.asynchttpclient.ClientStats;
import org.asynchttpclient.HostStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClientStats_ESTest extends ClientStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats((-2015L), 12L);
      hashMap0.put("cv9W@BhYG~?", hostStats0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      assertEquals(12L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats((-354L), (-354L));
      hashMap0.put("8 |jY`B", hostStats0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      assertEquals((-354L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats(1L, 0L);
      hashMap0.put("", hostStats0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      HostStats hostStats0 = new HostStats((-2015L), 12L);
      hashMap0.put("cv9W@BhYG~?", hostStats0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals((-2003L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      HostStats hostStats0 = new HostStats(2369L, 2369L);
      hashMap0.put("", hostStats0);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      assertEquals(2369L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      HostStats hostStats0 = new HostStats((-1L), (-1L));
      hashMap0.put("LgO85#Bp&'jkNp", hostStats0);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("upB(e", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>(0, 643.958F);
      hashMap0.put("{#QbK^)0%cGeA", (HostStats) null);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      // Undeclared exception!
      try { 
        clientStats0.getTotalIdleConnectionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("IPgx'#IaNT`)", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.getTotalConnectionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      hashMap0.put("d0M 1|[Rhln", (HostStats) null);
      // Undeclared exception!
      try { 
        clientStats0.getTotalActiveConnectionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.stream.ReferencePipeline$5$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClientStats clientStats0 = null;
      try {
        clientStats0 = new ClientStats((Map<String, HostStats>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalIdleConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      long long0 = clientStats0.getTotalActiveConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      ClientStats clientStats1 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals(clientStats1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>(0, 643.958F);
      ClientStats clientStats0 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      boolean boolean0 = clientStats0.equals(clientStats0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      Object object0 = new Object();
      boolean boolean0 = clientStats0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      Map<String, HostStats> map0 = clientStats0.getStatsPerHost();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      String string0 = clientStats0.toString();
      assertEquals("There are 0 total connections, 0 are active and 0 are idle.", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, HostStats> hashMap0 = new HashMap<String, HostStats>();
      ClientStats clientStats0 = new ClientStats(hashMap0);
      clientStats0.hashCode();
  }
}
