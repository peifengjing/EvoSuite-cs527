/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 23:33:08 GMT 2017
 */

package org.asynchttpclient.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.asynchttpclient.Realm;
import org.asynchttpclient.Request;
import org.asynchttpclient.proxy.ProxyServer;
import org.asynchttpclient.uri.Uri;
import org.asynchttpclient.util.AuthenticatorUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlRun;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuthenticatorUtils_ESTest extends AuthenticatorUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Vector<String> vector0 = new Vector<String>();
      vector0.add("Negotiate");
      String string0 = AuthenticatorUtils.getHeaderWithPrefix(vector0, "");
      assertEquals("Negotiate", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add((String) null);
      // Undeclared exception!
      try { 
        AuthenticatorUtils.getHeaderWithPrefix(arrayList0, "2nV4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = AuthenticatorUtils.perRequestAuthorizationHeader((Request) null, (Realm) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ProxyServer proxyServer0 = new ProxyServer((String) null, (-2998), (-158), (Realm) null, arrayList0);
      String string0 = AuthenticatorUtils.perConnectionAuthorizationHeader((Request) null, proxyServer0, (Realm) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = AuthenticatorUtils.perRequestProxyAuthorizationHeader((Request) null, (Realm) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = AuthenticatorUtils.perConnectionProxyAuthorizationHeader((Request) null, (Realm) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Uri uri0 = new Uri(".?yfa", ".?yfa", ".?yfa", 2086, ".?yfa", ".?yfa");
      String string0 = AuthenticatorUtils.computeRealmURI(uri0, false, false);
      assertEquals(".?yfa?.?yfa", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Uri uri0 = new Uri(".?yfa", ".?yfa", ".?yfa", 2086, ".?yfa", ".?yfa");
      String string0 = AuthenticatorUtils.computeRealmURI(uri0, false, true);
      assertEquals(".?yfa", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Uri uri0 = new Uri(".?yfa", ".?yfa", ".?yfa", 2086, ".?yfa", ".?yfa");
      String string0 = AuthenticatorUtils.computeRealmURI(uri0, true, true);
      assertEquals(".?yfa://.?yfa@.?yfa:2086.?yfa", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Uri uri0 = new Uri("^qDX$}wnZ)Hqzs`ea", (String) null, "<%\"vOm,;g)-;cbp;+k", 0, "LATEST", "s1C");
      String string0 = AuthenticatorUtils.computeRealmURI(uri0, true, false);
      assertEquals("^qDX$}wnZ)Hqzs`ea://<%\"vOm,;g)-;cbp;+k:0LATEST?s1C", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        AuthenticatorUtils.computeRealmURI((Uri) null, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.AuthenticatorUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = AuthenticatorUtils.computeBasicAuthentication((Realm) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XmlRun xmlRun0 = new XmlRun();
      xmlRun0.onExclude("");
      List<String> list0 = xmlRun0.getExcludes();
      String string0 = AuthenticatorUtils.getHeaderWithPrefix(list0, "");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("Negotiate");
      String string0 = AuthenticatorUtils.getHeaderWithPrefix(arrayList0, "2nV4");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = AuthenticatorUtils.getHeaderWithPrefix((List<String>) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AuthenticatorUtils authenticatorUtils0 = new AuthenticatorUtils();
  }
}
