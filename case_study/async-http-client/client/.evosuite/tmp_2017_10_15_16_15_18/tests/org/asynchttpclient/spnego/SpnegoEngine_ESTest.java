/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:17:45 GMT 2017
 */

package org.asynchttpclient.spnego;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.spnego.SpnegoEngine;
import org.asynchttpclient.spnego.SpnegoTokenGenerator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SpnegoEngine_ESTest extends SpnegoEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance();
      // Undeclared exception!
      try { 
        spnegoEngine0.generateToken("g");
        fail("Expecting exception: VerifyError");
      
      } catch(VerifyError e) {
         //
         // Bad return type
         // Exception Details:
         //   Location:
         //     org/ietf/jgss/GSSManager.getInstance()Lorg/ietf/jgss/GSSManager; @10: areturn
         //   Reason:
         //     Type 'sun/security/jgss/GSSManagerImpl' (current frame, stack[0]) is not assignable to 'org/ietf/jgss/GSSManager' (from method signature)
         //   Current Frame:
         //     bci: @10
         //     flags: { }
         //     locals: { }
         //     stack: { 'sun/security/jgss/GSSManagerImpl' }
         //   Bytecode:
         //     0x0000000: b800 18bb 001a 59b7 001b b0            
         //
         verifyException("org.asynchttpclient.spnego.SpnegoEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = new SpnegoEngine((SpnegoTokenGenerator) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = SpnegoEngine.instance();
      SpnegoEngine spnegoEngine1 = SpnegoEngine.instance();
      assertSame(spnegoEngine1, spnegoEngine0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SpnegoEngine spnegoEngine0 = new SpnegoEngine();
  }
}
