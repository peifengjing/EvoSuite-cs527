/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:46:28 GMT 2017
 */

package org.asynchttpclient.netty.request.body;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.channel.Channel;
import java.io.File;
import java.io.FileNotFoundException;
import org.asynchttpclient.AsyncHttpClientConfig;
import org.asynchttpclient.netty.NettyResponseFuture;
import org.asynchttpclient.netty.request.body.NettyFileBody;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NettyFileBody_ESTest extends NettyFileBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockFile mockFile0 = new MockFile("finishConnect(..)", "finishConnect(..)");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, asyncHttpClientConfig0);
      long long0 = nettyFileBody0.getOffset();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockFile mockFile0 = new MockFile("M9KUFDJoo%ncxI=95", "mB=`l9^R\"O1=#xT=j%2");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, 1L, (-1719L), asyncHttpClientConfig0);
      long long0 = nettyFileBody0.getOffset();
      assertEquals(1L, long0);
      assertEquals((-1719L), nettyFileBody0.getContentLength());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("r", "r");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/async-http-client/client/r/r");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/async-http-client/client/r/r");
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, 962L, (-624L), asyncHttpClientConfig0);
      nettyFileBody0.getFile();
      assertEquals(962L, nettyFileBody0.getOffset());
      assertEquals((-624L), nettyFileBody0.getContentLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".NiI'm}$mk^n?", ".NiI'm}$mk^n?");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, 0L, 0L, asyncHttpClientConfig0);
      File file0 = nettyFileBody0.getFile();
      assertSame(mockFile0, file0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockFile mockFile0 = new MockFile("File %s is not a file or doesn't exist");
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, (AsyncHttpClientConfig) null);
      MockFile.createTempFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/async-http-client/client/File %s is not a file or doesn't exist", "]%?v&WWAX$~f,", (File) mockFile0);
      File file0 = nettyFileBody0.getFile();
      assertTrue(file0.canWrite());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("CbW2p");
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, 0L, 4146L, (AsyncHttpClientConfig) null);
      long long0 = nettyFileBody0.getContentLength();
      assertEquals(0L, nettyFileBody0.getOffset());
      assertEquals(4146L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      File file0 = MockFile.createTempFile("^uyN9n", "' 7>%");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(file0, (-769L), (-503L), asyncHttpClientConfig0);
      long long0 = nettyFileBody0.getContentLength();
      assertEquals((-503L), long0);
      assertEquals((-769L), nettyFileBody0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("?ENJ", "?ENJ");
      mockFile0.createNewFile();
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, (-542L), (-542L), asyncHttpClientConfig0);
      NettyResponseFuture<MockHijrahDate> nettyResponseFuture0 = (NettyResponseFuture<MockHijrahDate>) mock(NettyResponseFuture.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        nettyFileBody0.write((Channel) null, nettyResponseFuture0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.body.NettyFileBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFile mockFile0 = new MockFile("J.AURP", "J.AURP");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, asyncHttpClientConfig0);
      NettyResponseFuture<String> nettyResponseFuture0 = (NettyResponseFuture<String>) mock(NettyResponseFuture.class, new ViolatedAssumptionAnswer());
      try { 
        nettyFileBody0.write((Channel) null, nettyResponseFuture0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // File does not exist, and RandomAccessFile is not open in write mode
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockRandomAccessFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NettyFileBody nettyFileBody0 = null;
      try {
        nettyFileBody0 = new NettyFileBody((File) null, (AsyncHttpClientConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.body.NettyFileBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      NettyFileBody nettyFileBody0 = null;
      try {
        nettyFileBody0 = new NettyFileBody(mockFile0, (AsyncHttpClientConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // File /Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/async-http-client/client is not a file or doesn't exist
         //
         verifyException("org.asynchttpclient.netty.request.body.NettyFileBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = null;
      try {
        nettyFileBody0 = new NettyFileBody((File) null, (-571L), (-1L), asyncHttpClientConfig0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.request.body.NettyFileBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      NettyFileBody nettyFileBody0 = null;
      try {
        nettyFileBody0 = new NettyFileBody(mockFile0, 1330L, 1570L, (AsyncHttpClientConfig) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // File /Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/async-http-client/client is not a file or doesn't exist
         //
         verifyException("org.asynchttpclient.netty.request.body.NettyFileBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockFile mockFile0 = new MockFile("File %s is not a file or doesn't exist");
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, (AsyncHttpClientConfig) null);
      long long0 = nettyFileBody0.getContentLength();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockFile mockFile0 = new MockFile("?ENJ", "?ENJ");
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      NettyFileBody nettyFileBody0 = new NettyFileBody(mockFile0, (-542L), (-542L), asyncHttpClientConfig0);
      long long0 = nettyFileBody0.getOffset();
      assertEquals((-542L), long0);
      assertEquals((-542L), nettyFileBody0.getContentLength());
  }
}
