/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 01:52:43 GMT 2017
 */

package org.asynchttpclient.ws;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicReference;
import org.asynchttpclient.ws.CloseCodeReasonMessageTest;
import org.asynchttpclient.ws.WebSocket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WebSocketListener_ESTest extends WebSocketListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      MockThrowable mockThrowable0 = new MockThrowable(";<I9-\"");
      closeCodeReasonMessageTest_Listener0.onError(mockThrowable0);
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable: ;<I9-\"", mockThrowable0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      WebSocket webSocket0 = mock(WebSocket.class, new ViolatedAssumptionAnswer());
      closeCodeReasonMessageTest_Listener0.onClose(webSocket0, 0, (String) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      WebSocket webSocket0 = mock(WebSocket.class, new ViolatedAssumptionAnswer());
      closeCodeReasonMessageTest_Listener0.onOpen(webSocket0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener((CountDownLatch) null, atomicReference0);
      // Undeclared exception!
      try { 
        closeCodeReasonMessageTest_Listener0.onError((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ws.CloseCodeReasonMessageTest$Listener", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener((CountDownLatch) null, atomicReference0);
      WebSocket webSocket0 = mock(WebSocket.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        closeCodeReasonMessageTest_Listener0.onClose(webSocket0, (byte)34, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.ws.CloseCodeReasonMessageTest$Listener", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      closeCodeReasonMessageTest_Listener0.onPingFrame((byte[]) null);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      byte[] byteArray0 = new byte[9];
      closeCodeReasonMessageTest_Listener0.onBinaryFrame(byteArray0, true, 0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CountDownLatch countDownLatch0 = mock(CountDownLatch.class, new ViolatedAssumptionAnswer());
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener(countDownLatch0, atomicReference0);
      closeCodeReasonMessageTest_Listener0.onTextFrame("%o#*/W#][J#ru>l", true, 0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AtomicReference<String> atomicReference0 = (AtomicReference<String>) mock(AtomicReference.class, new ViolatedAssumptionAnswer());
      CloseCodeReasonMessageTest.Listener closeCodeReasonMessageTest_Listener0 = new CloseCodeReasonMessageTest.Listener((CountDownLatch) null, atomicReference0);
      byte[] byteArray0 = new byte[4];
      closeCodeReasonMessageTest_Listener0.onPongFrame(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }
}
