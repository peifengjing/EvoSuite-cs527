/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 01:57:27 GMT 2017
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import org.asynchttpclient.AsyncCompletionHandlerBase;
import org.asynchttpclient.HttpResponseStatus;
import org.asynchttpclient.Response;
import org.asynchttpclient.netty.NettyResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncCompletionHandlerBase_ESTest extends AsyncCompletionHandlerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AsyncCompletionHandlerBase asyncCompletionHandlerBase0 = new AsyncCompletionHandlerBase();
      HttpResponseStatus httpResponseStatus0 = mock(HttpResponseStatus.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(httpResponseStatus0).getStatusCode();
      asyncCompletionHandlerBase0.onStatusReceived(httpResponseStatus0);
      NettyResponse nettyResponse0 = (NettyResponse)asyncCompletionHandlerBase0.onCompleted();
      NettyResponse nettyResponse1 = (NettyResponse)asyncCompletionHandlerBase0.onCompleted((Response) nettyResponse0);
      assertTrue(nettyResponse1.hasResponseStatus());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AsyncCompletionHandlerBase asyncCompletionHandlerBase0 = new AsyncCompletionHandlerBase();
      Response response0 = asyncCompletionHandlerBase0.onCompleted();
      Response response1 = asyncCompletionHandlerBase0.onCompleted(response0);
      assertNull(response1);
  }
}
