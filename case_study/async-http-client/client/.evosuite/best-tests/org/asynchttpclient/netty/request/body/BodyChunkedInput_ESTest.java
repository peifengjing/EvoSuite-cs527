/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:35:57 GMT 2017
 */

package org.asynchttpclient.netty.request.body;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBufAllocator;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.channel.ChannelHandlerContext;
import java.util.ArrayDeque;
import java.util.LinkedList;
import java.util.Queue;
import org.asynchttpclient.netty.request.body.BodyChunkedInput;
import org.asynchttpclient.request.body.Body;
import org.asynchttpclient.request.body.generator.BodyChunk;
import org.asynchttpclient.request.body.generator.PushBody;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BodyChunkedInput_ESTest extends BodyChunkedInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PushBody pushBody0 = new PushBody((Queue<BodyChunk>) null);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator();
      try { 
        bodyChunkedInput0.readChunk((ByteBufAllocator) pooledByteBufAllocator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.request.body.generator.PushBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false, 1, 1, 8192, (-1848), 838, 838, 1, false);
      try { 
        bodyChunkedInput0.readChunk((ByteBufAllocator) pooledByteBufAllocator0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -257
         //
         verifyException("io.netty.buffer.PoolChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BodyChunkedInput bodyChunkedInput0 = null;
      try {
        bodyChunkedInput0 = new BodyChunkedInput((Body) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // body
         //
         verifyException("org.asynchttpclient.util.Assertions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      bodyChunkedInput0.isEndOfInput();
      assertEquals(0L, bodyChunkedInput0.progress());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      bodyChunkedInput0.readChunk((ByteBufAllocator) pooledByteBufAllocator0);
      assertEquals(1, pooledByteBufAllocator0.numThreadLocalCaches());
      assertEquals(0L, bodyChunkedInput0.progress());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      long long0 = bodyChunkedInput0.length();
      assertEquals((-1L), long0);
      assertEquals(0L, bodyChunkedInput0.progress());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayDeque<BodyChunk> arrayDeque0 = new ArrayDeque<BodyChunk>();
      PushBody pushBody0 = new PushBody(arrayDeque0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      bodyChunkedInput0.close();
      assertEquals(0L, bodyChunkedInput0.progress());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      long long0 = bodyChunkedInput0.progress();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedList<BodyChunk> linkedList0 = new LinkedList<BodyChunk>();
      PushBody pushBody0 = new PushBody(linkedList0);
      BodyChunkedInput bodyChunkedInput0 = new BodyChunkedInput(pushBody0);
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(pooledByteBufAllocator0).when(channelHandlerContext0).alloc();
      bodyChunkedInput0.readChunk(channelHandlerContext0);
      assertEquals(1, pooledByteBufAllocator0.numThreadLocalCaches());
  }
}
