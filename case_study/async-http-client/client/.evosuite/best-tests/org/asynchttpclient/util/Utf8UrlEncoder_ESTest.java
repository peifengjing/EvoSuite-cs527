/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:11:40 GMT 2017
 */

package org.asynchttpclient.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.util.Utf8UrlEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utf8UrlEncoder_ESTest extends Utf8UrlEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("<#)8.Cw'wh5^eL_s?");
      StringBuilder stringBuilder1 = new StringBuilder(stringBuilder0);
      StringBuilder stringBuilder2 = stringBuilder1.append((Object) stringBuilder0);
      StringBuilder stringBuilder3 = Utf8UrlEncoder.encodeAndAppendFormElement(stringBuilder2, "<#)8.Cw'wh5^eL_s?");
      StringBuilder stringBuilder4 = stringBuilder3.appendCodePoint(1333);
      // Undeclared exception!
      Utf8UrlEncoder.encodeAndAppendPercentEncoded(stringBuilder4, stringBuilder4);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("|H)hoz?X#qrEO&RRg3");
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (-544.908302139));
      stringBuilder0.append("3~7DUW0n]xeF uD T");
      StringBuilder stringBuilder2 = stringBuilder1.append((-2503.702F));
      stringBuilder2.insert(0, (Object) "org.asynchttpclient.util.Utf8UrlEncoder");
      // Undeclared exception!
      Utf8UrlEncoder.encodeAndAppendFormElement(stringBuilder2, stringBuilder2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodeQueryElement((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.Utf8UrlEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodeAndAppendFormElement((StringBuilder) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.Utf8UrlEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.Utf8UrlEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      char[] charArray0 = new char[8];
      charArray0[0] = '';
      charArray0[1] = 'K';
      charArray0[2] = '[';
      charArray0[3] = '%';
      charArray0[4] = '3';
      charArray0[5] = '';
      charArray0[6] = '=';
      charArray0[7] = '_';
      stringBuilder0.append(charArray0);
      StringBuilder stringBuilder1 = stringBuilder0.append((Object) "!gcdIk!;)wfe'||J7#");
      StringBuilder stringBuilder2 = stringBuilder1.appendCodePoint(0);
      // Undeclared exception!
      Utf8UrlEncoder.encodeAndAppendQueryElement(stringBuilder2, stringBuilder2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = Utf8UrlEncoder.encodeAndAppendPercentEncoded(stringBuilder0, stringBuilder0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'H';
      // Undeclared exception!
      try { 
        stringBuilder1.append(charArray0, 95, (-1261));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Utf8UrlEncoder.percentEncodeQueryElement("");
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodeAndAppendQueryElement((StringBuilder) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = Utf8UrlEncoder.encodeAndAppendFormElement(stringBuilder0, stringBuilder0);
      StringBuilder stringBuilder2 = Utf8UrlEncoder.encodeAndAppendQueryElement(stringBuilder0, stringBuilder1);
      StringBuilder stringBuilder3 = stringBuilder2.insert(0, (Object) null);
      // Undeclared exception!
      Utf8UrlEncoder.encodeAndAppendPercentEncoded(stringBuilder3, stringBuilder2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodeAndAppendQuery((StringBuilder) null, "org.asynchttpclient.util.Utf8UrlEncoder");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.util.Utf8UrlEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8UrlEncoder.encodeAndAppendPercentEncoded((StringBuilder) null, (CharSequence) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utf8UrlEncoder.percentEncodeQueryElement(" Mr/iN");
      String string0 = "MB}e";
      Utf8UrlEncoder.encodePath(" Mr/iN");
      Utf8UrlEncoder.encodePath("MB}e");
      Utf8UrlEncoder.encodePath("");
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = '%';
      charArray0[2] = 'r';
      charArray0[3] = 'P';
      Utf8UrlEncoder.encodePath("");
      String string1 = "D']hka,I@|/5`ID8i";
      Utf8UrlEncoder.encodeQueryElement("D']hka,I@|/5`ID8i");
      Utf8UrlEncoder.encodeQueryElement("%20Mr/iN");
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) " Mr/iN");
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(0);
      // Undeclared exception!
      Utf8UrlEncoder.encodeAndAppendFormElement(stringBuilder1, stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utf8UrlEncoder.percentEncodeQueryElement(" Mr/iN");
      StringBuilder stringBuilder0 = new StringBuilder("%20Mr%2FiN");
      Utf8UrlEncoder.encodePath("m<m!\ft");
      // Undeclared exception!
      try { 
        stringBuilder0.insert(224, (CharSequence) "m%3Cm!%5Cft");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 224
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, (CharSequence) stringBuilder0);
      StringBuilder stringBuilder2 = Utf8UrlEncoder.encodeAndAppendQueryElement(stringBuilder1, stringBuilder1);
      StringBuilder stringBuilder3 = new StringBuilder(stringBuilder2);
      // Undeclared exception!
      try { 
        stringBuilder3.deleteCharAt(33);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 33
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.chars();
      String string0 = Utf8UrlEncoder.encodeQueryElement("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "jAo^1g_YD}r3nzR.b";
      Utf8UrlEncoder.encodePath("jAo^1g_YD}r3nzR.b");
      StringBuilder stringBuilder0 = new StringBuilder("jAo^1g_YD}r3nzR.b");
      StringBuilder stringBuilder1 = Utf8UrlEncoder.encodeAndAppendQuery(stringBuilder0, "jAo^1g_YD}r3nzR.b");
      int int0 = (-11);
      // Undeclared exception!
      try { 
        stringBuilder1.appendCodePoint((-11));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      stringBuilder0.codePoints();
      StringBuilder stringBuilder1 = Utf8UrlEncoder.encodeAndAppendFormElement(stringBuilder0, stringBuilder0);
      Utf8UrlEncoder.percentEncodeQueryElement((String) null);
      stringBuilder1.codePoints();
      stringBuilder0.reverse();
      // Undeclared exception!
      try { 
        stringBuilder0.delete(37, 37);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }
}
