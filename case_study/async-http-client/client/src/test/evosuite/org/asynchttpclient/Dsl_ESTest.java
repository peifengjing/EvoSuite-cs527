/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 01:50:43 GMT 2017
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.handler.ssl.SslContext;
import io.netty.util.Timer;
import java.nio.charset.Charset;
import org.asynchttpclient.AsyncHttpClientConfig;
import org.asynchttpclient.DefaultAsyncHttpClientConfig;
import org.asynchttpclient.Dsl;
import org.asynchttpclient.Realm;
import org.asynchttpclient.SslEngineFactory;
import org.asynchttpclient.channel.ChannelPool;
import org.asynchttpclient.proxy.ProxyServer;
import org.asynchttpclient.uri.Uri;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Dsl_ESTest extends Dsl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.realm((Realm) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AsyncHttpClientConfig asyncHttpClientConfig0 = mock(AsyncHttpClientConfig.class, new ViolatedAssumptionAnswer());
      doReturn((ChannelPool) null).when(asyncHttpClientConfig0).getChannelPool();
      doReturn((String[]) null).when(asyncHttpClientConfig0).getEnabledCipherSuites();
      doReturn((String[]) null).when(asyncHttpClientConfig0).getEnabledProtocols();
      doReturn((Timer) null).when(asyncHttpClientConfig0).getNettyTimer();
      doReturn((SslContext) null).when(asyncHttpClientConfig0).getSslContext();
      doReturn((SslEngineFactory) null).when(asyncHttpClientConfig0).getSslEngineFactory();
      doReturn(0).when(asyncHttpClientConfig0).getSslSessionCacheSize();
      doReturn(0).when(asyncHttpClientConfig0).getSslSessionTimeout();
      doReturn(false).when(asyncHttpClientConfig0).isKeepAlive();
      doReturn(false).when(asyncHttpClientConfig0).isUseInsecureTrustManager();
      doReturn(false).when(asyncHttpClientConfig0).isUseOpenSsl();
      // Undeclared exception!
      try { 
        Dsl.asyncHttpClient(asyncHttpClientConfig0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.GlobalEventExecutor
         //
         verifyException("org.asynchttpclient.netty.channel.ChannelManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.request("", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.trace("{ePl|{A;Ilc@l");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.delete("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.asyncHttpClient((DefaultAsyncHttpClientConfig.Builder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Realm realm0 = mock(Realm.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(realm0).getAlgorithm();
      doReturn((Charset) null).when(realm0).getCharset();
      doReturn((String) null).when(realm0).getNc();
      doReturn((String) null).when(realm0).getNonce();
      doReturn((String) null).when(realm0).getNtlmDomain();
      doReturn((String) null).when(realm0).getNtlmHost();
      doReturn((String) null).when(realm0).getOpaque();
      doReturn((String) null).when(realm0).getPassword();
      doReturn((String) null).when(realm0).getPrincipal();
      doReturn((String) null).when(realm0).getQop();
      doReturn((String) null).when(realm0).getRealmName();
      doReturn((Realm.AuthScheme) null).when(realm0).getScheme();
      doReturn((Uri) null).when(realm0).getUri();
      doReturn(false).when(realm0).isOmitQuery();
      doReturn(false).when(realm0).isUseAbsoluteURI();
      doReturn(false).when(realm0).isUsePreemptiveAuth();
      Realm.Builder realm_Builder0 = Dsl.realm(realm0);
      assertNotNull(realm_Builder0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.patch("JL(cfv,bQJo$!HiW");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.get("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Realm.Builder realm_Builder0 = Dsl.ntlmAuthRealm("@S", "");
      assertNotNull(realm_Builder0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.head("mp i:b5{-ZUotL9aj");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.put("io.netty.util.AsciiString");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.asyncHttpClient();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.GlobalEventExecutor
         //
         verifyException("org.asynchttpclient.netty.channel.ChannelManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Realm.Builder realm_Builder0 = Dsl.basicAuthRealm("r<&}", "");
      assertNotNull(realm_Builder0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.post("Q");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProxyServer.Builder proxyServer_Builder0 = Dsl.proxyServer("io.netty.util.AsciiString", (-1199));
      assertNotNull(proxyServer_Builder0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Realm.Builder realm_Builder0 = Dsl.digestAuthRealm("", "=18aw?)-$=3%ndda{S");
      assertNotNull(realm_Builder0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.options("io.netty.util.internal.StringUtil");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.asynchttpclient.RequestBuilder
         //
         verifyException("org.asynchttpclient.Dsl", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Realm.AuthScheme realm_AuthScheme0 = Realm.AuthScheme.KERBEROS;
      Realm.Builder realm_Builder0 = Dsl.realm(realm_AuthScheme0, (String) null, (String) null);
      assertNotNull(realm_Builder0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultAsyncHttpClientConfig.Builder defaultAsyncHttpClientConfig_Builder0 = Dsl.config();
      // Undeclared exception!
      try { 
        Dsl.asyncHttpClient(defaultAsyncHttpClientConfig_Builder0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.util.concurrent.GlobalEventExecutor
         //
         verifyException("org.asynchttpclient.netty.channel.ChannelManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        Dsl.asyncHttpClient((AsyncHttpClientConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.DefaultAsyncHttpClient", e);
      }
  }
}
