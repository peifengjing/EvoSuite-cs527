/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 00:44:04 GMT 2017
 */

package org.asynchttpclient;

import org.junit.Test;
import static org.junit.Assert.*;
import org.asynchttpclient.HostStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HostStats_ESTest extends HostStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2L, 2L);
      HostStats hostStats1 = new HostStats(2L, 1136L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertEquals(1138L, hostStats1.getHostConnectionCount());
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2L, 2L);
      HostStats hostStats1 = new HostStats(1136L, 2L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(boolean0);
      assertEquals(1138L, hostStats1.getHostConnectionCount());
      assertFalse(hostStats1.equals((Object)hostStats0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HostStats hostStats0 = new HostStats(2L, 2L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals(2L, hostStats0.getHostActiveConnectionCount());
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-1L), (-2965L));
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals((-2966L), hostStats0.getHostConnectionCount());
      assertEquals((-2965L), long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4588L), (-4588L));
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals((-9176L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HostStats hostStats0 = new HostStats(1L, 1L);
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals(1L, long0);
      assertEquals(2L, hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-284L), (-284L));
      long long0 = hostStats0.getHostActiveConnectionCount();
      assertEquals((-284L), long0);
      assertEquals((-284L), hostStats0.getHostIdleConnectionCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HostStats hostStats0 = new HostStats(958L, 958L);
      long long0 = hostStats0.getHostConnectionCount();
      assertEquals(1916L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      HostStats hostStats1 = new HostStats(0L, 0L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HostStats hostStats0 = new HostStats(3498L, 3498L);
      HostStats hostStats1 = new HostStats(3498L, 0L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(boolean0);
      assertEquals(3498L, hostStats1.getHostActiveConnectionCount());
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertEquals(3498L, hostStats0.getHostIdleConnectionCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      boolean boolean0 = hostStats0.equals("There are 0 total connections, 0 are active and 0 are idle.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HostStats hostStats0 = new HostStats(0L, 0L);
      boolean boolean0 = hostStats0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HostStats hostStats0 = new HostStats(3579L, 3579L);
      boolean boolean0 = hostStats0.equals(hostStats0);
      assertTrue(boolean0);
      assertEquals(7158L, hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HostStats hostStats0 = new HostStats(3579L, 3579L);
      HostStats hostStats1 = new HostStats(1266L, 3579L);
      boolean boolean0 = hostStats0.equals(hostStats1);
      assertFalse(boolean0);
      assertFalse(hostStats1.equals((Object)hostStats0));
      assertEquals(4845L, hostStats1.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HostStats hostStats0 = new HostStats(958L, 958L);
      String string0 = hostStats0.toString();
      assertEquals("There are 1916 total connections, 958 are active and 958 are idle.", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4879L), 0L);
      hostStats0.hashCode();
      assertEquals((-4879L), hostStats0.getHostConnectionCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HostStats hostStats0 = new HostStats((-4879L), 0L);
      long long0 = hostStats0.getHostIdleConnectionCount();
      assertEquals((-4879L), hostStats0.getHostConnectionCount());
      assertEquals(0L, long0);
  }
}
