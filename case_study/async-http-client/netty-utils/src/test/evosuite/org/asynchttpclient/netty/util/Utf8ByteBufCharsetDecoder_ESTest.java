/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 23:14:04 GMT 2017
 */

package org.asynchttpclient.netty.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.CompositeByteBuf;
import io.netty.buffer.EmptyByteBuf;
import io.netty.buffer.PooledByteBufAllocator;
import io.netty.buffer.UnpooledByteBufAllocator;
import io.netty.buffer.UnpooledHeapByteBuf;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.tomcat.util.buf.Utf8Encoder;
import org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Utf8ByteBufCharsetDecoder_ESTest extends Utf8ByteBufCharsetDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1469);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeChar(1469);
      ByteBuf[] byteBufArray0 = new ByteBuf[2];
      byteBufArray0[0] = (ByteBuf) compositeByteBuf1;
      // Undeclared exception!
      try { 
        Utf8ByteBufCharsetDecoder.decodeUtf8(byteBufArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1476);
      compositeByteBuf0.writeChar(1476);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.capacity(2);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeByte(2);
      utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      Charset charset0 = utf8Encoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("|<r^oYp\"U#maMpecC:");
      utf8ByteBufCharsetDecoder0.decodePartial(byteBuffer0, false);
      ByteBuf[] byteBufArray0 = new ByteBuf[0];
      utf8ByteBufCharsetDecoder0.decode(byteBufArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      utf8ByteBufCharsetDecoder0.allocateCharBuffer(89);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1476);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.writeChar(1476);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf0.capacity(2);
      compositeByteBuf2.writeByte(2);
      ByteBuf[] byteBufArray0 = new ByteBuf[2];
      byteBufArray0[0] = (ByteBuf) compositeByteBuf1;
      // Undeclared exception!
      try { 
        Utf8ByteBufCharsetDecoder.decodeUtf8(byteBufArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.ByteBufUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(unpooledByteBufAllocator0);
      ByteBuf[] byteBufArray0 = new ByteBuf[1];
      byteBufArray0[0] = (ByteBuf) emptyByteBuf0;
      Utf8ByteBufCharsetDecoder.decodeUtf8(byteBufArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(false);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      Utf8ByteBufCharsetDecoder.decodeUtf8((ByteBuf) emptyByteBuf0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      utf8ByteBufCharsetDecoder0.charBuffer = null;
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utf8ByteBufCharsetDecoder.decodeUtf8((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true, true);
      UnpooledHeapByteBuf unpooledHeapByteBuf0 = new UnpooledHeapByteBuf(unpooledByteBufAllocator0, 89, 1896);
      unpooledHeapByteBuf0.readRetainedSlice(2);
      // Undeclared exception!
      try { 
        Utf8ByteBufCharsetDecoder.decodeUtf8((ByteBuf) unpooledHeapByteBuf0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index: 2, length: -2 (expected: range(0, 89))
         //
         verifyException("io.netty.buffer.AbstractByteBuf", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decodePartial((ByteBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1485);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.capacity(2);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeInt(1552);
      utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf2);
      ByteBuf[] byteBufArray0 = new ByteBuf[1];
      byteBufArray0[0] = (ByteBuf) compositeByteBuf0;
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decode(byteBufArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1917);
      compositeByteBuf0.writeChar(1917);
      compositeByteBuf0.addComponent((ByteBuf) compositeByteBuf0);
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decode((ByteBuf) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1469);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.capacity(2);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeInt(1552);
      utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf2);
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      // Undeclared exception!
      utf8ByteBufCharsetDecoder0.allocateCharBuffer(1073741823);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.allocateCharBuffer((-1983));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      ByteBuf[] byteBufArray0 = new ByteBuf[5];
      byteBufArray0[0] = (ByteBuf) emptyByteBuf0;
      byteBufArray0[1] = (ByteBuf) emptyByteBuf0;
      byteBufArray0[2] = (ByteBuf) emptyByteBuf0;
      byteBufArray0[3] = (ByteBuf) emptyByteBuf0;
      byteBufArray0[4] = (ByteBuf) emptyByteBuf0;
      utf8ByteBufCharsetDecoder0.decode(byteBufArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      ByteBuf[] byteBufArray0 = new ByteBuf[5];
      byteBufArray0[0] = (ByteBuf) emptyByteBuf0;
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decode(byteBufArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.asynchttpclient.netty.util.Utf8ByteBufCharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      utf8ByteBufCharsetDecoder0.reset();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1469);
      ByteBuf[] byteBufArray0 = new ByteBuf[2];
      byteBufArray0[0] = (ByteBuf) compositeByteBuf0;
      byteBufArray0[1] = (ByteBuf) compositeByteBuf0;
      String string0 = Utf8ByteBufCharsetDecoder.decodeUtf8(byteBufArray0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      PooledByteBufAllocator pooledByteBufAllocator0 = new PooledByteBufAllocator(true);
      EmptyByteBuf emptyByteBuf0 = new EmptyByteBuf(pooledByteBufAllocator0);
      String string0 = utf8ByteBufCharsetDecoder0.decode((ByteBuf) emptyByteBuf0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      Charset charset0 = utf8Encoder0.charset();
      CharBuffer charBuffer0 = utf8ByteBufCharsetDecoder0.charBuffer;
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      utf8ByteBufCharsetDecoder0.decodePartial(byteBuffer0, true);
      // Undeclared exception!
      try { 
        utf8ByteBufCharsetDecoder0.decodePartial(byteBuffer0, false);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Current state = CODING_END, new state = CODING
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(false, false);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1485);
      compositeByteBuf0.writeChar(1485);
      CompositeByteBuf compositeByteBuf1 = compositeByteBuf0.capacity(2);
      CompositeByteBuf compositeByteBuf2 = compositeByteBuf1.writeInt(1552);
      String string0 = utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf2);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      Charset charset0 = utf8Encoder0.charset();
      CharBuffer charBuffer0 = utf8ByteBufCharsetDecoder0.charBuffer;
      charset0.encode(charBuffer0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1917);
      compositeByteBuf0.writeChar(1917);
      String string0 = utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1476);
      compositeByteBuf0.writeZero(1476);
      String string0 = utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Utf8ByteBufCharsetDecoder utf8ByteBufCharsetDecoder0 = new Utf8ByteBufCharsetDecoder();
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      Charset charset0 = utf8Encoder0.charset();
      CharBuffer charBuffer0 = utf8ByteBufCharsetDecoder0.charBuffer;
      charset0.encode(charBuffer0);
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1917);
      String string0 = utf8ByteBufCharsetDecoder0.decode((ByteBuf) compositeByteBuf0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UnpooledByteBufAllocator unpooledByteBufAllocator0 = new UnpooledByteBufAllocator(true, true);
      CompositeByteBuf compositeByteBuf0 = new CompositeByteBuf(unpooledByteBufAllocator0, false, 1476);
      String string0 = Utf8ByteBufCharsetDecoder.decodeUtf8((ByteBuf) compositeByteBuf0);
      assertNotNull(string0);
  }
}
