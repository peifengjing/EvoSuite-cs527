/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 02:26:40 GMT 2017
 */

package org.asynchttpclient.extras.rxjava2.maybe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.reactivex.MaybeEmitter;
import org.asynchttpclient.extras.rxjava2.maybe.ProgressAsyncMaybeEmitterBridge;
import org.asynchttpclient.handler.ProgressAsyncHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProgressAsyncMaybeEmitterBridge_ESTest extends ProgressAsyncMaybeEmitterBridge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MaybeEmitter<String> maybeEmitter0 = (MaybeEmitter<String>) mock(MaybeEmitter.class, new ViolatedAssumptionAnswer());
      ProgressAsyncMaybeEmitterBridge<String> progressAsyncMaybeEmitterBridge0 = null;
      try {
        progressAsyncMaybeEmitterBridge0 = new ProgressAsyncMaybeEmitterBridge<String>(maybeEmitter0, (ProgressAsyncHandler<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MaybeEmitter<MockJapaneseDate> maybeEmitter0 = (MaybeEmitter<MockJapaneseDate>) mock(MaybeEmitter.class, new ViolatedAssumptionAnswer());
      ProgressAsyncHandler<MockJapaneseDate> progressAsyncHandler0 = (ProgressAsyncHandler<MockJapaneseDate>) mock(ProgressAsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(progressAsyncHandler0).toString();
      ProgressAsyncMaybeEmitterBridge<MockJapaneseDate> progressAsyncMaybeEmitterBridge0 = new ProgressAsyncMaybeEmitterBridge<MockJapaneseDate>(maybeEmitter0, progressAsyncHandler0);
      ProgressAsyncHandler<? extends MockJapaneseDate> progressAsyncHandler1 = progressAsyncMaybeEmitterBridge0.delegate();
      assertNotNull(progressAsyncHandler1);
  }
}
