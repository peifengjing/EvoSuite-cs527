/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 02:17:05 GMT 2017
 */

package org.asynchttpclient.extras.rxjava.single;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.AbstractBasicTest;
import org.asynchttpclient.AsyncHandler;
import org.asynchttpclient.extras.rxjava.single.AsyncSingleSubscriberBridge;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import rx.SingleSubscriber;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncSingleSubscriberBridge_ESTest extends AsyncSingleSubscriberBridge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingleSubscriber<AbstractBasicTest.AsyncHandlerAdapter> singleSubscriber0 = (SingleSubscriber<AbstractBasicTest.AsyncHandlerAdapter>) mock(SingleSubscriber.class, new ViolatedAssumptionAnswer());
      AsyncSingleSubscriberBridge<AbstractBasicTest.AsyncHandlerAdapter> asyncSingleSubscriberBridge0 = null;
      try {
        asyncSingleSubscriberBridge0 = new AsyncSingleSubscriberBridge<AbstractBasicTest.AsyncHandlerAdapter>(singleSubscriber0, (AsyncHandler<? extends AbstractBasicTest.AsyncHandlerAdapter>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingleSubscriber<MockThaiBuddhistDate> singleSubscriber0 = (SingleSubscriber<MockThaiBuddhistDate>) mock(SingleSubscriber.class, new ViolatedAssumptionAnswer());
      AsyncHandler<MockThaiBuddhistDate> asyncHandler0 = (AsyncHandler<MockThaiBuddhistDate>) mock(AsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(asyncHandler0).toString();
      AsyncSingleSubscriberBridge<MockThaiBuddhistDate> asyncSingleSubscriberBridge0 = new AsyncSingleSubscriberBridge<MockThaiBuddhistDate>(singleSubscriber0, asyncHandler0);
      AsyncHandler<? extends MockThaiBuddhistDate> asyncHandler1 = asyncSingleSubscriberBridge0.delegate();
      assertNotNull(asyncHandler1);
  }
}
