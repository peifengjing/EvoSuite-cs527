/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 02:15:37 GMT 2017
 */

package org.asynchttpclient.extras.rxjava.single;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.asynchttpclient.extras.rxjava.single.ProgressAsyncSingleSubscriberBridge;
import org.asynchttpclient.handler.ProgressAsyncHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import rx.SingleSubscriber;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProgressAsyncSingleSubscriberBridge_ESTest extends ProgressAsyncSingleSubscriberBridge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ProgressAsyncSingleSubscriberBridge<Integer> progressAsyncSingleSubscriberBridge0 = null;
      try {
        progressAsyncSingleSubscriberBridge0 = new ProgressAsyncSingleSubscriberBridge<Integer>((SingleSubscriber<Integer>) null, (ProgressAsyncHandler<? extends Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingleSubscriber<Integer> singleSubscriber0 = (SingleSubscriber<Integer>) mock(SingleSubscriber.class, new ViolatedAssumptionAnswer());
      ProgressAsyncHandler<Integer> progressAsyncHandler0 = (ProgressAsyncHandler<Integer>) mock(ProgressAsyncHandler.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(progressAsyncHandler0).toString();
      ProgressAsyncSingleSubscriberBridge<Integer> progressAsyncSingleSubscriberBridge0 = new ProgressAsyncSingleSubscriberBridge<Integer>(singleSubscriber0, progressAsyncHandler0);
      ProgressAsyncHandler<? extends Integer> progressAsyncHandler1 = progressAsyncSingleSubscriberBridge0.delegate();
      assertNotNull(progressAsyncHandler1);
  }
}
