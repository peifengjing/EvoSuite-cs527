/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:23:33 GMT 2017
 */

package spark.examples.gzip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.EOFException;
import java.io.IOException;
import java.util.zip.ZipException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import spark.examples.gzip.GzipExample;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GzipExample_ESTest extends GzipExample_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:4567/zipped");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "s1kAk&49");
      try { 
        GzipExample.getAndDecompress();
        fail("Expecting exception: ZipException");
      
      } catch(ZipException e) {
         //
         // Not in GZIP format
         //
         verifyException("java.util.zip.GZIPInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://localhost:4567/zipped");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "");
      try { 
        GzipExample.getAndDecompress();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.zip.GZIPInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        GzipExample.addStaticFileLocation();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This must be done before route mapping has begun
         //
         verifyException("spark.Service", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        GzipExample.getAndDecompress();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: localhost
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      GzipExample.addRoutes();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GzipExample gzipExample0 = new GzipExample();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[3];
      try { 
        GzipExample.main(stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // This must be done before route mapping has begun
         //
         verifyException("spark.Service", e);
      }
  }
}
