/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 16:06:25 GMT 2017
 */

package spark.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import spark.util.SparkTestUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SparkTestUtil_ESTest extends SparkTestUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SparkTestUtil.sleep(0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/spark/./src/test/resources/keystore.jks");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "./src/test/resources/keystore.jks");
      SparkTestUtil sparkTestUtil0 = null;
      try {
        sparkTestUtil0 = new SparkTestUtil((-1283));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // SSL socket factory may not be null
         //
         verifyException("org.apache.http.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = SparkTestUtil.getTrustStoreLocation();
      assertEquals("./src/test/resources/keystore.jks", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = SparkTestUtil.getKeystorePassword();
      assertEquals("password", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = SparkTestUtil.getKeyStoreLocation();
      assertNotNull(string0);
      assertEquals("./src/test/resources/keystore.jks", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = SparkTestUtil.getTrustStorePassword();
      assertEquals("password", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SparkTestUtil.UrlResponse sparkTestUtil_UrlResponse0 = new SparkTestUtil.UrlResponse();
      assertEquals(0, sparkTestUtil_UrlResponse0.status);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SparkTestUtil.sleep((-1217L));
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SparkTestUtil.HttpLock sparkTestUtil_HttpLock0 = new SparkTestUtil.HttpLock("password");
      String string0 = sparkTestUtil_HttpLock0.getMethod();
      assertEquals("LOCK", string0);
  }
}
