/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:31:22 GMT 2017
 */

package spark;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.Request;
import spark.RequestResponseFactory;
import spark.Response;
import spark.routematch.RouteMatch;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RequestResponseFactory_ESTest extends RequestResponseFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RouteMatch routeMatch0 = mock(RouteMatch.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(routeMatch0).getRequestURI();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        RequestResponseFactory.create(routeMatch0, httpServletRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.utils.SparkUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      Response response0 = RequestResponseFactory.create(httpServletResponse0);
      assertNull(response0.body());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RouteMatch routeMatch0 = mock(RouteMatch.class, new ViolatedAssumptionAnswer());
      doReturn("").when(routeMatch0).getMatchUri();
      doReturn("").when(routeMatch0).getRequestURI();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      Request request0 = RequestResponseFactory.create(routeMatch0, httpServletRequest0);
      assertNotNull(request0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Request request0 = RequestResponseFactory.create((HttpServletRequest) null);
      assertNotNull(request0);
  }
}
