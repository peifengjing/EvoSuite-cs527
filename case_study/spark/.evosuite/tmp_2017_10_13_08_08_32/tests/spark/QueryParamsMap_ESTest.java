/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 15:56:10 GMT 2017
 */

package spark;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.QueryParamsMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryParamsMap_ESTest extends QueryParamsMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String[]> hashMap0 = new HashMap<String, String[]>();
      QueryParamsMap queryParamsMap0 = new QueryParamsMap(hashMap0);
      queryParamsMap0.loadQueryString(hashMap0);
      assertFalse(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String[]> hashMap0 = new HashMap<String, String[]>();
      String[] stringArray0 = new String[8];
      hashMap0.put("", stringArray0);
      QueryParamsMap queryParamsMap0 = new QueryParamsMap(hashMap0);
      assertNull(queryParamsMap0.floatValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      String[] stringArray0 = new String[3];
      stringArray0[2] = "zxTI`ei3)Ij'NQzvC`X";
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      // Undeclared exception!
      try { 
        queryParamsMap1.values();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap(httpServletRequestWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      String[] stringArray0 = queryParamsMap0.parseKey("");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = QueryParamsMap.cleanKey("spark.QueryParamsMap");
      assertEquals("spark.QueryParamsMap", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = QueryParamsMap.cleanKey("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[4];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("|d{M=@xXCZm!m-Fw8", stringArray0);
      // Undeclared exception!
      try { 
        queryParamsMap0.value((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      // Undeclared exception!
      try { 
        queryParamsMap0.parseKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      // Undeclared exception!
      try { 
        queryParamsMap0.loadKeys((String) null, (String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[4];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("", stringArray0);
      // Undeclared exception!
      try { 
        queryParamsMap0.get((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "6Sqs+MJYhCpD zZGG!N";
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      Float float0 = queryParamsMap1.floatValue();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "?Vrm\u0004FFzl+Cm";
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("?Vrm\u0004FFzl+Cm", stringArray0);
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      // Undeclared exception!
      try { 
        queryParamsMap1.doubleValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueryParamsMap.cleanKey("[");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap(httpServletRequestWrapper0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap((Map<String, String[]>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[4];
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap((String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest0).getParameterMap();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      httpServletRequestWrapper0.getParameterMap();
      HttpServletRequest httpServletRequest1 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(httpServletRequest1).getParameterMap();
      HttpServletRequestWrapper httpServletRequestWrapper1 = new HttpServletRequestWrapper(httpServletRequest1);
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap(httpServletRequestWrapper1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      String string0 = queryParamsMap0.value();
      // Undeclared exception!
      try { 
        QueryParamsMap.cleanKey(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      queryParamsMap0.loadKeys("BdaWL9aHer`!~&M7R0", stringArray0);
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      Double double0 = queryParamsMap0.doubleValue();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      String[] stringArray0 = new String[2];
      stringArray0[1] = "spark.QueryParamsMap";
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      Float float0 = queryParamsMap1.floatValue();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[6] = "vN?'";
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("vN?'", stringArray0);
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      queryParamsMap1.integerValue();
      assertFalse(queryParamsMap1.hasKeys());
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      queryParamsMap0.integerValue();
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[6] = "vN?'";
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("vN?'", stringArray0);
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray0);
      assertNotNull(queryParamsMap1);
      
      Boolean boolean0 = queryParamsMap1.booleanValue();
      assertFalse(queryParamsMap1.hasKeys());
      assertNull(boolean0);
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      String[] stringArray1 = new String[3];
      stringArray1[2] = "";
      QueryParamsMap queryParamsMap1 = queryParamsMap0.get(stringArray1);
      queryParamsMap1.hasValue();
      assertTrue(queryParamsMap0.hasKeys());
      assertFalse(queryParamsMap1.hasKeys());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String[] stringArray0 = new String[8];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("HttpServletRequest cannot be null.", stringArray0);
      boolean boolean0 = queryParamsMap0.hasKey("HttpServletRequest cannot be null.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = new QueryParamsMap();
      boolean boolean0 = queryParamsMap0.hasKey((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      boolean boolean0 = queryParamsMap0.hasKeys();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      queryParamsMap0.parseKey("[HttpServletRequest cannot be null.");
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QueryParamsMap queryParamsMap0 = null;
      try {
        queryParamsMap0 = new QueryParamsMap((HttpServletRequest) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // HttpServletRequest cannot be null.
         //
         verifyException("spark.QueryParamsMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      queryParamsMap0.value(stringArray0);
      assertTrue(queryParamsMap0.hasKeys());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      HashMap<String, String[]> hashMap0 = new HashMap<String, String[]>();
      QueryParamsMap queryParamsMap0 = new QueryParamsMap(hashMap0);
      Boolean boolean0 = queryParamsMap0.booleanValue();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[5];
      QueryParamsMap queryParamsMap0 = new QueryParamsMap("BdaWL9aHer`!~&M7R0", stringArray0);
      Map<String, QueryParamsMap> map0 = queryParamsMap0.getQueryMap();
      assertFalse(map0.isEmpty());
  }
}
