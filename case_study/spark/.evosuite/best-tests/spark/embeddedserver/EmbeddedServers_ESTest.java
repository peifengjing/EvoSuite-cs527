/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:15:42 GMT 2017
 */

package spark.embeddedserver;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.embeddedserver.EmbeddedServerFactory;
import spark.embeddedserver.EmbeddedServers;
import spark.route.Routes;
import spark.staticfiles.StaticFilesConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EmbeddedServers_ESTest extends EmbeddedServers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmbeddedServers.add("JET}Y", (EmbeddedServerFactory) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmbeddedServers.initialize();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmbeddedServers embeddedServers0 = new EmbeddedServers();
      Routes routes0 = Routes.create();
      // Undeclared exception!
      try { 
        EmbeddedServers.create(embeddedServers0, routes0, (StaticFilesConfiguration) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No embedded server matching the identifier
         //
         verifyException("spark.embeddedserver.EmbeddedServers", e);
      }
  }
}
