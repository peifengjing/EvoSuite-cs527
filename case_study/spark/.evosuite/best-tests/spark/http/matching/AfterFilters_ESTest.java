/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:05:59 GMT 2017
 */

package spark.http.matching;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import spark.http.matching.AfterFilters;
import spark.http.matching.Body;
import spark.http.matching.RouteContext;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AfterFilters_ESTest extends AfterFilters_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      try { 
        AfterFilters.execute(routeContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("spark.http.matching.AfterFilters", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      spark.route.Routes routes0 = spark.route.Routes.create();
      RouteContext routeContext2 = routeContext0.withMatcher(routes0);
      AfterFilters.execute(routeContext1);
      assertSame(routeContext1, routeContext2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AfterFilters afterFilters0 = new AfterFilters();
  }
}
