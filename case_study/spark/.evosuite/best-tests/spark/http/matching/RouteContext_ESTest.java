/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:25:23 GMT 2017
 */

package spark.http.matching;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import javax.servlet.http.HttpServletRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.Response;
import spark.http.matching.Body;
import spark.http.matching.RequestWrapper;
import spark.http.matching.ResponseWrapper;
import spark.http.matching.RouteContext;
import spark.route.HttpMethod;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RouteContext_ESTest extends RouteContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withUri("httpMethod cannot be null or blank");
      String string0 = routeContext0.uri();
      assertEquals("httpMethod cannot be null or blank", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = mock(spark.route.Routes.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(routes0).toString();
      routeContext0.withMatcher(routes0);
      spark.route.Routes routes1 = routeContext0.routeMatcher();
      assertSame(routes1, routes0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      routeContext0.withResponse(responseWrapper0);
      Response response0 = routeContext0.response();
      assertSame(response0, responseWrapper0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpMethod httpMethod0 = HttpMethod.trace;
      RouteContext routeContext1 = routeContext0.withHttpMethod(httpMethod0);
      HttpMethod httpMethod1 = routeContext1.httpMethod();
      assertSame(httpMethod0, httpMethod1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      RouteContext routeContext1 = routeContext0.withBody(body0);
      body0.set("");
      Body body1 = routeContext1.body();
      assertTrue(body1.isSet());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withAcceptType("_f{U(1O?]o");
      String string0 = routeContext0.acceptType();
      assertEquals("_f{U(1O?]o", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = ResponseWrapper.create();
      RouteContext routeContext1 = routeContext0.withResponseWrapper(responseWrapper0);
      ResponseWrapper responseWrapper1 = routeContext1.responseWrapper();
      assertSame(responseWrapper0, responseWrapper1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.httpMethod();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      spark.route.Routes routes0 = routeContext0.routeMatcher();
      assertNull(routes0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      routeContext0.withAcceptType("");
      String string0 = routeContext0.acceptType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RequestWrapper requestWrapper0 = RequestWrapper.create();
      routeContext0.withRequestWrapper(requestWrapper0);
      RequestWrapper requestWrapper1 = routeContext0.requestWrapper();
      assertSame(requestWrapper1, requestWrapper0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      ResponseWrapper responseWrapper0 = routeContext0.responseWrapper();
      assertNull(responseWrapper0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = routeContext0.body();
      assertNull(body0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      String string0 = routeContext0.uri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      HttpServletRequest httpServletRequest0 = routeContext0.httpRequest();
      assertNull(httpServletRequest0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withHttpRequest((HttpServletRequest) null);
      assertSame(routeContext0, routeContext1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RouteContext routeContext1 = routeContext0.withUri("");
      String string0 = routeContext1.uri();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Response response0 = routeContext0.response();
      assertNull(response0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      Body body0 = Body.create();
      routeContext0.withBody(body0);
      Body body1 = routeContext0.body();
      assertFalse(body1.isSet());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      String string0 = routeContext0.acceptType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RouteContext routeContext0 = RouteContext.create();
      RequestWrapper requestWrapper0 = routeContext0.requestWrapper();
      assertNull(requestWrapper0);
  }
}
