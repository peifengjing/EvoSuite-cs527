/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 17:45:21 GMT 2017
 */

package spark.serialization;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import spark.serialization.SerializerChain;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SerializerChain_ESTest extends SerializerChain_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SerializerChain serializerChain0 = new SerializerChain();
      // Undeclared exception!
      try { 
        serializerChain0.process((OutputStream) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SerializerChain serializerChain0 = new SerializerChain();
      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
      serializerChain0.process(outputStream0, outputStream0);
  }
}
