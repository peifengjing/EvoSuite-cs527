/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Oct 13 16:06:25 GMT 2017
 */

package spark.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SparkTestUtil_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "spark.util.SparkTestUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SparkTestUtil_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.http.ProtocolException",
      "org.apache.http.message.HeaderGroup",
      "org.apache.http.params.BasicHttpParams",
      "org.apache.http.message.HeaderValueParser",
      "org.apache.http.client.config.RequestConfig",
      "org.apache.http.Header",
      "org.apache.http.StatusLine",
      "org.apache.http.conn.ssl.StrictHostnameVerifier",
      "org.apache.http.concurrent.Cancellable",
      "org.apache.http.conn.ConnectionKeepAliveStrategy",
      "spark.util.SparkTestUtil$HttpLock",
      "org.apache.http.conn.ssl.X509HostnameVerifier",
      "org.apache.http.RequestLine",
      "org.apache.http.config.Lookup",
      "org.apache.http.impl.client.DefaultRedirectStrategy",
      "org.apache.http.HttpMessage",
      "org.apache.http.conn.routing.HttpRoutePlanner",
      "org.apache.http.Consts",
      "org.apache.http.conn.ssl.SSLConnectionSocketFactory",
      "org.apache.http.HttpRequestInterceptor",
      "org.apache.http.util.ByteArrayBuffer",
      "org.apache.http.message.TokenParser",
      "org.apache.http.HeaderIterator",
      "org.apache.http.conn.ssl.SSLInitializationException",
      "org.apache.http.params.HttpParamsNames",
      "org.apache.http.conn.ClientConnectionManager",
      "org.apache.http.util.Args",
      "org.apache.http.HttpEntity",
      "org.apache.http.client.methods.HttpRequestBase",
      "org.apache.http.entity.ContentType",
      "org.apache.http.message.LineFormatter",
      "spark.util.SparkTestUtil",
      "org.apache.http.conn.HttpClientConnectionManager",
      "org.apache.http.message.BufferedHeader",
      "org.apache.http.HttpRequest",
      "org.apache.http.conn.socket.LayeredConnectionSocketFactory",
      "org.apache.http.HttpException",
      "org.apache.http.conn.ssl.BrowserCompatHostnameVerifier",
      "org.apache.http.client.AuthenticationStrategy",
      "org.apache.http.HttpResponseInterceptor",
      "org.apache.http.util.TextUtils",
      "org.apache.http.conn.ssl.AllowAllHostnameVerifier",
      "org.apache.http.conn.socket.ConnectionSocketFactory",
      "org.apache.http.client.config.RequestConfig$Builder",
      "org.apache.http.client.CircularRedirectException",
      "org.apache.http.client.CredentialsProvider",
      "org.apache.http.NameValuePair",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "org.apache.http.impl.execchain.ClientExecChain",
      "org.apache.http.HttpVersion",
      "org.apache.http.message.BasicNameValuePair",
      "org.apache.http.client.ClientProtocolException",
      "org.apache.http.conn.SchemePortResolver",
      "org.apache.http.client.methods.Configurable",
      "org.apache.http.params.AbstractHttpParams",
      "org.apache.http.message.BasicHeaderValueParser",
      "org.apache.http.conn.ClientConnectionRequest",
      "org.apache.http.message.BasicLineFormatter",
      "org.apache.http.client.RedirectException",
      "org.apache.http.client.methods.HttpUriRequest",
      "org.apache.http.conn.ssl.AbstractVerifier",
      "org.apache.http.FormattedHeader",
      "org.apache.http.client.CookieStore",
      "org.apache.http.client.methods.AbortableHttpRequest",
      "org.apache.http.client.HttpClient",
      "org.apache.http.conn.socket.PlainConnectionSocketFactory",
      "org.apache.http.message.AbstractHttpMessage",
      "org.apache.http.client.methods.AbstractExecutionAwareRequest",
      "org.apache.http.client.HttpRequestRetryHandler",
      "org.apache.http.protocol.HTTP",
      "org.apache.http.ParseException",
      "org.apache.http.impl.client.CloseableHttpClient",
      "org.apache.http.message.BasicRequestLine",
      "spark.util.SparkTestUtil$UrlResponse",
      "org.apache.http.client.methods.HttpExecutionAware",
      "org.apache.http.protocol.HttpProcessor",
      "org.apache.http.HeaderElement",
      "org.apache.http.impl.client.InternalHttpClient",
      "org.apache.http.client.UserTokenHandler",
      "org.apache.http.util.CharArrayBuffer",
      "org.apache.http.client.RedirectStrategy",
      "org.apache.http.ProtocolVersion",
      "org.apache.http.ConnectionReuseStrategy",
      "org.apache.http.protocol.HttpContext",
      "org.apache.http.params.HttpParams",
      "org.apache.http.message.BasicHeader",
      "org.apache.http.HttpResponse",
      "org.apache.http.conn.ConnectionReleaseTrigger",
      "org.apache.http.impl.client.HttpClientBuilder",
      "org.apache.http.HttpHost",
      "org.apache.http.message.ParserCursor"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SparkTestUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.http.impl.client.DefaultRedirectStrategy",
      "spark.util.SparkTestUtil$HttpLock",
      "org.apache.http.conn.socket.PlainConnectionSocketFactory",
      "org.apache.http.Consts",
      "org.apache.http.entity.ContentType",
      "org.apache.http.protocol.HTTP",
      "org.apache.http.conn.ssl.AbstractVerifier",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "org.apache.http.conn.ssl.AllowAllHostnameVerifier",
      "org.apache.http.conn.ssl.BrowserCompatHostnameVerifier",
      "org.apache.http.conn.ssl.StrictHostnameVerifier",
      "org.apache.http.conn.ssl.SSLConnectionSocketFactory",
      "org.apache.http.message.HeaderGroup",
      "org.apache.http.params.BasicHttpParams",
      "org.apache.http.ProtocolVersion",
      "org.apache.http.HttpVersion",
      "org.apache.http.message.BasicRequestLine",
      "org.apache.http.message.BufferedHeader",
      "org.apache.http.message.BasicHeader",
      "org.apache.http.util.CharArrayBuffer",
      "org.apache.http.ParseException",
      "org.apache.http.client.config.RequestConfig",
      "org.apache.http.message.TokenParser",
      "org.apache.http.message.BasicHeaderValueParser",
      "org.apache.http.message.BasicNameValuePair",
      "org.apache.http.message.BasicLineFormatter"
    );
  }
}
