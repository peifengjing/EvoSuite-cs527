/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 03:07:00 GMT 2017
 */

package com.github.scribejava.core.oauth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.model.OAuth2AccessToken;
import com.github.scribejava.core.model.OAuthAsyncRequestCallback;
import com.github.scribejava.core.model.OAuthConfig;
import com.github.scribejava.core.model.OAuthRequest;
import com.github.scribejava.core.oauth.OAuth20ApiUnit;
import com.github.scribejava.core.oauth.OAuth20ServiceUnit;
import java.util.concurrent.Future;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OAuth20ServiceUnit_ESTest extends OAuth20ServiceUnit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuthConfig oAuthConfig0 = new OAuthConfig("%64H/g=u2m;%gCyl `(", "%64H/g=u2m;%gCyl `(");
      OAuth20ServiceUnit oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, oAuthConfig0);
      OAuthRequest oAuthRequest0 = oAuth20ServiceUnit0.createRefreshTokenRequest("NV\"zS=R=BZP{");
      OAuth2AccessToken oAuth2AccessToken0 = oAuth20ServiceUnit0.sendAccessTokenRequestSync(oAuthRequest0);
      assertEquals("ae82980abab675c646a070686d5558ad", oAuth2AccessToken0.getAccessToken());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuthConfig oAuthConfig0 = new OAuthConfig("t\"]qn>FZPR1Y", "t\"]qn>FZPR1Y");
      OAuth20ServiceUnit oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, oAuthConfig0);
      OAuthAsyncRequestCallback<OAuth2AccessToken> oAuthAsyncRequestCallback0 = (OAuthAsyncRequestCallback<OAuth2AccessToken>) mock(OAuthAsyncRequestCallback.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        oAuth20ServiceUnit0.sendAccessTokenRequestAsync((OAuthRequest) null, oAuthAsyncRequestCallback0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth.OAuth20ServiceUnit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuth20ServiceUnit oAuth20ServiceUnit0 = null;
      try {
        oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, (OAuthConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth.OAuthService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuthConfig oAuthConfig0 = new OAuthConfig("Z", "Z");
      OAuth20ServiceUnit oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, oAuthConfig0);
      OAuthRequest oAuthRequest0 = oAuth20ServiceUnit0.createAccessTokenRequest("Z");
      OAuthAsyncRequestCallback<OAuth2AccessToken> oAuthAsyncRequestCallback0 = (OAuthAsyncRequestCallback<OAuth2AccessToken>) mock(OAuthAsyncRequestCallback.class, new ViolatedAssumptionAnswer());
      Future<OAuth2AccessToken> future0 = oAuth20ServiceUnit0.sendAccessTokenRequestAsync(oAuthRequest0, oAuthAsyncRequestCallback0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuthConfig oAuthConfig0 = new OAuthConfig("Z", "Z");
      OAuth20ServiceUnit oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, oAuthConfig0);
      OAuthRequest oAuthRequest0 = oAuth20ServiceUnit0.createAccessTokenRequest("Z");
      Future<OAuth2AccessToken> future0 = oAuth20ServiceUnit0.sendAccessTokenRequestAsync(oAuthRequest0);
      assertNotNull(future0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OAuth20ApiUnit oAuth20ApiUnit0 = new OAuth20ApiUnit();
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "");
      OAuth20ServiceUnit oAuth20ServiceUnit0 = new OAuth20ServiceUnit(oAuth20ApiUnit0, oAuthConfig0);
      // Undeclared exception!
      try { 
        oAuth20ServiceUnit0.sendAccessTokenRequestSync((OAuthRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth.OAuth20ServiceUnit", e);
      }
  }
}
