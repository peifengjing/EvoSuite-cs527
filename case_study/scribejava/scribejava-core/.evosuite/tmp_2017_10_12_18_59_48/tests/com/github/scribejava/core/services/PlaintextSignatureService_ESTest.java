/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 03:25:13 GMT 2017
 */

package com.github.scribejava.core.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.services.PlaintextSignatureService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlaintextSignatureService_ESTest extends PlaintextSignatureService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      String string0 = plaintextSignatureService0.getSignature("Received an invalid parameter", "Received an invalid parameter", "A1=x:]un@6?abR");
      assertEquals("Received%20an%20invalid%20parameter&A1%3Dx%3A%5Dun%406%3FabR", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      // Undeclared exception!
      try { 
        plaintextSignatureService0.getSignature("", (String) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error while signing string: 
         //
         verifyException("com.github.scribejava.core.services.PlaintextSignatureService", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      String string0 = plaintextSignatureService0.getSignatureMethod();
      assertEquals("PLAINTEXT", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlaintextSignatureService plaintextSignatureService0 = new PlaintextSignatureService();
      String string0 = plaintextSignatureService0.getSignature("l4O6w!!TLxrMY^b+", "fLq$K'fw.wt", "fLq$K'fw.wt");
      assertEquals("fLq%24K%27fw.wt&fLq%24K%27fw.wt", string0);
  }
}
