/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 03:08:32 GMT 2017
 */

package com.github.scribejava.core.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.core.model.OAuth1AccessToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OAuth1Token_ESTest extends OAuth1Token_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("", ")V#.h_.lm`< {a-");
      String string0 = oAuth1AccessToken0.getTokenSecret();
      assertEquals(")V#.h_.lm`< {a-", string0);
      assertEquals("", oAuth1AccessToken0.getToken());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("", "");
      oAuth1AccessToken0.getTokenSecret();
      assertTrue(oAuth1AccessToken0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("[,K\"R", "[,K\"R", "[,K\"R");
      String string0 = oAuth1AccessToken0.getToken();
      assertEquals("[,K\"R", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("", ")V#.h_.lm`< {a-");
      String string0 = oAuth1AccessToken0.getToken();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(")V#.h_.lm`< {a-", oAuth1AccessToken0.getTokenSecret());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("", "");
      boolean boolean0 = oAuth1AccessToken0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("", "<", "<");
      boolean boolean0 = oAuth1AccessToken0.isEmpty();
      assertEquals("", oAuth1AccessToken0.getToken());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OAuth1AccessToken oAuth1AccessToken0 = new OAuth1AccessToken("[,K\"R", "[,K\"R", "[,K\"R");
      boolean boolean0 = oAuth1AccessToken0.isEmpty();
      assertFalse(boolean0);
  }
}
