/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 03:23:24 GMT 2017
 */

package com.github.scribejava.core.services;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.core.services.CommonsEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommonsEncoder_ESTest extends CommonsEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CommonsEncoder commonsEncoder0 = new CommonsEncoder();
      byte[] byteArray0 = new byte[1];
      String string0 = commonsEncoder0.encode(byteArray0);
      assertEquals("AA==", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CommonsEncoder commonsEncoder0 = new CommonsEncoder();
      // Undeclared exception!
      try { 
        commonsEncoder0.encode((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = CommonsEncoder.isPresent();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CommonsEncoder commonsEncoder0 = new CommonsEncoder();
      String string0 = commonsEncoder0.getType();
      assertEquals("CommonsCodec", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CommonsEncoder commonsEncoder0 = new CommonsEncoder();
      byte[] byteArray0 = new byte[0];
      String string0 = commonsEncoder0.encode(byteArray0);
      assertEquals("", string0);
  }
}
