/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 03:18:11 GMT 2017
 */

package com.github.scribejava.core.httpclient.jdk;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.core.httpclient.jdk.JDKHttpClientConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JDKHttpClientConfig_ESTest extends JDKHttpClientConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
      
      jDKHttpClientConfig0.setFollowRedirects(false);
      boolean boolean0 = jDKHttpClientConfig0.isFollowRedirects();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      Integer integer0 = new Integer((-1));
      jDKHttpClientConfig0.setReadTimeout(integer0);
      jDKHttpClientConfig0.getReadTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = JDKHttpClientConfig.defaultConfig();
      Integer integer0 = new Integer(0);
      jDKHttpClientConfig0.setReadTimeout(integer0);
      jDKHttpClientConfig0.getReadTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      Integer integer0 = new Integer(1108);
      jDKHttpClientConfig0.setReadTimeout(integer0);
      jDKHttpClientConfig0.getReadTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      Integer integer0 = new Integer(0);
      jDKHttpClientConfig0.setConnectTimeout(integer0);
      jDKHttpClientConfig0.getConnectTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = JDKHttpClientConfig.defaultConfig();
      Integer integer0 = new Integer(4418);
      jDKHttpClientConfig0.setConnectTimeout(integer0);
      jDKHttpClientConfig0.getConnectTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      Integer integer0 = new Integer((-1300));
      jDKHttpClientConfig0.setConnectTimeout(integer0);
      jDKHttpClientConfig0.getConnectTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = JDKHttpClientConfig.defaultConfig();
      JDKHttpClientConfig jDKHttpClientConfig1 = jDKHttpClientConfig0.createDefaultConfig();
      assertTrue(jDKHttpClientConfig1.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      boolean boolean0 = jDKHttpClientConfig0.isFollowRedirects();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      jDKHttpClientConfig0.getConnectTimeout();
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JDKHttpClientConfig jDKHttpClientConfig0 = new JDKHttpClientConfig();
      Integer integer0 = jDKHttpClientConfig0.getReadTimeout();
      jDKHttpClientConfig0.setReadTimeout(integer0);
      assertTrue(jDKHttpClientConfig0.isFollowRedirects());
  }
}
