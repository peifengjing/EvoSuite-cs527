/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Oct 13 03:41:17 GMT 2017
 */

package com.github.scribejava.httpclient.ning;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class NingHttpClient_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.github.scribejava.httpclient.ning.NingHttpClient"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "America/Los_Angeles"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NingHttpClient_ESTest_scaffolding.class.getClassLoader() ,
      "org.jboss.netty.logging.JdkLoggerFactory",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$TreeNode",
      "com.ning.http.client.ProxyServer",
      "com.ning.http.client.providers.netty.channel.CleanupChannelGroup",
      "com.ning.http.client.AsyncHttpClientConfig$Builder$1",
      "org.jboss.netty.channel.ChannelFutureListener",
      "com.ning.http.client.providers.netty.future.NettyResponseFuture",
      "com.ning.http.client.filter.FilterContext",
      "com.ning.http.client.AsyncHttpClientConfig$1",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$Fun",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$BiAction",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$2",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$1",
      "org.jboss.netty.channel.socket.nio.BossPool",
      "org.jboss.netty.handler.ssl.NotSslRecordException",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$Segment",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$3",
      "com.ning.http.util.UTF8UrlEncoder",
      "org.jboss.netty.channel.ChannelException",
      "org.jboss.netty.channel.socket.Worker",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectByObjectToDouble",
      "org.jboss.netty.channel.group.ChannelGroup",
      "org.jboss.netty.handler.codec.http.HttpClientCodec$Encoder",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$SendBuffer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$DoubleByDoubleToDouble",
      "org.jboss.netty.channel.group.DefaultChannelGroup",
      "com.ning.http.client.NameResolver",
      "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig$DefaultNettyWebSocketFactory",
      "org.jboss.netty.handler.codec.http.HttpChunk",
      "org.jboss.netty.channel.ChannelUpstreamHandler",
      "org.jboss.netty.channel.ChannelHandler",
      "com.ning.http.client.oauth.OAuthSignatureCalculator$1",
      "org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool",
      "com.ning.http.client.ConnectionPoolPartitioning",
      "org.jboss.netty.util.Timeout",
      "org.jboss.netty.channel.socket.nio.NioWorker",
      "com.ning.http.client.RequestBuilderBase$RequestImpl",
      "com.ning.http.client.AsyncHttpClientConfigDefaults",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$IntByIntToInt",
      "com.ning.http.client.providers.netty.handler.ConnectionStrategy",
      "com.ning.http.client.ProxyServerSelector$1",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$Preallocation",
      "org.jboss.netty.handler.ssl.SslBufferPool",
      "com.github.scribejava.core.model.OAuthRequest",
      "org.jboss.netty.logging.JdkLogger",
      "com.ning.http.client.providers.netty.request.NettyRequestSender",
      "com.ning.http.client.ProgressAsyncHandler",
      "org.jboss.netty.channel.WriteCompletionEvent",
      "com.ning.http.client.providers.jdk.JDKAsyncHttpProviderConfig",
      "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider$1",
      "org.jboss.netty.util.HashedWheelTimer$HashedWheelBucket",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ConcurrentHashMapSpliterator",
      "org.jboss.netty.handler.ssl.SslHandler$PendingWrite",
      "org.jboss.netty.channel.socket.nio.NioSocketChannel",
      "com.ning.http.client.Request",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "com.ning.http.client.ws.WebSocket",
      "com.ning.http.client.providers.netty.handler.Protocol",
      "com.github.scribejava.core.model.OAuthRequest$ResponseConverter",
      "org.jboss.netty.channel.socket.nio.WorkerPool",
      "com.ning.http.client.RequestBuilder",
      "org.jboss.netty.channel.socket.nio.NioChannelConfig",
      "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$PreallocationRef",
      "com.ning.http.util.StringUtils$1",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectByObjectToLong",
      "com.ning.http.client.AsyncHttpClientConfig",
      "com.ning.http.client.HttpResponseBodyPart",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter",
      "org.jboss.netty.util.internal.DetectionUtil$1",
      "org.jboss.netty.channel.ChannelFutureListener$2",
      "com.ning.http.client.providers.netty.response.NettyResponseHeaders",
      "com.ning.http.client.ProxyServerSelector",
      "org.jboss.netty.channel.AbstractChannel$ChannelCloseFuture",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ForwardingNode",
      "com.ning.http.client.providers.jdk.JDKFuture",
      "com.ning.http.client.AsyncHttpProvider",
      "org.jboss.netty.channel.ChannelFutureListener$1",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$CounterCell",
      "org.jboss.netty.channel.socket.nio.AbstractNioChannel",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ReservationNode",
      "org.jboss.netty.util.Timer",
      "org.jboss.netty.channel.socket.SocketChannel",
      "com.ning.http.client.providers.netty.response.NettyResponseBodyPart",
      "org.jboss.netty.util.ExternalResourceReleasable",
      "com.ning.http.client.HttpResponseHeaders",
      "com.github.scribejava.httpclient.ning.NingHttpClient",
      "com.ning.http.client.providers.netty.channel.pool.ChannelPool",
      "org.jboss.netty.channel.ChannelHandlerContext",
      "org.jboss.netty.channel.ChannelFuture",
      "com.ning.http.client.AsyncHttpClient",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool",
      "com.ning.http.client.MaxRedirectException",
      "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider",
      "com.ning.http.client.ListenableFuture",
      "com.ning.http.util.UriEncoder",
      "com.ning.http.client.Response",
      "com.ning.http.client.multipart.Part",
      "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool",
      "com.ning.http.client.HttpResponseStatus",
      "org.jboss.netty.channel.ChannelSink",
      "com.ning.http.client.AsyncHttpProviderConfig",
      "org.jboss.netty.channel.socket.nio.AbstractNioWorker",
      "org.jboss.netty.handler.codec.oneone.OneToOneEncoder",
      "com.ning.http.client.providers.jdk.JDKDelegateFuture",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$EntrySetView",
      "org.jboss.netty.channel.ChannelDownstreamHandler",
      "org.jboss.netty.channel.MessageEvent",
      "com.github.scribejava.core.model.Response",
      "org.jboss.netty.handler.codec.frame.FrameDecoder",
      "com.ning.http.client.SSLEngineFactory$DefaultSSLEngineFactory",
      "com.ning.http.client.uri.Uri",
      "org.jboss.netty.channel.ChannelFactory",
      "org.jboss.netty.channel.ChildChannelStateEvent",
      "org.jboss.netty.channel.socket.nio.AbstractNioSelector",
      "com.ning.http.client.providers.netty.channel.ChannelManager$7",
      "com.ning.http.client.providers.netty.channel.ChannelManager$8",
      "com.github.scribejava.core.httpclient.AbstractAsyncOnlyHttpClient",
      "org.jboss.netty.channel.ChannelPipeline",
      "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool$1",
      "com.github.scribejava.core.exceptions.OAuthException",
      "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig$NettyWebSocketFactory",
      "com.ning.http.client.oauth.ThreadSafeHMAC",
      "com.ning.http.client.AsyncCompletionHandler",
      "com.github.scribejava.core.httpclient.HttpClient",
      "com.ning.http.client.providers.netty.NettyAsyncHttpProviderConfig",
      "org.jboss.netty.channel.LifeCycleAwareChannelHandler",
      "org.jboss.netty.util.internal.DeadLockProofWorker",
      "org.jboss.netty.channel.group.DefaultChannelGroup$1",
      "com.ning.http.client.AsyncHttpClient$BoundRequestBuilder",
      "org.jboss.netty.channel.SimpleChannelUpstreamHandler",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$LongByLongToLong",
      "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool$IdleChannelDetector",
      "org.jboss.netty.channel.ChannelConfig",
      "org.jboss.netty.channel.socket.nio.NioSocketChannelConfig",
      "com.ning.http.client.listenable.AbstractListenableFuture",
      "com.ning.http.client.Realm",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "com.ning.http.client.NameResolver$JdkNameResolver",
      "com.ning.http.client.providers.netty.NettyAsyncHttpProvider",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$BiFun",
      "com.ning.http.client.FluentCaseInsensitiveStringsMap",
      "org.jboss.netty.handler.ssl.SslHandler",
      "org.jboss.netty.channel.ChannelEvent",
      "org.jboss.netty.channel.socket.nio.NioSelector",
      "org.jboss.netty.util.internal.SharedResourceMisuseDetector",
      "com.ning.http.util.UriEncoder$1",
      "com.ning.http.util.UriEncoder$2",
      "org.jboss.netty.channel.socket.nio.SocketReceiveBufferAllocator",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectToInt",
      "com.ning.http.client.cookie.Cookie",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ValuesView",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$1",
      "com.ning.http.client.BodyGenerator",
      "com.ning.http.client.providers.netty.handler.DefaultConnectionStrategy",
      "org.jboss.netty.handler.codec.http.HttpMessage",
      "org.jboss.netty.handler.codec.http.HttpMessageEncoder",
      "org.jboss.netty.channel.Channel",
      "org.jboss.netty.util.HashedWheelTimer",
      "com.ning.http.client.filter.FilterException",
      "org.jboss.netty.channel.AbstractChannel",
      "org.jboss.netty.handler.codec.http.HttpResponseStatus",
      "org.jboss.netty.channel.socket.nio.NioWorkerPool",
      "com.ning.http.util.StringUtils",
      "org.jboss.netty.bootstrap.ClientBootstrap",
      "com.github.scribejava.httpclient.ning.NingHttpClient$1",
      "org.jboss.netty.util.ThreadNameDeterminer$2",
      "org.jboss.netty.util.ThreadNameDeterminer$1",
      "org.jboss.netty.buffer.ChannelBuffer",
      "org.jboss.netty.channel.group.ChannelGroupFuture",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$CollectionView",
      "com.ning.http.client.providers.netty.channel.pool.NoopChannelPool",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$TreeBin",
      "org.jboss.netty.channel.socket.ClientSocketChannelFactory",
      "org.jboss.netty.util.HashedWheelTimer$1",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectToDouble",
      "com.ning.http.util.MiscUtils",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.jboss.netty.channel.socket.SocketChannelConfig",
      "org.jboss.netty.channel.ExceptionEvent",
      "org.jboss.netty.util.internal.DetectionUtil",
      "com.ning.http.client.RequestBuilderBase",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$CounterHashCode",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$Action",
      "com.ning.http.client.SSLEngineFactory",
      "com.ning.http.client.providers.netty.channel.pool.ChannelPoolPartitionSelector",
      "org.jboss.netty.util.internal.SystemPropertyUtil",
      "com.ning.http.client.AsyncCompletionHandlerBase",
      "com.github.scribejava.core.httpclient.HttpClientConfig",
      "org.jboss.netty.util.HashedWheelTimer$HashedWheelTimeout",
      "com.github.scribejava.core.model.Verb",
      "com.ning.http.client.AsyncHttpClientConfig$Builder",
      "org.jboss.netty.handler.codec.http.HttpContentDecompressor",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8",
      "org.jboss.netty.handler.codec.http.HttpRequestEncoder",
      "com.ning.http.client.oauth.OAuthSignatureCalculator",
      "com.ning.http.client.uri.UriParser",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectToLong",
      "org.jboss.netty.channel.ChannelPipelineFactory",
      "com.ning.http.client.providers.netty.handler.HttpProtocol",
      "com.github.scribejava.httpclient.ning.NingHttpClientConfig",
      "com.ning.http.client.SignatureCalculator",
      "com.ning.http.client.AsyncHandler",
      "org.jboss.netty.handler.codec.http.HttpClientCodec",
      "org.jboss.netty.logging.InternalLogger",
      "com.ning.http.client.providers.netty.response.NettyResponseStatus",
      "com.ning.http.client.providers.netty.Callback",
      "org.jboss.netty.util.internal.DeadLockProofWorker$1",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$Node",
      "org.jboss.netty.bootstrap.Bootstrap",
      "org.jboss.netty.handler.codec.http.HttpContentDecoder",
      "org.jboss.netty.channel.socket.nio.NioSelectorPool",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$ObjectByObjectToInt",
      "com.ning.http.client.ConnectionPoolPartitioning$PerHostConnectionPoolPartitioning",
      "org.jboss.netty.util.TimerTask",
      "org.jboss.netty.util.internal.NonReentrantLock",
      "com.github.scribejava.core.model.OAuthAsyncRequestCallback",
      "com.ning.http.client.AsyncHandler$STATE",
      "com.ning.http.client.providers.netty.handler.WebSocketProtocol",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8$KeySetView",
      "org.jboss.netty.channel.FileRegion",
      "org.jboss.netty.handler.codec.http.HttpChunkTrailer",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool$EmptySendBuffer",
      "org.jboss.netty.util.HashedWheelTimer$Worker",
      "org.jboss.netty.channel.ChannelPipelineException",
      "org.jboss.netty.channel.ChannelStateEvent",
      "org.jboss.netty.channel.socket.nio.SelectorUtil",
      "com.ning.http.client.providers.netty.channel.ChannelManager",
      "org.jboss.netty.channel.DefaultChannelFuture",
      "com.ning.http.client.providers.netty.handler.Processor"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.github.scribejava.core.model.OAuthAsyncRequestCallback", false, NingHttpClient_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.github.scribejava.core.model.OAuthRequest$ResponseConverter", false, NingHttpClient_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.ning.http.client.AsyncHttpClientConfig", false, NingHttpClient_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NingHttpClient_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$1",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$2",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter$3",
      "com.github.scribejava.httpclient.ning.NingHttpClient$BodySetter",
      "com.github.scribejava.core.model.Verb",
      "com.github.scribejava.httpclient.ning.NingHttpClient$1",
      "com.ning.http.client.AsyncHttpClient",
      "com.ning.http.client.AsyncHttpClientConfigDefaults",
      "com.ning.http.client.ProxyServerSelector",
      "com.ning.http.client.providers.jdk.JDKAsyncHttpProvider",
      "com.ning.http.client.RequestBuilderBase",
      "com.ning.http.client.ConnectionPoolPartitioning$PerHostConnectionPoolPartitioning",
      "com.ning.http.client.NameResolver$JdkNameResolver",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.jboss.netty.channel.SimpleChannelUpstreamHandler",
      "com.ning.http.client.providers.netty.NettyAsyncHttpProvider",
      "org.jboss.netty.util.internal.SharedResourceMisuseDetector",
      "org.jboss.netty.util.HashedWheelTimer",
      "org.jboss.netty.util.HashedWheelTimer$HashedWheelBucket",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "org.jboss.netty.util.internal.SystemPropertyUtil",
      "org.jboss.netty.util.internal.DetectionUtil",
      "com.ning.http.client.providers.netty.channel.ChannelManager",
      "org.jboss.netty.channel.group.DefaultChannelGroup",
      "com.ning.http.client.providers.netty.channel.CleanupChannelGroup",
      "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory",
      "org.jboss.netty.channel.socket.nio.AbstractNioWorkerPool",
      "com.ning.http.client.providers.netty.channel.pool.DefaultChannelPool",
      "com.ning.http.client.providers.netty.chmv8.ConcurrentHashMapV8",
      "org.jboss.netty.util.HashedWheelTimer$HashedWheelTimeout",
      "org.jboss.netty.channel.socket.nio.AbstractNioSelector",
      "org.jboss.netty.channel.socket.nio.SelectorUtil",
      "org.jboss.netty.util.internal.DeadLockProofWorker",
      "org.jboss.netty.channel.socket.nio.SocketSendBufferPool",
      "com.ning.http.client.AsyncCompletionHandler",
      "com.ning.http.client.AsyncCompletionHandlerBase",
      "com.ning.http.client.oauth.OAuthSignatureCalculator",
      "com.ning.http.client.oauth.ThreadSafeHMAC",
      "com.ning.http.util.StringUtils",
      "com.ning.http.util.UTF8UrlEncoder",
      "com.ning.http.util.UriEncoder$1",
      "com.ning.http.util.UriEncoder$2",
      "com.ning.http.util.UriEncoder"
    );
  }
}
