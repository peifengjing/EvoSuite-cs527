/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 06:22:21 GMT 2017
 */

package com.github.scribejava.apis;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.apis.StackExchangeApi;
import com.github.scribejava.core.builder.api.OAuth2SignatureType;
import com.github.scribejava.core.extractors.TokenExtractor;
import com.github.scribejava.core.model.OAuth2AccessToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StackExchangeApi_ESTest extends StackExchangeApi_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StackExchangeApi stackExchangeApi0 = StackExchangeApi.instance();
      String string0 = stackExchangeApi0.getAccessTokenEndpoint();
      assertEquals("https://stackexchange.com/oauth/access_token", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StackExchangeApi stackExchangeApi0 = StackExchangeApi.instance();
      TokenExtractor<OAuth2AccessToken> tokenExtractor0 = stackExchangeApi0.getAccessTokenExtractor();
      assertNotNull(tokenExtractor0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StackExchangeApi stackExchangeApi0 = StackExchangeApi.instance();
      stackExchangeApi0.getSignatureType();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StackExchangeApi stackExchangeApi0 = StackExchangeApi.instance();
      String string0 = stackExchangeApi0.getAuthorizationBaseUrl();
      assertEquals("https://stackexchange.com/oauth", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StackExchangeApi stackExchangeApi0 = new StackExchangeApi();
      assertEquals(OAuth2SignatureType.BEARER_URI_QUERY_PARAMETER, stackExchangeApi0.getSignatureType());
  }
}
