/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 06:36:34 GMT 2017
 */

package com.github.scribejava.apis;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.apis.LinkedInApi20;
import com.github.scribejava.core.builder.api.OAuth2SignatureType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinkedInApi20_ESTest extends LinkedInApi20_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedInApi20 linkedInApi20_0 = LinkedInApi20.instance();
      String string0 = linkedInApi20_0.getAuthorizationBaseUrl();
      assertEquals("https://www.linkedin.com/oauth/v2/authorization", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedInApi20 linkedInApi20_0 = new LinkedInApi20();
      assertEquals(OAuth2SignatureType.BEARER_AUTHORIZATION_REQUEST_HEADER_FIELD, linkedInApi20_0.getSignatureType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedInApi20 linkedInApi20_0 = LinkedInApi20.instance();
      String string0 = linkedInApi20_0.getAccessTokenEndpoint();
      assertEquals("https://www.linkedin.com/oauth/v2/accessToken", string0);
  }
}
