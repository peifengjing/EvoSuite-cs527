/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 05:56:21 GMT 2017
 */

package com.github.scribejava.apis.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.apis.HHApi;
import com.github.scribejava.apis.VkontakteApi;
import com.github.scribejava.apis.service.ImgurOAuthServiceImpl;
import com.github.scribejava.core.builder.api.DefaultApi20;
import com.github.scribejava.core.model.OAuth2AccessToken;
import com.github.scribejava.core.model.OAuthConfig;
import com.github.scribejava.core.model.OAuthRequest;
import com.github.scribejava.core.model.Verb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImgurOAuthServiceImpl_ESTest extends ImgurOAuthServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VkontakteApi vkontakteApi0 = VkontakteApi.instance();
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "");
      ImgurOAuthServiceImpl imgurOAuthServiceImpl0 = new ImgurOAuthServiceImpl(vkontakteApi0, oAuthConfig0);
      // Undeclared exception!
      try { 
        imgurOAuthServiceImpl0.signRequest((OAuth2AccessToken) null, (OAuthRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.apis.service.ImgurOAuthServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("c$%il,*vntj", "c$%il,*vntj");
      ImgurOAuthServiceImpl imgurOAuthServiceImpl0 = new ImgurOAuthServiceImpl((DefaultApi20) null, oAuthConfig0);
      // Undeclared exception!
      try { 
        imgurOAuthServiceImpl0.createAccessTokenRequest("c$%il,*vntj");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.apis.service.ImgurOAuthServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ImgurOAuthServiceImpl imgurOAuthServiceImpl0 = null;
      try {
        imgurOAuthServiceImpl0 = new ImgurOAuthServiceImpl((DefaultApi20) null, (OAuthConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth.OAuthService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HHApi hHApi0 = HHApi.instance();
      OAuthConfig oAuthConfig0 = new OAuthConfig(";/>}9%VSn`'f33", ";/>}9%VSn`'f33");
      ImgurOAuthServiceImpl imgurOAuthServiceImpl0 = new ImgurOAuthServiceImpl(hHApi0, oAuthConfig0);
      OAuthRequest oAuthRequest0 = imgurOAuthServiceImpl0.createAccessTokenRequest(";/>}9%VSn`'f33");
      OAuth2AccessToken oAuth2AccessToken0 = new OAuth2AccessToken(";/>}9%VSn`'f33");
      imgurOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
      assertEquals(Verb.POST, oAuthRequest0.getVerb());
  }
}
