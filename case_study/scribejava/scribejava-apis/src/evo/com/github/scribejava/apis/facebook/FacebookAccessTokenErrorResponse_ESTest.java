/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 04:37:57 GMT 2017
 */

package com.github.scribejava.apis.facebook;

import org.junit.Test;
import static org.junit.Assert.*;
import com.github.scribejava.apis.facebook.FacebookAccessTokenErrorResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FacebookAccessTokenErrorResponse_ESTest extends FacebookAccessTokenErrorResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("_=]", "_=]", "", "_=]", "_=]");
      facebookAccessTokenErrorResponse0.hashCode();
      assertEquals("", facebookAccessTokenErrorResponse0.getCode());
      assertEquals("_=]", facebookAccessTokenErrorResponse0.getFbtraceId());
      assertEquals("_=]", facebookAccessTokenErrorResponse0.getRawResponse());
      assertEquals("_=]", facebookAccessTokenErrorResponse0.getType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = facebookAccessTokenErrorResponse0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("E", "E", "E", (String) null, "");
      String string0 = facebookAccessTokenErrorResponse0.getType();
      assertEquals("E", string0);
      assertNotNull(string0);
      assertEquals("E", facebookAccessTokenErrorResponse0.getCode());
      assertEquals("", facebookAccessTokenErrorResponse0.getRawResponse());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = facebookAccessTokenErrorResponse0.getRawResponse();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", "", "FacebookAccessTokenErrorResponse{'type'='");
      String string0 = facebookAccessTokenErrorResponse0.getRawResponse();
      assertEquals("", facebookAccessTokenErrorResponse0.getCode());
      assertEquals("", facebookAccessTokenErrorResponse0.getFbtraceId());
      assertEquals("", facebookAccessTokenErrorResponse0.getType());
      assertEquals("FacebookAccessTokenErrorResponse{'type'='", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("q=", "q=", "q=", "q=", "q=");
      String string0 = facebookAccessTokenErrorResponse0.getFbtraceId();
      assertEquals("q=", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("XFEqWi(/wHbHn].o", "ya$=$R)h*Rl{qFT/", "ya$=$R)h*Rl{qFT/", "", (String) null);
      String string0 = facebookAccessTokenErrorResponse0.getFbtraceId();
      assertEquals("", string0);
      assertEquals("ya$=$R)h*Rl{qFT/", facebookAccessTokenErrorResponse0.getCode());
      assertEquals("ya$=$R)h*Rl{qFT/", facebookAccessTokenErrorResponse0.getType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("m%", "m%", "m%", "m%", "m%");
      String string0 = facebookAccessTokenErrorResponse0.getCode();
      assertEquals("m%", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", "", "");
      String string0 = facebookAccessTokenErrorResponse0.getCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse1 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("q=", "q=", "FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", "q=", "FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}");
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse1 = new FacebookAccessTokenErrorResponse("q=", "q=", "q=", "q=", "FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}");
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse1);
      assertEquals("FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", facebookAccessTokenErrorResponse1.getRawResponse());
      assertEquals("q=", facebookAccessTokenErrorResponse0.getFbtraceId());
      assertEquals("q=", facebookAccessTokenErrorResponse0.getType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", "", (String) null);
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse1 = new FacebookAccessTokenErrorResponse("", (String) null, "", "", (String) null);
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("q=", "q=", "q=", "q=", "q=");
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse1 = new FacebookAccessTokenErrorResponse("q=", "q=", "FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", "q=", "FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}");
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse1);
      assertEquals("q=", facebookAccessTokenErrorResponse1.getType());
      assertEquals("FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", facebookAccessTokenErrorResponse1.getRawResponse());
      assertFalse(boolean0);
      assertEquals("FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", facebookAccessTokenErrorResponse1.getCode());
      assertEquals("q=", facebookAccessTokenErrorResponse1.getFbtraceId());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", "", (String) null);
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse1 = new FacebookAccessTokenErrorResponse((String) null, "", "", "", (String) null);
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse((String) null, (String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(facebookAccessTokenErrorResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("com.github.scribejava.core.exceptions.OAuthException", "", (String) null, "", "");
      Object object0 = new Object();
      boolean boolean0 = facebookAccessTokenErrorResponse0.equals(object0);
      assertEquals("", facebookAccessTokenErrorResponse0.getRawResponse());
      assertFalse(boolean0);
      assertEquals("", facebookAccessTokenErrorResponse0.getType());
      assertEquals("", facebookAccessTokenErrorResponse0.getFbtraceId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", (String) null, "");
      String string0 = facebookAccessTokenErrorResponse0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("q=", "q=", "q=", "q=", "q=");
      String string0 = facebookAccessTokenErrorResponse0.toString();
      assertEquals("FacebookAccessTokenErrorResponse{'type'='q=', 'code'='q=', 'fbtraceId'='q=', 'rawResponse'='q=', 'message'='q='}", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("E", "E", "E", (String) null, "");
      facebookAccessTokenErrorResponse0.hashCode();
      assertEquals("", facebookAccessTokenErrorResponse0.getRawResponse());
      assertEquals("E", facebookAccessTokenErrorResponse0.getType());
      assertEquals("E", facebookAccessTokenErrorResponse0.getCode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", (String) null, "");
      String string0 = facebookAccessTokenErrorResponse0.getRawResponse();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("com.github.scribejava.core.exceptions.OAuthException", "", (String) null, "", "");
      String string0 = facebookAccessTokenErrorResponse0.getCode();
      assertEquals("", facebookAccessTokenErrorResponse0.getRawResponse());
      assertNull(string0);
      assertEquals("", facebookAccessTokenErrorResponse0.getType());
      assertEquals("", facebookAccessTokenErrorResponse0.getFbtraceId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FacebookAccessTokenErrorResponse facebookAccessTokenErrorResponse0 = new FacebookAccessTokenErrorResponse("", "", "", (String) null, "");
      String string0 = facebookAccessTokenErrorResponse0.getFbtraceId();
      assertNull(string0);
  }
}
