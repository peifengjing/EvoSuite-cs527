/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 05:17:59 GMT 2017
 */

package com.github.scribejava.apis;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.apis.LinkedInApi;
import com.github.scribejava.core.model.OAuth1RequestToken;
import com.github.scribejava.core.model.Verb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinkedInApi_ESTest extends LinkedInApi_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedInApi linkedInApi0 = LinkedInApi.instance((String[]) null);
      OAuth1RequestToken oAuth1RequestToken0 = new OAuth1RequestToken("https://api.linkedin.com/uas/oauth/accessToken", "https://api.linkedin.com/uas/oauth/requestToken");
      String string0 = linkedInApi0.getAuthorizationUrl(oAuth1RequestToken0);
      assertEquals("https://api.linkedin.com/uas/oauth/authenticate?oauth_token=https://api.linkedin.com/uas/oauth/accessToken", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LinkedInApi linkedInApi0 = null;
      try {
        linkedInApi0 = new LinkedInApi(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedInApi linkedInApi0 = null;
      try {
        linkedInApi0 = new LinkedInApi((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.apis.LinkedInApi", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedInApi linkedInApi0 = LinkedInApi.instance((String[]) null);
      String string0 = linkedInApi0.getRequestTokenEndpoint();
      assertEquals("https://api.linkedin.com/uas/oauth/requestToken", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      LinkedInApi linkedInApi0 = LinkedInApi.instance(stringArray0);
      assertEquals(Verb.POST, linkedInApi0.getAccessTokenVerb());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[0];
      LinkedInApi linkedInApi0 = LinkedInApi.instance(stringArray0);
      assertFalse(linkedInApi0.isEmptyOAuthTokenParamIsRequired());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = new String[3];
      LinkedInApi linkedInApi0 = new LinkedInApi(stringArray0);
      String string0 = linkedInApi0.getRequestTokenEndpoint();
      assertEquals("https://api.linkedin.com/uas/oauth/requestToken?scope=null+null+null", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedInApi linkedInApi0 = LinkedInApi.instance((String[]) null);
      String string0 = linkedInApi0.getAccessTokenEndpoint();
      assertEquals("https://api.linkedin.com/uas/oauth/accessToken", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedInApi linkedInApi0 = LinkedInApi.instance();
      // Undeclared exception!
      try { 
        linkedInApi0.getAuthorizationUrl((OAuth1RequestToken) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.apis.LinkedInApi", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      LinkedInApi linkedInApi0 = new LinkedInApi();
      assertEquals("https://api.linkedin.com/uas/oauth/accessToken", linkedInApi0.getAccessTokenEndpoint());
  }
}
