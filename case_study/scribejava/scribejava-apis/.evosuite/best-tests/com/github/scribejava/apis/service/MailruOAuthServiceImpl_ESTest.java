/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 13 05:47:16 GMT 2017
 */

package com.github.scribejava.apis.service;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.scribejava.apis.MisfitApi;
import com.github.scribejava.apis.RenrenApi;
import com.github.scribejava.apis.SinaWeiboApi20;
import com.github.scribejava.apis.VkontakteApi;
import com.github.scribejava.apis.service.MailruOAuthServiceImpl;
import com.github.scribejava.core.builder.api.DefaultApi20;
import com.github.scribejava.core.model.OAuth2AccessToken;
import com.github.scribejava.core.model.OAuthConfig;
import com.github.scribejava.core.model.OAuthRequest;
import com.github.scribejava.core.model.Verb;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MailruOAuthServiceImpl_ESTest extends MailruOAuthServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "c+u88");
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl((DefaultApi20) null, oAuthConfig0);
      // Undeclared exception!
      try { 
        mailruOAuthServiceImpl0.signRequest((OAuth2AccessToken) null, (OAuthRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.apis.service.MailruOAuthServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VkontakteApi vkontakteApi0 = VkontakteApi.instance();
      OAuthConfig oAuthConfig0 = new OAuthConfig("50s<!| ?+~%b?v", "50s<!| ?+~%b?v");
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl(vkontakteApi0, oAuthConfig0);
      OAuth2AccessToken oAuth2AccessToken0 = new OAuth2AccessToken("50s<!| ?+~%b?v", (String) null);
      Verb verb0 = Verb.POST;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "50s<!| ?+~%b?v");
      // Undeclared exception!
      try { 
        mailruOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"b?\"
         //
         verifyException("java.net.URLDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RenrenApi renrenApi0 = RenrenApi.instance();
      OAuthConfig oAuthConfig0 = new OAuthConfig("grant_type", "grant_type");
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl(renrenApi0, oAuthConfig0);
      Integer integer0 = new Integer(63);
      OAuth2AccessToken oAuth2AccessToken0 = new OAuth2AccessToken("grant_type", "grant_type", integer0, "grant_type", "=", "grant_type");
      Verb verb0 = Verb.TRACE;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, (String) null);
      // Undeclared exception!
      try { 
        mailruOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot append to null URL
         //
         verifyException("com.github.scribejava.core.utils.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      VkontakteApi vkontakteApi0 = VkontakteApi.instance();
      OAuthConfig oAuthConfig0 = new OAuthConfig("$o*gbK6", "$o*gbK6");
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl(vkontakteApi0, oAuthConfig0);
      OAuth2AccessToken oAuth2AccessToken0 = new OAuth2AccessToken("", "$o*gbK6");
      Verb verb0 = Verb.OPTIONS;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "");
      oAuthRequest0.addQuerystringParameter("", "");
      // Undeclared exception!
      try { 
        mailruOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.github.scribejava.apis.service.MailruOAuthServiceImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SinaWeiboApi20 sinaWeiboApi20_0 = SinaWeiboApi20.instance();
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = null;
      try {
        mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl(sinaWeiboApi20_0, (OAuthConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.github.scribejava.core.oauth.OAuthService", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OAuthConfig oAuthConfig0 = new OAuthConfig("", "");
      OAuth2AccessToken oAuth2AccessToken0 = new OAuth2AccessToken("", "");
      Verb verb0 = Verb.HEAD;
      OAuthRequest oAuthRequest0 = new OAuthRequest(verb0, "");
      MisfitApi misfitApi0 = MisfitApi.instance();
      MailruOAuthServiceImpl mailruOAuthServiceImpl0 = new MailruOAuthServiceImpl(misfitApi0, oAuthConfig0);
      mailruOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
      mailruOAuthServiceImpl0.signRequest(oAuth2AccessToken0, oAuthRequest0);
      assertNull(oAuthRequest0.getRealm());
  }
}
