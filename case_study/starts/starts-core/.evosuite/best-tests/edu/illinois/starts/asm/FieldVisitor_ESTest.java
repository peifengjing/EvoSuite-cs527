/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:28:55 GMT 2017
 */

package edu.illinois.starts.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.asm.AnnotationVisitor;
import edu.illinois.starts.asm.Attribute;
import edu.illinois.starts.asm.ClassWriter;
import edu.illinois.starts.asm.FieldVisitor;
import edu.illinois.starts.asm.FieldWriter;
import edu.illinois.starts.asm.TypePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldVisitor_ESTest extends FieldVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "Z7e@(&bk'+c", "void", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "void", "void", "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField((-1355), "", "", "", "");
      TypePath typePath0 = TypePath.fromString("3S@,83Z3");
      AnnotationVisitor annotationVisitor0 = fieldVisitor0.visitTypeAnnotation(24, typePath0, "3S@,83Z3", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(0, "Label offset position has not been resolved yet", "", (String) null, (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldVisitor0.visitAnnotation("Label offset position has not been resolved yet", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "Z7e@(&bk'+c", "void", "");
      TypePath typePath0 = new TypePath((byte[]) null, 268435456);
      // Undeclared exception!
      try { 
        fieldWriter0.visitTypeAnnotation(327680, typePath0, "Z7e@(&bk'+c", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.AnnotationWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "", ")V", ")V");
      byte[] byteArray0 = new byte[9];
      TypePath typePath0 = new TypePath(byteArray0, (byte)10);
      // Undeclared exception!
      try { 
        fieldWriter0.visitTypeAnnotation((-1), typePath0, "-5NkANC\"U>u-IL0", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("edu.illinois.starts.asm.AnnotationWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "Z7e@(&bk'+c", "void", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "void", "Z7e@(&bk'+c", "void", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }
}
