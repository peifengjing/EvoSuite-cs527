/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:17:09 GMT 2017
 */

package edu.illinois.starts.helpers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.helpers.Loadables;
import edu.illinois.yasgl.DirectedGraph;
import edu.illinois.yasgl.GraphVertexVisitor;
import java.io.File;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import org.apache.maven.surefire.booter.Classpath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loadables_ESTest extends Loadables_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      MockFile mockFile0 = new MockFile("wfj.j>xqCx ", "wfj.j>xqCx ");
      Loadables loadables0 = new Loadables(list0, "wfj.j>xqCx ", "wfj.j>xqCx ", false, mockFile0);
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Classpath classpath0 = new Classpath(set0);
      // Undeclared exception!
      try { 
        loadables0.create(linkedList1, classpath0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.Loadables", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("^62f1!gs", (Map<Long, String>) hashMap0);
      GraphVertexVisitor<String> graphVertexVisitor0 = (GraphVertexVisitor<String>) mock(GraphVertexVisitor.class, new ViolatedAssumptionAnswer());
      Set<String> set0 = directedGraph0.acceptBackward("jdeps-out", graphVertexVisitor0);
      Classpath classpath0 = new Classpath(set0);
      List<String> list0 = classpath0.getClassPath();
      Loadables loadables0 = new Loadables(list0, "", "%2bU", false, (File) null);
      Map<String, Set<String>> map0 = Loadables.getTransitiveClosurePerClass(directedGraph0, list0);
      loadables0.deps = map0;
      Map<String, Set<String>> map1 = loadables0.getTransitiveClosure();
      assertNull(map1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("j2tG_f3-=?3?6c", (Map<Long, String>) hashMap0);
      // Undeclared exception!
      try { 
        Loadables.getTransitiveClosurePerClass(directedGraph0, (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.Loadables", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loadables loadables0 = new Loadables((List<String>) null, "", "", false, (File) null);
      // Undeclared exception!
      try { 
        loadables0.getDepMap("", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      Classpath classpath0 = new Classpath(set0);
      Classpath classpath1 = new Classpath(classpath0, "");
      List<String> list0 = classpath1.getClassPath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/unicode-1-1-utf-8");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(list0, "", (String) null, true, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath1, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("", (Map<Long, String>) hashMap0);
      GraphVertexVisitor<String> graphVertexVisitor0 = (GraphVertexVisitor<String>) mock(GraphVertexVisitor.class, new ViolatedAssumptionAnswer());
      Set<String> set0 = directedGraph0.acceptForward("@@LoadedNullURLForDep: ", graphVertexVisitor0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      MockFile mockFile0 = new MockFile("", "u=eOP*9onL");
      Loadables loadables0 = new Loadables(list0, "", "@@LoadedNullURLForDep: ", false, mockFile0);
      Classpath classpath0 = new Classpath(set0);
      List<String> list1 = classpath0.getClassPath();
      try { 
        loadables0.getDepMap("[TIME]UPDATING CHECKSUMS: ", list1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // JDEPS cannot run with an empty classpath.
         //
         verifyException("edu.illinois.starts.helpers.Loadables", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("", (Map<Long, String>) hashMap0);
      GraphVertexVisitor<String> graphVertexVisitor0 = (GraphVertexVisitor<String>) mock(GraphVertexVisitor.class, new ViolatedAssumptionAnswer());
      Set<String> set0 = directedGraph0.acceptForward("@@LoadedNullURLForDep: ", graphVertexVisitor0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      MockFile mockFile0 = new MockFile("", "u=eOP*9onL");
      Loadables loadables0 = new Loadables(list0, "", "@@LoadedNullURLForDep: ", false, mockFile0);
      Map<String, Set<String>> map0 = loadables0.getDepMap("", list0);
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("", (Map<Long, String>) hashMap0);
      GraphVertexVisitor<String> graphVertexVisitor0 = (GraphVertexVisitor<String>) mock(GraphVertexVisitor.class, new ViolatedAssumptionAnswer());
      Set<String> set0 = directedGraph0.acceptForward("@@LoadedNullURLForDep: ", graphVertexVisitor0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      MockFile mockFile0 = new MockFile("", "u=eOP*9onL");
      Loadables loadables0 = new Loadables(list0, "", "@@LoadedNullURLForDep: ", false, mockFile0);
      Classpath classpath0 = new Classpath(set0);
      loadables0.setSurefireClasspath(classpath0);
      List<String> list1 = loadables0.getClasspathWithNoJars();
      assertNotNull(list1);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(list0, "edu.illinois.starts.helpers.RTSUtil", "", false, mockFile0);
      Classpath classpath0 = new Classpath(list0);
      Classpath classpath1 = new Classpath(classpath0, "");
      loadables0.setSurefireClasspath(classpath1);
      List<String> list1 = loadables0.getClasspathWithNoJars();
      assertEquals(1, list1.size());
      assertNotNull(list1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loadables loadables0 = new Loadables((List<String>) null, "f-Qs", "f-Qs", false, (File) null);
      List<String> list0 = loadables0.getClasspathWithNoJars();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      Map<String, Set<String>> map0 = Loadables.getTransitiveClosurePerClass((DirectedGraph<String>) null, list0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      Classpath classpath0 = new Classpath(set0);
      List<String> list0 = classpath0.getClassPath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/unicode-1-1-utf-8");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(list0, "", (String) null, true, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      Set<String> set0 = charset0.aliases();
      Classpath classpath0 = new Classpath(set0);
      Classpath classpath1 = new Classpath(classpath0, "");
      List<String> list0 = classpath1.getClassPath();
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(list0, "", (String) null, true, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      Classpath classpath0 = new Classpath(linkedHashSet0);
      Classpath classpath1 = new Classpath(classpath0, "9h/jWZHa_P");
      List<String> list0 = classpath1.getClassPath();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/9h/jWZHa_P");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "9h/jWZHa_P");
      MockFile mockFile0 = new MockFile("6R%k{|R)VU/");
      Loadables loadables0 = new Loadables(list0, "6R%k{|R)VU/", "6R%k{|R)VU/", false, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      Classpath classpath0 = new Classpath(linkedHashSet0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/6R%k{|R)VU");
      Classpath classpath1 = new Classpath(classpath0, "6R%k{|R)VU/");
      List<String> list0 = classpath1.getClassPath();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "6R%k{|R)VU/");
      MockFile mockFile0 = new MockFile("6R%k{|R)VU/");
      Loadables loadables0 = new Loadables(list0, "6R%k{|R)VU/", "6R%k{|R)VU/", false, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      MockFile mockFile0 = new MockFile("\u0004TTvm1i`k&Ue].jar");
      Loadables loadables0 = new Loadables(linkedList0, "UTF8", "\u0004TTvm1i`k&Ue].jar", false, mockFile0);
      Classpath classpath0 = new Classpath(linkedList0);
      Classpath classpath1 = new Classpath(classpath0, "\u0004TTvm1i`k&Ue].jar");
      loadables0.setSurefireClasspath(classpath1);
      List<String> list0 = loadables0.getClasspathWithNoJars();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(set0);
      Classpath classpath0 = new Classpath(linkedHashSet0);
      Classpath classpath1 = new Classpath(classpath0, "6R%k{|R)VU/");
      List<String> list0 = classpath1.getClassPath();
      MockFile mockFile0 = new MockFile("6R%k{|R)VU/");
      Loadables loadables0 = new Loadables(list0, "6R%k{|R)VU/", "6R%k{|R)VU/", false, mockFile0);
      // Undeclared exception!
      try { 
        loadables0.create(list0, classpath1, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // JDEPS cannot run with an empty classpath.
         //
         verifyException("edu.illinois.starts.helpers.Loadables", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(linkedList0, "", "1Ya$Rg(EK FMe$", true, mockFile0);
      try { 
        loadables0.getDepMap("", linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // JDEPS cannot run with an empty classpath.
         //
         verifyException("edu.illinois.starts.helpers.Loadables", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      MockFile mockFile0 = new MockFile("");
      Loadables loadables0 = new Loadables(list0, "edu.illinois.starts.helpers.RTSUtil", "", false, mockFile0);
      DirectedGraph<String> directedGraph0 = loadables0.getGraph();
      assertNull(directedGraph0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      HashMap<Long, String> hashMap0 = new HashMap<Long, String>();
      DirectedGraph<String> directedGraph0 = DirectedGraph.fromGiraphString("", (Map<Long, String>) hashMap0);
      GraphVertexVisitor<String> graphVertexVisitor0 = (GraphVertexVisitor<String>) mock(GraphVertexVisitor.class, new ViolatedAssumptionAnswer());
      Set<String> set0 = directedGraph0.acceptForward("@@LoadedNullURLForDep: ", graphVertexVisitor0);
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      MockFile mockFile0 = new MockFile("", "u=eOP*9onL");
      Loadables loadables0 = new Loadables(list0, "", "@@LoadedNullURLForDep: ", false, mockFile0);
      Set<String> set1 = loadables0.getUnreached();
      assertNull(set1);
  }
}
