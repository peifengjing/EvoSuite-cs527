/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:04:52 GMT 2017
 */

package edu.illinois.starts.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.asm.ClassWriter;
import edu.illinois.starts.asm.Frame;
import edu.illinois.starts.asm.Handle;
import edu.illinois.starts.asm.Item;
import edu.illinois.starts.asm.Label;
import edu.illinois.starts.asm.Type;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Frame_ESTest extends Frame_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(0, Type.VOID);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(9, Type.ARRAY);
      assertEquals(10, Type.OBJECT);
      assertEquals(11, Type.METHOD);
      assertEquals(2, Type.CHAR);
      assertEquals(3, Type.BYTE);
      assertEquals(4, Type.SHORT);
      assertEquals(7, Type.LONG);
      assertEquals(8, Type.DOUBLE);
      assertEquals(5, Type.INT);
      assertNotNull(type0);
      assertEquals(1, type0.getSize());
      assertEquals(1, type0.getSort());
      
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = typeArray0[0];
      typeArray0[3] = typeArray0[0];
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      boolean boolean0 = frame0.merge(classWriter0, frame1, 1141048066);
      assertTrue(boolean0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
      
      boolean boolean1 = frame0.merge(classWriter0, frame1, 9);
      assertTrue(boolean1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      // Undeclared exception!
      try { 
        frame0.execute(285212676, 0, (ClassWriter) null, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-2586));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      frame0.owner = label0;
      Item item0 = classWriter0.newMethodItem("C!5/=2[EmlvnGx%S jS", "C!5/=2[EmlvnGx%S jS", "", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      item0.set(1, "{V+#", "C!5/=2[EmlvnGx%S jS", "{V+#");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      frame0.execute((-2586), (-2586), classWriter0, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      frame0.owner = label0;
      ClassWriter classWriter0 = new ClassWriter((-3100));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(189, 2, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-2586));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      frame0.owner = label0;
      Item item0 = classWriter0.newNameTypeItem("java/lang/String", "r'");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      frame0.execute(173, 16711680, classWriter0, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(10, Type.OBJECT);
      assertEquals(5, Type.INT);
      assertEquals(9, Type.ARRAY);
      assertEquals(2, Type.CHAR);
      assertEquals(3, Type.BYTE);
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(7, Type.LONG);
      assertEquals(0, Type.VOID);
      assertEquals(11, Type.METHOD);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertNotNull(type0);
      assertEquals(1, type0.getSort());
      assertEquals(1, type0.getSize());
      
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = typeArray0[0];
      typeArray0[3] = typeArray0[0];
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      boolean boolean0 = frame0.merge(classWriter0, frame1, 5113);
      assertTrue(boolean0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
      
      boolean boolean1 = frame0.merge(classWriter0, frame1, 9);
      assertTrue(boolean1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = frame0.merge(classWriter0, frame1, 11);
      assertFalse(boolean2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-2586));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[7];
      Type type0 = Type.getObjectType("[]");
      assertEquals(3, Type.BYTE);
      assertEquals(5, Type.INT);
      assertEquals(2, Type.CHAR);
      assertEquals(10, Type.OBJECT);
      assertEquals(0, Type.VOID);
      assertEquals(9, Type.ARRAY);
      assertEquals(4, Type.SHORT);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(7, Type.LONG);
      assertEquals(11, Type.METHOD);
      assertEquals(8, Type.DOUBLE);
      assertNotNull(type0);
      assertEquals(1, type0.getSize());
      assertEquals(9, type0.getSort());
      assertEquals(1, type0.getDimensions());
      
      typeArray0[0] = type0;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, (-2586), typeArray0, 3);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1032));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[3];
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 2, typeArray0, (-2133));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-3408));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[6];
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, (-3408), typeArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(1775);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newHandleItem((-921), "", "  w\u0002ZFL$", "");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute((-723), (-723), classWriter0, item0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(9, Type.ARRAY);
      assertEquals(10, Type.OBJECT);
      assertEquals(5, Type.INT);
      assertEquals(6, Type.FLOAT);
      assertEquals(11, Type.METHOD);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(7, Type.LONG);
      assertEquals(4, Type.SHORT);
      assertEquals(8, Type.DOUBLE);
      assertEquals(0, Type.VOID);
      assertEquals(3, Type.BYTE);
      assertEquals(2, Type.CHAR);
      assertNotNull(type0);
      assertEquals(1, type0.getSize());
      assertEquals(1, type0.getSort());
      
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = typeArray0[1];
      typeArray0[3] = typeArray0[2];
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      int[] intArray0 = new int[9];
      intArray0[3] = (-1573);
      frame1.inputLocals = intArray0;
      boolean boolean0 = frame0.merge(classWriter0, frame1, 5113);
      assertTrue(boolean0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(0, Type.VOID);
      assertEquals(7, Type.LONG);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(6, Type.FLOAT);
      assertEquals(10, Type.OBJECT);
      assertEquals(5, Type.INT);
      assertEquals(11, Type.METHOD);
      assertEquals(9, Type.ARRAY);
      assertEquals(2, Type.CHAR);
      assertEquals(3, Type.BYTE);
      assertNotNull(type0);
      assertEquals(1, type0.getSort());
      assertEquals(1, type0.getSize());
      
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      Type type1 = Type.getReturnType("K%.}pku");
      assertEquals(2, Type.CHAR);
      assertEquals(5, Type.INT);
      assertEquals(7, Type.LONG);
      assertEquals(11, Type.METHOD);
      assertEquals(10, Type.OBJECT);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(0, Type.VOID);
      assertEquals(9, Type.ARRAY);
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(3, Type.BYTE);
      assertNotNull(type1);
      assertNotSame(type1, type0);
      assertFalse(type1.equals((Object)type0));
      assertEquals(11, type1.getSort());
      assertEquals(1, type1.getDimensions());
      assertEquals(1, type1.getSize());
      
      typeArray0[3] = type1;
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame1 = new Frame();
      assertNotNull(frame1);
      assertFalse(frame1.equals((Object)frame0));
      
      int[] intArray0 = new int[9];
      intArray0[3] = (-1573);
      frame1.inputLocals = intArray0;
      boolean boolean0 = frame0.merge(classWriter0, frame1, 5113);
      assertTrue(boolean0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(frame0, frame1);
      assertNotSame(frame1, frame0);
      assertFalse(frame0.equals((Object)frame1));
      assertFalse(frame1.equals((Object)frame0));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(170);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[5];
      Type type0 = Type.getType("edu.illinois.starts.asm.Frame");
      assertEquals(10, Type.OBJECT);
      assertEquals(3, Type.BYTE);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(11, Type.METHOD);
      assertEquals(5, Type.INT);
      assertEquals(7, Type.LONG);
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(6, Type.FLOAT);
      assertEquals(2, Type.CHAR);
      assertEquals(0, Type.VOID);
      assertEquals(9, Type.ARRAY);
      assertNotNull(type0);
      assertEquals(1, type0.getSize());
      assertEquals(1, type0.getDimensions());
      assertEquals(11, type0.getSort());
      
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = typeArray0[1];
      typeArray0[3] = typeArray0[0];
      typeArray0[4] = typeArray0[0];
      frame0.initInputFrame(classWriter0, 74, typeArray0, 11);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        frame0.merge(classWriter0, frame0, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(3, Type.BYTE);
      assertEquals(11, Type.METHOD);
      assertEquals(10, Type.OBJECT);
      assertEquals(5, Type.INT);
      assertEquals(7, Type.LONG);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(6, Type.FLOAT);
      assertEquals(0, Type.VOID);
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(9, Type.ARRAY);
      assertEquals(2, Type.CHAR);
      assertNotNull(type0);
      assertEquals(1, type0.getSort());
      assertEquals(1, type0.getSize());
      
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = typeArray0[0];
      typeArray0[3] = typeArray0[0];
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        frame0.merge(classWriter0, frame0, 5113);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(170);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(198, 198, (ClassWriter) null, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(197);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(197, 16777216, classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-3408));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(194, 2587, classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newClassItem("K%.}pku");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(193, 7, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(180);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(180, (-1740), classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-82));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      frame0.execute(177, (-82), classWriter0, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(69);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-737));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(174, 69, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-426));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(170, (-426), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-132));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(166, 166, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(2510);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(165, 2456, classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(164, (-24), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(161);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(161, 161, classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(159, (-24), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(157);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger(157);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(157, 157, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(47);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("2+ku", "2+ku", "KZM2p");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(155, 47, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(154);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      // Undeclared exception!
      try { 
        frame0.execute(154, (-1740), classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-55));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-694));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(151, (-55), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(150, (-24), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-55));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(137, (-55), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(134, (-24), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(1374);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(127, (-3678), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(119);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      frame0.execute(119, 119, classWriter0, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(96);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "b", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(96, 96, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(91);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(91, 91, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(88);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(88, 88, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(86);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newDouble(327680);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(86, 327680, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(81);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newDouble(327680);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(81, 327680, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(80);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.P=~y^=E!WkX", "", "DQ.P=~y^=E!WkX");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(80, 80, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(71);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFloat(77);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(77, 71, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(73);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(73, 73, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-3408));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(72, (-3513), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(71);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newDouble(327680);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(71, 327680, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(69);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(69, 71, (ClassWriter) null, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(67);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newDouble(327680);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(67, 327680, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(62, (-644), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newMethodTypeItem("K%.}pku");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(60, (-2859), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(54);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(54, 54, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(50);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "DQ.x=~y^=E!WT", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(50, 50, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(48);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(48, 48, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(46);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(46, 46, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(44);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(44, 44, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(40);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "%+%K!Bvk7?d", "DQ.x=~y^=E!WT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(40, 40, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(170);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newNameTypeItem("edu.illinois.starts.asm.Frame", "edu.illinois.starts.asm.Frame");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(28, 4, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(22);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(22, 22, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-55));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(20);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(20, (-55), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(170);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newNameTypeItem("edu.illinois.starts.asm.Frame", "edu.illinois.starts.asm.Frame");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(17, 4, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(10, Type.OBJECT);
      assertEquals(0, Type.VOID);
      assertEquals(9, Type.ARRAY);
      assertEquals(11, Type.METHOD);
      assertEquals(2, Type.CHAR);
      assertEquals(3, Type.BYTE);
      assertEquals(8, Type.DOUBLE);
      assertEquals(4, Type.SHORT);
      assertEquals(7, Type.LONG);
      assertEquals(5, Type.INT);
      assertNotNull(type0);
      assertEquals(1, type0.getSize());
      assertEquals(1, type0.getSort());
      
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = typeArray0[1];
      typeArray0[3] = type0;
      Handle handle0 = new Handle(161, "Eq%ZNJJF/gd~Cf", "", "Eq%ZNJJF/gd~Cf");
      assertNotNull(handle0);
      assertEquals("Eq%ZNJJF/gd~Cf", handle0.getDesc());
      assertEquals(161, handle0.getTag());
      assertEquals("Eq%ZNJJF/gd~Cf", handle0.getOwner());
      assertEquals("", handle0.getName());
      
      Item item0 = classWriter0.newInvokeDynamicItem("K%.}pku", "K%.}pku", handle0, typeArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      assertEquals("Eq%ZNJJF/gd~Cf", handle0.getDesc());
      assertEquals(161, handle0.getTag());
      assertEquals("Eq%ZNJJF/gd~Cf", handle0.getOwner());
      assertEquals("", handle0.getName());
      
      // Undeclared exception!
      try { 
        frame0.execute(11, 6, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(10);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newInteger((-718));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(10, 10, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "DQ.x=~y^=E!WT", "DQ.x=~y^=E!WT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      // Undeclared exception!
      try { 
        frame0.execute(9, 4, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      assertEquals(8, Type.DOUBLE);
      assertEquals(0, Type.VOID);
      assertEquals(6, Type.FLOAT);
      assertEquals(1, Type.BOOLEAN);
      assertEquals(5, Type.INT);
      assertEquals(11, Type.METHOD);
      assertEquals(10, Type.OBJECT);
      assertEquals(2, Type.CHAR);
      assertEquals(7, Type.LONG);
      assertEquals(9, Type.ARRAY);
      assertEquals(4, Type.SHORT);
      assertEquals(3, Type.BYTE);
      assertNotNull(type0);
      assertEquals(1, type0.getSort());
      assertEquals(1, type0.getSize());
      
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = type0;
      typeArray0[3] = typeArray0[2];
      Handle handle0 = new Handle(8, "MtWy\"i,1pWv^v,,", "MtWy\"i,1pWv^v,,", "K%.}pku");
      assertNotNull(handle0);
      assertEquals("MtWy\"i,1pWv^v,,", handle0.getName());
      assertEquals(8, handle0.getTag());
      assertEquals("K%.}pku", handle0.getDesc());
      assertEquals("MtWy\"i,1pWv^v,,", handle0.getOwner());
      
      Item item0 = classWriter0.newInvokeDynamicItem("Ljava/io/InputStream;", "K%.}pku", handle0, typeArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      assertEquals("MtWy\"i,1pWv^v,,", handle0.getName());
      assertEquals(8, handle0.getTag());
      assertEquals("K%.}pku", handle0.getDesc());
      assertEquals("MtWy\"i,1pWv^v,,", handle0.getOwner());
      
      // Undeclared exception!
      try { 
        frame0.execute(8, 1439, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(8);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(7, 4, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(42);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key4;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(5, 0, (ClassWriter) null, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(200);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newMethodItem("C!5/=2[EmlvnGx%S jS", "C!5/=2[EmlvnGx%S jS", "", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(4, (-2833), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newClassItem("|s");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(3, (-1150), (ClassWriter) null, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1543));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(2, 8, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3883);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(1, (-114), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      frame0.execute(0, 16777227, classWriter0, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-2586));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[7];
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, (-2586), typeArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-1573));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Type[] typeArray0 = new Type[4];
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 2, typeArray0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(182);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFieldItem("DQ.x=~y^=E!WT", "", "DQ.x=~y^=E!WT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(182, 182, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter(3016);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newHandleItem(4293, "", "", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        frame0.execute(90, 90, classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      ClassWriter classWriter0 = new ClassWriter((-2586));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newMethodItem("C!5/=2[EmlvnGx%S jS", "C!5/=2[EmlvnGx%S jS", "", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      item0.set((-2082), "#Rv+J:Lf]8w}", "x|om", "x|om");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        frame0.execute((-2586), (-2586), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = typeArray0[1];
      Type type1 = Type.getReturnType("KP.TpZu");
      typeArray0[3] = type1;
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(925);
      Item item0 = classWriter0.newHandleItem((-1551), "4E?nY)Z", "zxm(B,#/$", "4E?nY)Z");
      // Undeclared exception!
      try { 
        frame0.execute((-1551), (-1551), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(194);
      Item item0 = classWriter0.newMethodItem("StackMap", "StackMap", "StackMap", true);
      // Undeclared exception!
      try { 
        frame0.execute((-2671), (-2671), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(1060);
      Item item0 = new Item();
      item0.set(2, "RuntimeInvisibleAnnotations", "`H0#QW]~Ft`GeHS^#", "");
      // Undeclared exception!
      try { 
        frame0.execute((-3527), (-3527), classWriter0, item0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      typeArray0[0] = type0;
      typeArray0[1] = typeArray0[0];
      typeArray0[2] = typeArray0[0];
      Type type1 = Type.getObjectType("K%.}pku");
      typeArray0[3] = type1;
      frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
      Frame frame1 = new Frame();
      int[] intArray0 = new int[9];
      intArray0[3] = (-1573);
      frame1.inputLocals = intArray0;
      boolean boolean0 = frame0.merge(classWriter0, frame1, 9);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.INT_TYPE;
      typeArray0[0] = type0;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, (-1573), typeArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.CHAR_TYPE;
      typeArray0[0] = type0;
      Type type1 = Type.FLOAT_TYPE;
      typeArray0[1] = type1;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.BOOLEAN_TYPE;
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      Type type1 = Type.DOUBLE_TYPE;
      typeArray0[2] = type1;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 32767, typeArray0, 8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(47);
      Type[] typeArray0 = new Type[4];
      Type type0 = Type.LONG_TYPE;
      typeArray0[0] = type0;
      Type type1 = Type.BYTE_TYPE;
      typeArray0[1] = type1;
      // Undeclared exception!
      try { 
        frame0.initInputFrame(classWriter0, 28, typeArray0, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      Type type0 = Type.VOID_TYPE;
      Item item0 = classWriter0.newConstItem(type0);
      frame0.execute(711, (-547), classWriter0, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(200);
      Label label0 = new Label();
      frame0.owner = label0;
      Item item0 = classWriter0.newMethodItem("C!5/=2[EmlvnGx%S jS", "C!5/=2[EmlvnGx%S jS", "", false);
      frame0.execute(200, 200, classWriter0, item0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-1573));
      // Undeclared exception!
      try { 
        frame0.execute(6, 16777216, classWriter0, (Item) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter((-2586));
      Label label0 = new Label();
      frame0.owner = label0;
      Item item0 = classWriter0.newMethodItem("C!5/=2[EmlvnGx%S jS", "C!5/=2[EmlvnGx%S jS", "", false);
      frame0.execute((-2586), (-2586), classWriter0, item0);
      frame0.execute(21, 1443, classWriter0, item0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }
}
