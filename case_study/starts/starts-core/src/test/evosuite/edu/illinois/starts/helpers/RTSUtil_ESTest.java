/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:26:19 GMT 2017
 */

package edu.illinois.starts.helpers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.helpers.RTSUtil;
import edu.illinois.yasgl.DirectedGraph;
import java.io.StringWriter;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RTSUtil_ESTest extends RTSUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        RTSUtil.runJdeps((List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        RTSUtil.getDepsFromJdepsOutput((StringWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringWriter stringWriter0 = mock(StringWriter.class, new ViolatedAssumptionAnswer());
      doReturn(" -> ").when(stringWriter0).toString();
      Map<String, Set<String>> map0 = RTSUtil.getDepsFromJdepsOutput(stringWriter0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      DirectedGraph<String> directedGraph0 = (DirectedGraph<String>) mock(DirectedGraph.class, new ViolatedAssumptionAnswer());
      RTSUtil.saveForNextRun("[TIME]RE-SAVING CHECKSUMS: ", directedGraph0, false, "edu.illinois.starts.helpers.RTSUtil");
      DirectedGraph<String> directedGraph1 = (DirectedGraph<String>) mock(DirectedGraph.class, new ViolatedAssumptionAnswer());
      RTSUtil.saveForNextRun("[TIME]RE-SAVING CHECKSUMS: ", directedGraph1, false, "->");
      StringWriter stringWriter0 = mock(StringWriter.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(stringWriter0).toString();
      // Undeclared exception!
      try { 
        RTSUtil.getDepsFromJdepsOutput(stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.RTSUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringWriter stringWriter0 = mock(StringWriter.class, new ViolatedAssumptionAnswer());
      doReturn("test-classes7(rqvFL2i:)ju").when(stringWriter0).toString();
      Map<String, Set<String>> map0 = RTSUtil.getDepsFromJdepsOutput(stringWriter0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RTSUtil rTSUtil0 = new RTSUtil();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringWriter stringWriter0 = mock(StringWriter.class, new ViolatedAssumptionAnswer());
      doReturn("MvzHpSA.jar").when(stringWriter0).toString();
      Map<String, Set<String>> map0 = RTSUtil.getDepsFromJdepsOutput(stringWriter0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      // Undeclared exception!
      try { 
        RTSUtil.computeAndSaveNewCheckSums("m9tq,!,,", (Set<String>) null, map0, classLoader0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.util.ChecksumUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DirectedGraph<String> directedGraph0 = (DirectedGraph<String>) mock(DirectedGraph.class, new ViolatedAssumptionAnswer());
      RTSUtil.saveForNextRun("[TIME]RE-SAVING CHECKSUMS: ", directedGraph0, false, "edu.illinois.starts.helpers.RTSUtil");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      StringWriter stringWriter0 = mock(StringWriter.class, new ViolatedAssumptionAnswer());
      doReturn("classesMock for StringWriter, hashCode: 970113000").when(stringWriter0).toString();
      Map<String, Set<String>> map0 = RTSUtil.getDepsFromJdepsOutput(stringWriter0);
      // Undeclared exception!
      try { 
        RTSUtil.computeAffectedTests((HashSet<String>) null, (Set<String>) null, map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashSet", e);
      }
  }
}
