/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:13:23 GMT 2017
 */

package edu.illinois.starts.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.asm.AnnotationVisitor;
import edu.illinois.starts.asm.Attribute;
import edu.illinois.starts.asm.ClassWriter;
import edu.illinois.starts.asm.Handle;
import edu.illinois.starts.asm.Label;
import edu.illinois.starts.asm.MethodVisitor;
import edu.illinois.starts.asm.MethodWriter;
import edu.illinois.starts.asm.TypePath;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodVisitor_ESTest extends MethodVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitParameter("", 262144);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitMultiANewArrayInsn("mOftF#Wn$Le", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitMethodInsn(262144, "mOftF#Wn$Le", "", "LineNumberTable", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("E'NUW}uk/sKZg/Gw|,L", "", "riO>", label0, label0, 1458);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjRpJz", "8tO=xjRpJz", "8tO=xjRpJz", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber(2173, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitLdcInsn("Dj");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1, "LineNumberTable", "LineNumberTable", ">9mF05U< 8Kz", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodVisitor0.visitJumpInsn(1072, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Handle handle0 = new Handle((-1), "Dj", "x", "Z7wVU");
      assertEquals("Dj", handle0.getOwner());
      assertEquals("x", handle0.getName());
      assertEquals((-1), handle0.getTag());
      assertEquals("Z7wVU", handle0.getDesc());
      assertNotNull(handle0);
      
      methodWriter0.visitInvokeDynamicInsn("<SGF*1i/<3", "<SGF*1i/<3", handle0, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals("Dj", handle0.getOwner());
      assertEquals("x", handle0.getName());
      assertEquals((-1), handle0.getTag());
      assertEquals("Z7wVU", handle0.getDesc());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(17, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      Object[] objectArray0 = new Object[6];
      methodVisitor0.visitFrame(327680, 327680, objectArray0, 2, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitFieldInsn((-2776), "Method code too large!", "Method code too large!", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-7));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "c_6-_.'ZT15{H";
      stringArray0[1] = "\")J7";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2561), "INVOKESPECIAL/STATIC on interfaces require ASM 5", "INVOKESPECIAL/STATIC on interfaces require ASM 5", "\")J7", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Attribute attribute0 = new Attribute("c_6-_.'ZT15{H");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitVarInsn(2487, 262144);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(17, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTypeInsn(4, "StackMap");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1, "LineNumberTable", "LineNumberTable", ">9mF05U< 8Kz", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "LineNumberTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-23));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3128), "SourceFile", "", "Eb{`d<C", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs(1, (-23));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn((-2154), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2406);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = ">Z";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", ">Z", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2, "LineNumberTable", "(/nlF'o2}]v", "LineNumberTable", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitIincInsn(185, 2343);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitTypeAnnotation(2, (TypePath) null, "Dj", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      TypePath typePath0 = TypePath.fromString("Dj");
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertEquals(0, typePath0.getLength());
      assertNotNull(typePath0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitTryCatchAnnotation(1, typePath0, "8tO=xjvR#pEJz", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertEquals(0, typePath0.getLength());
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2103);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "N(/*";
      stringArray0[2] = "\"5$o&>";
      stringArray0[3] = "\"5$o&>";
      stringArray0[4] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[5] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[6] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[7] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[8] = "N(/*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2406, "N(/*", "8\"YTd3rzBeQUXa%!+Ye", "\"5$o&>", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitInsnAnnotation(327680, (TypePath) null, "p,@<U$7c0F?3", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(64);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "S6meR7S4Sj &p";
      stringArray0[1] = "S6meR7S4Sj &p";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1489, "S6meR7S4Sj &p", "S6meR7S4Sj &p", "S6meR7S4Sj &p", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      AnnotationVisitor annotationVisitor0 = methodVisitor0.visitAnnotation("java/lang/String", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      TypePath typePath0 = new TypePath((byte[]) null, 262144);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertNotNull(typePath0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeAnnotation(185, typePath0, "E.wI^z) J1o3\",s(", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.AnnotationWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)22;
      TypePath typePath0 = new TypePath(byteArray0, 1);
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(22, typePath0.getLength());
      assertArrayEquals(new byte[] {(byte)0, (byte)22, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertNotNull(typePath0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeAnnotation((-1), typePath0, "yOQ6{~%_f", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      TypePath typePath0 = TypePath.fromString("8tO=xjvR##pEJS");
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(1, typePath0.getLength());
      assertNotNull(typePath0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTryCatchAnnotation(2, typePath0, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(128);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "INVOKESPECIAL/STATIC on interfaces require ASM 5";
      stringArray0[1] = ",MFM[Y~RozA!Et";
      stringArray0[2] = ",MFM[Y~RozA!Et";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(128, ",MFM[Y~RozA!Et", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      byte[] byteArray0 = new byte[1];
      TypePath typePath0 = new TypePath(byteArray0, 128);
      assertEquals(2, TypePath.WILDCARD_BOUND);
      assertEquals(1, TypePath.INNER_TYPE);
      assertEquals(0, TypePath.ARRAY_ELEMENT);
      assertEquals(3, TypePath.TYPE_ARGUMENT);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      assertNotNull(typePath0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitTryCatchAnnotation(2, typePath0, "value ", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("edu.illinois.starts.asm.AnnotationWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[8];
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn((-1684), 56, label0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "Dj", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte)87, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(266240);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "INVOKESPECIAL/STATIC on interfaces require ASM 5";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(3189, "", "", "INVOKESPECIAL/STATIC on interfaces require ASM 5", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitParameterAnnotation(67, "Wt+X\"^V=>F&f1", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("edu.illinois.starts.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(57);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "]&]ear}w", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((int) (byte)100, (String) null, (String) null, "8tO=xjvR##pEJS", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "Dj", stringArray0, false, false);
      classWriter0.index = 50331648;
      // Undeclared exception!
      methodWriter0.visitMethodInsn(109, "]&]ear}w", "Dj", "");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(256);
      MethodVisitor methodVisitor0 = classWriter0.visitMethod((-1265), "INVOKESPECIAL/STATIC on interfaces require ASM 5", "INVOKESPECIAL/STATIC on interfaces require ASM 5", (String) null, (String[]) null);
      // Undeclared exception!
      try { 
        methodVisitor0.visitMethodInsn((-1265), "A06AlVTX}] : FK", (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1, "LineNumberTable", "(/nlF'o2}b]v", ">9mF05U< 8Kz", (String[]) null);
      Label label0 = new Label();
      int[] intArray0 = new int[0];
      // Undeclared exception!
      try { 
        methodVisitor0.visitLookupSwitchInsn(label0, intArray0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "LineNumberTable", "mOftF#Wn$Le", (String[]) null);
      Label[] labelArray0 = new Label[0];
      int[] intArray0 = new int[8];
      // Undeclared exception!
      try { 
        methodVisitor0.visitLocalVariableAnnotation(1370, (TypePath) null, labelArray0, labelArray0, intArray0, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pJz", "8tO=xjvR#pJz", "Dj", stringArray0, false, false);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("yOQ6{~%_f", "8tO=xjvR#pJz", "", (Label) null, label0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(327680);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "YC`";
      stringArray0[1] = "YC`";
      stringArray0[2] = "VOzF?<'1VB}ggf5";
      stringArray0[3] = "YC`";
      stringArray0[4] = "YC`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 262144, "YC`", "YC`", "YC`", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(327680, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2103);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "N(/*";
      stringArray0[2] = "\"5$o&>";
      stringArray0[3] = "\"5$o&>";
      stringArray0[4] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[5] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[6] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[7] = "8\"YTd3rzBeQUXa%!+Ye";
      stringArray0[8] = "N(/*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2406, "N(/*", "8\"YTd3rzBeQUXa%!+Ye", "\"5$o&>", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("edu.illinois.starts.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitLabel((Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1684));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR#pEJz", "8tO=xjvR#pEJz", "Dj", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-1), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      Handle handle0 = new Handle(2487, "c", "mOftF#Wn$Le", "(/nlF'o2}]v");
      // Undeclared exception!
      try { 
        methodVisitor0.visitInvokeDynamicInsn("LineNumberTable", "", handle0, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "]&]ear}w", stringArray0, false, false);
      Label[] labelArray0 = new Label[7];
      Handle handle0 = new Handle(327680, "xj0+8?d~L+HM@J", "", "]&]ear}w");
      // Undeclared exception!
      try { 
        methodWriter0.visitInvokeDynamicInsn("8tO=xjvR##pEJS", "", handle0, labelArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("edu.illinois.starts.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(17, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-79);
      TypePath typePath0 = new TypePath(byteArray0, (byte)0);
      // Undeclared exception!
      try { 
        methodVisitor0.visitInsnAnnotation(2, typePath0, (String) null, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", stringArray0, false, false);
      Label[] labelArray0 = new Label[7];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 64, labelArray0, (byte)5, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "Dj", stringArray0, false, false);
      String[] stringArray1 = new String[14];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1604, stringArray0, 1, stringArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      // Undeclared exception!
      try { 
        methodVisitor0.visitFieldInsn(327680, "", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3407);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "<init>", "{Zh\"Oa1R-],R-Y,{]|l", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2776));
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(2487, "LineNumberTable", "(/nlF'o2}]v", "mOftF#Wn$Le", (String[]) null);
      // Undeclared exception!
      try { 
        methodVisitor0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "Dj", stringArray0, false, false);
      methodWriter0.visitMethodInsn(115, "]&]ear}w", "Dj", "");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1673));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "8tO=xjvR##pEJS", "8tO=xjvR##pEJS", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
