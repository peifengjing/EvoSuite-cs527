/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 21:22:00 GMT 2017
 */

package edu.illinois.starts.helpers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.illinois.starts.helpers.Cache;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cache_ESTest extends Cache_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockFile mockFile0 = new MockFile("UZKym'/Fy[Y<Z", "UZKym'/Fy[Y<Z");
      Cache cache0 = new Cache(mockFile0, "UZKym'/Fy[Y<Z");
      mockFile0.mkdirs();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      cache0.loadM2EdgesFromCache(linkedList0, "+[`s");
      cache0.loadM2EdgesFromCache(linkedList0, "UZKym'/Fy[Y<Z");
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          MockFile mockFile0 = new MockFile(".jar", "");
          Cache cache0 = new Cache(mockFile0, "");
          LinkedList<String> linkedList0 = new LinkedList<String>();
          // Undeclared exception!
          try { 
            cache0.loadM2EdgesFromCache(linkedList0, ".jar");
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/.jar\" \"write\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // java.lang.SecurityManager.checkWrite(SecurityManager.java:979)
             // sun.nio.fs.UnixPath.checkWrite(UnixPath.java:801)
             // sun.nio.fs.UnixFileSystemProvider.createDirectory(UnixFileSystemProvider.java:376)
             // java.nio.file.Files.createDirectory(Files.java:674)
             // java.nio.file.Files.createAndCheckIsDirectory(Files.java:781)
             // java.nio.file.Files.createDirectories(Files.java:727)
             // edu.illinois.starts.helpers.Writer.getWriter(Writer.java:135)
             // edu.illinois.starts.helpers.Writer.writeDepsToFile(Writer.java:103)
             // edu.illinois.starts.helpers.Cache.checkMissingJarsInJDKCache(Cache.java:78)
             // edu.illinois.starts.helpers.Cache.loadM2EdgesFromCache(Cache.java:48)
             // sun.reflect.GeneratedMethodAccessor93.invoke(Unknown Source)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:257)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:220)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("->", "->");
      Cache cache0 = new Cache(mockFile0, "->");
      // Undeclared exception!
      try { 
        cache0.loadM2EdgesFromCache((List<String>) null, "->");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // I could not create the jdeps cache: /Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/->/->
         //
         verifyException("edu.illinois.starts.helpers.Cache", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("UZKym'/Fy[Y<Z", "UZKym'/Fy[Y<Z");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/Users/Peifeng/Desktop/Study/Topics-in-Software-Engineering/GitLab/evosuite/case_study/starts/starts-core/UZKym'/Fy[Y<Z/UZKym'/Fy[Y<Z/.graph");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Cache cache0 = new Cache(mockFile0, "UZKym'/Fy[Y<Z");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      cache0.loadM2EdgesFromCache(linkedList0, ".jar");
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Cache cache0 = new Cache((File) null, (String) null);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        cache0.loadM2EdgesFromCache(linkedList0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.illinois.starts.helpers.Cache", e);
      }
  }
}
