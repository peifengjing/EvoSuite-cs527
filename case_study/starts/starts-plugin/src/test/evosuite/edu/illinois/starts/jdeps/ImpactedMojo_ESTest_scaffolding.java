/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Oct 15 21:39:05 GMT 2017
 */

package edu.illinois.starts.jdeps;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ImpactedMojo_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "edu.illinois.starts.jdeps.ImpactedMojo"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", ""); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ImpactedMojo_ESTest_scaffolding.class.getClassLoader() ,
      "edu.illinois.starts.jdeps.ImpactedMojo",
      "edu.illinois.yasgl.AbstractGraph",
      "edu.illinois.starts.jdeps.BaseMojo$Result",
      "edu.illinois.starts.jdeps.DiffMojo",
      "edu.illinois.starts.enums.DependencyFormat",
      "edu.illinois.yasgl.Graph",
      "edu.illinois.starts.util.Pair",
      "edu.illinois.starts.constants.StartsConstants",
      "edu.illinois.yasgl.DirectedGraph",
      "edu.illinois.starts.util.Logger",
      "edu.illinois.starts.jdeps.BaseMojo"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ImpactedMojo_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "edu.illinois.starts.constants.StartsConstants",
      "edu.illinois.starts.util.Logger",
      "edu.illinois.starts.helpers.ZLCHelper",
      "edu.illinois.starts.helpers.Writer",
      "org.ekstazi.util.Types",
      "edu.illinois.starts.util.ChecksumUtil",
      "edu.illinois.starts.helpers.RTSUtil",
      "org.codehaus.plexus.util.xml.Xpp3Dom",
      "org.codehaus.plexus.DefaultPlexusContainer",
      "org.codehaus.plexus.context.DefaultContext$Hidden",
      "org.codehaus.plexus.context.DefaultContext",
      "edu.illinois.yasgl.AbstractGraph",
      "edu.illinois.yasgl.DirectedGraph",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.MultimapBuilder",
      "com.google.common.collect.MultimapBuilder$MultimapBuilderWithKeys",
      "com.google.common.collect.Collections2",
      "com.google.common.collect.Maps",
      "com.google.common.collect.MultimapBuilder$LinkedHashSetSupplier",
      "com.google.common.collect.AbstractMapBasedMultimap",
      "com.google.common.collect.AbstractSetMultimap",
      "com.google.common.collect.Multimaps$CustomSetMultimap",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.RegularImmutableBiMap",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.RegularImmutableSet",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "com.google.common.collect.ImmutableSetMultimap$EntrySet",
      "com.google.common.collect.Iterators"
    );
  }
}
