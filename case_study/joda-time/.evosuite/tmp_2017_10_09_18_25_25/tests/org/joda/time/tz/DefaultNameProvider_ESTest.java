/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 03:34:13 GMT 2017
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.tz.DefaultNameProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultNameProvider_ESTest extends DefaultNameProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPANESE;
      locale0.getDisplayVariant();
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getShortName(locale0, (String) null, "");
      locale1.getDisplayName();
      locale1.toLanguageTag();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      Locale locale2 = Locale.ITALY;
      Locale.setDefault(locale_Category0, locale2);
      defaultNameProvider0.getName(locale1, "", "", true);
      defaultNameProvider0.getShortName(locale0, "MST", "MST");
      Locale locale3 = Locale.FRENCH;
      locale3.toLanguageTag();
      defaultNameProvider0.getName(locale3, "cCV{", "");
      defaultNameProvider0.getName(locale0, "ja", "", true);
      locale0.getDisplayName(locale3);
      defaultNameProvider0.getShortName(locale0, (String) null, "cCV{");
      defaultNameProvider0.getName(locale1, "l2JewOQ)", (String) null, true);
      defaultNameProvider0.getName(locale1, "", "w>+pzU^%g#y1w");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ROOT;
      defaultNameProvider0.getShortName(locale0, "UTC", "UTC", false);
      Locale locale1 = Locale.forLanguageTag("UTC");
      defaultNameProvider0.getShortName(locale1, "UTC", "UTC", true);
      defaultNameProvider0.getName(locale1, "UTC", "", true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.CHINA;
      defaultNameProvider0.getShortName(locale0, "", "");
      Locale locale1 = Locale.FRANCE;
      Locale.setDefault(locale1);
      defaultNameProvider0.getShortName(locale1, "6f=.{b|8y8T1!", "6f=.{b|8y8T1!", true);
      defaultNameProvider0.getShortName(locale1, "6f=.{b|8y8T1!", "6f=.{b|8y8T1!", true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPAN;
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getShortName(locale0, "Etc/", "ud", true);
      defaultNameProvider0.getShortName(locale1, "Etc/", "Etc/");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPANESE;
      defaultNameProvider0.getName(locale0, "Etc/", "Etc/", false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      defaultNameProvider0.getShortName(locale0, "lu!j,p%|Q)", "lu!j,p%|Q)");
      defaultNameProvider0.getName(locale0, (String) null, "", false);
      defaultNameProvider0.getShortName(locale0, "", (String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TAIWAN;
      Locale.getISOCountries();
      Locale.setDefault(locale0);
      defaultNameProvider0.getShortName(locale0, "", "");
      locale0.getDisplayCountry();
      locale0.getDisplayName();
      defaultNameProvider0.getName(locale0, (String) null, "~~+.3W64$v6.k]J1<zu", true);
      defaultNameProvider0.getName(locale0, "", "");
      defaultNameProvider0.getName(locale0, (String) null, ">h\"y");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList2 = new LinkedList<Locale>();
      linkedList2.iterator();
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList1, (Collection<Locale>) linkedList2);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.lookup(linkedList0, list1);
      defaultNameProvider0.getName((Locale) null, "-Summer", ";zUV)|kkAvsz&Rr", true);
      defaultNameProvider0.getName(locale0, "", "Z^#<K2$*?zCR");
      defaultNameProvider0.getName((Locale) null, (String) null, ";zUV)|kkAvsz&Rr");
      defaultNameProvider0.getName(locale0, (String) null, "\u53F0\u7063", true);
      defaultNameProvider0.getShortName(locale0, (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      defaultNameProvider0.getName(locale0, "|z0w'E0LrzsXx%.!", "|z0w'E0LrzsXx%.!");
      locale0.getExtension('Z');
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1);
      defaultNameProvider0.getName(locale0, "GMT", "GMT");
      defaultNameProvider0.getName((Locale) null, "", "(:ow");
      defaultNameProvider0.getShortName((Locale) null, "g", "(:ow");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMANY;
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getShortName(locale1, (String) null, "qnSQN)", false);
      defaultNameProvider0.getName(locale0, "-Summer", "qnSQN)");
      locale1.getDisplayCountry(locale0);
      defaultNameProvider0.getName(locale0, "C9j;`;kcXD7", (String) null, false);
      defaultNameProvider0.getName(locale1, "yDt),xl>|WP^5[#<", (String) null);
      defaultNameProvider0.getShortName(locale0, "k]9[),ii~w/qf>=", "kaB#");
      locale0.getExtensionKeys();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) null);
      defaultNameProvider0.getName(locale0, "Wxv>Uwv9a'=7", "%1OK*O^E.t7", false);
      defaultNameProvider0.getShortName(locale0, "k]9[),ii~w/qf>=", "Etc/");
      defaultNameProvider0.getShortName(locale0, (String) null, "C9j;`;kcXD7");
      defaultNameProvider0.getShortName(locale0, "}NA1Cl|#*(LUkWAcYG>", "");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      defaultNameProvider0.getShortName(locale0, "2F7h6qoSK3l*", "The provider doesn't have any available ids", true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      defaultNameProvider0.getName(locale0, "(he9XiF15#ts/Ux&", " l?%:sQ=(T", false);
      defaultNameProvider0.getShortName(locale0, (String) null, "getInstance");
      defaultNameProvider0.getShortName(locale0, (String) null, (String) null, false);
      defaultNameProvider0.getName(locale0, (String) null, "-ro, yfo!v'", false);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ROOT;
      defaultNameProvider0.getName(locale0, "PST", "<");
      Locale locale1 = new Locale("kgq\"jUa12 a#gBtl");
      locale1.getDisplayLanguage();
      defaultNameProvider0.getName(locale1, "PST", "", true);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      Locale.setDefault(locale_Category0, locale1);
      defaultNameProvider0.getName(locale0, "kgq\"jua12 a#gbtl", "r,FV12q0K1ncp_Z989");
      defaultNameProvider0.getShortName(locale0, "T`iW=SU", "]FXW2=l)WCr'f");
      defaultNameProvider0.getShortName(locale0, "", "Pacific Standard Time");
      defaultNameProvider0.getShortName(locale1, (String) null, "a\"0na-H-<-5-x>e", true);
      defaultNameProvider0.getName(locale1, "a\"0na-H-<-5-x>e", "");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      defaultNameProvider0.getShortName(locale0, "DateTimeZone.setDefault", "3!1tObx", true);
      defaultNameProvider0.getName(locale0, "Q)3", "Q)3");
      defaultNameProvider0.getShortName(locale0, "Q)3", "3!1tObx", true);
      defaultNameProvider0.getName(locale0, "Op|L-9q_-N\"Te", "3!1tObx", true);
      defaultNameProvider0.getName(locale0, "", (String) null);
      defaultNameProvider0.getName(locale0, "", "3!1tObx", true);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      defaultNameProvider0.getName((Locale) null, (String) null, "(qjBT3jXsSNqJdJ/P~");
      defaultNameProvider0.getName((Locale) null, "-Summer", "Q)3", false);
      defaultNameProvider0.getName(locale0, "-Summer", "");
      defaultNameProvider0.getShortName(locale0, "t&spLe:@", "MNbuv+Ao<t\"HzY");
      defaultNameProvider0.getName((Locale) null, "4", "", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TAIWAN;
      defaultNameProvider0.getShortName(locale0, "v@2cxXjI=.tK*g'Xwfn", "The provider doesn't have any available ids");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      defaultNameProvider0.getName(locale0, "j =", ".a*|0u^D4 ,[S>}");
      Locale locale1 = Locale.GERMANY;
      Locale.setDefault(locale1);
      locale1.hasExtensions();
      defaultNameProvider0.getName(locale1, "F7u#dI#_DeWs%s)B6h", "-Summer");
      Locale locale2 = Locale.JAPAN;
      defaultNameProvider0.getName(locale2, "R", "R", true);
      defaultNameProvider0.getName(locale2, "C4ZhSP;G", (String) null, true);
      defaultNameProvider0.getName(locale2, "", (String) null, false);
      Locale locale3 = Locale.PRC;
      defaultNameProvider0.getName(locale3, "Oy:05bV ", "F7u#dI#_DeWs%s)B6h");
      String string0 = defaultNameProvider0.getShortName(locale2, "Millis out of range: ", "CDT", true);
      assertNull(string0);
  }
}
