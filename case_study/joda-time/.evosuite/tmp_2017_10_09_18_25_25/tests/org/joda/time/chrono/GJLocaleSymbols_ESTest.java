/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 10 05:00:55 GMT 2017
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.chrono.GJLocaleSymbols;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GJLocaleSymbols_ESTest extends GJLocaleSymbols_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale((Locale) null);
      String string0 = gJLocaleSymbols0.monthOfYearValueToText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale((Locale) null);
      String string0 = gJLocaleSymbols0.monthOfYearValueToShortText(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.halfdayTextToValue("am");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.eraValueToText(0);
      assertEquals("v. Chr.", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.eraTextToValue("v. Chr.");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Locale locale0 = Locale.TAIWAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      gJLocaleSymbols0.dayOfWeekValueToText(0);
      assertEquals(3, gJLocaleSymbols0.getDayOfWeekMaxTextLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Locale locale0 = Locale.CHINESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToShortText(3);
      assertEquals("\u661F\u671F\u4E09", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale((Locale) null);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearValueToText(201);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 201
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearValueToShortText((-1836596529));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1836596529
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.halfdayValueToText((-22701865));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -22701865
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekValueToText(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekValueToShortText(1564);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1564
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Locale locale0 = Locale.CHINA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.halfdayTextToValue("\u4E0B\u5348");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.halfdayTextToValue("en");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"en\" for halfdayOfDay is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Locale locale0 = new Locale("1", "1", "1");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.dayOfWeekTextToValue("1");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.dayOfWeekTextToValue("CE");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"CE\" for dayOfWeek is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Locale locale0 = Locale.GERMAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      gJLocaleSymbols0.monthOfYearTextToValue("1");
      assertEquals(2, gJLocaleSymbols0.getDayOfWeekMaxShortTextLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Locale locale0 = new Locale("1", "1", "1");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.monthOfYearTextToValue("J[24up+^z'|<HS\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"J[24up+^z'|<HS\"\" for monthOfYear is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Locale locale0 = Locale.US;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.eraTextToValue("CE");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraTextToValue("\u5348\u5F8C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Value \"\u5348\u5F8C\" for era is not supported
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale((Locale) null);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraTextToValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Locale locale0 = Locale.CANADA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getHalfdayMaxTextLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getMonthMaxShortTextLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToText(7);
      assertEquals("\u65E5\u66DC\u65E5", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Locale locale0 = new Locale("28t'@[HRH\"kC<");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.halfdayValueToText(1);
      assertEquals("PM", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getDayOfWeekMaxShortTextLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      // Undeclared exception!
      try { 
        gJLocaleSymbols0.eraValueToText(8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.joda.time.chrono.GJLocaleSymbols", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Locale locale0 = new Locale("28t'@[HRH\"kC<");
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getEraMaxTextLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.dayOfWeekValueToShortText(0);
      assertNull(string0);
      assertEquals(1, gJLocaleSymbols0.getDayOfWeekMaxShortTextLength());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Locale locale0 = Locale.FRANCE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getDayOfWeekMaxTextLength();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      int int0 = gJLocaleSymbols0.getMonthMaxTextLength();
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Locale locale0 = Locale.JAPANESE;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToText(7);
      assertEquals("7\u6708", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Locale locale0 = Locale.CANADA_FRENCH;
      GJLocaleSymbols gJLocaleSymbols0 = GJLocaleSymbols.forLocale(locale0);
      String string0 = gJLocaleSymbols0.monthOfYearValueToShortText(4);
      assertEquals("avr.", string0);
  }
}
