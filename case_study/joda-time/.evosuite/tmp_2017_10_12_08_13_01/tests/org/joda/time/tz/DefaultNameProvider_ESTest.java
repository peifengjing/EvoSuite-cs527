/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 17:23:44 GMT 2017
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.tz.DefaultNameProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultNameProvider_ESTest extends DefaultNameProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.KOREAN;
      locale0.toLanguageTag();
      defaultNameProvider0.getShortName(locale0, "US/Michigan", "US/Michigan", false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ROOT;
      defaultNameProvider0.getName(locale0, (String) null, (String) null, false);
      defaultNameProvider0.getShortName(locale0, "Etc/", "iBJ&B5gG>n$dSZ#_kHr", true);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.FRANCE;
      defaultNameProvider0.getName(locale0, "", "", false);
      defaultNameProvider0.getName(locale0, (String) null, "", true);
      defaultNameProvider0.getName(locale0, "", "o<@s?_uiKBQ|_=B", true);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TAIWAN;
      defaultNameProvider0.getName(locale0, "U", "", false);
      defaultNameProvider0.getShortName(locale0, "U", "", false);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      defaultNameProvider0.getShortName((Locale) null, "mZ5YnCF)", "mZ5YnCF)");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      defaultNameProvider0.getShortName(locale0, "GMT-", "GMT-");
      Locale locale1 = Locale.FRENCH;
      defaultNameProvider0.getName(locale1, (String) null, (String) null, false);
      defaultNameProvider0.getName(locale1, "UCT", "UCT");
      locale0.getUnicodeLocaleAttributes();
      defaultNameProvider0.getName(locale0, "Etc/", "Etc/");
      defaultNameProvider0.getShortName(locale1, "Etc/", "Pacific/Tarawa", false);
      Locale locale2 = Locale.GERMANY;
      defaultNameProvider0.getName(locale2, "_>jR _Ba-tw>q", "UCT", true);
      defaultNameProvider0.getName(locale0, "Pacific/Tarawa", (String) null);
      locale2.getDisplayScript();
      locale1.getDisplayLanguage(locale2);
      defaultNameProvider0.getName(locale1, "", "tG@~y.");
      defaultNameProvider0.getName(locale0, "GMT-", (String) null);
      defaultNameProvider0.getShortName(locale2, "-Summer", "Etc/");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      Locale.getISOLanguages();
      defaultNameProvider0.getName(locale0, "The provider doesn't support UTC", "The provider doesn't support UTC", false);
      defaultNameProvider0.getName(locale0, "TbxM%J", "7");
      Locale locale1 = Locale.CHINESE;
      defaultNameProvider0.getName(locale1, "U2ulcN%.H)cAQb#-4l", "B{0Ql", false);
      defaultNameProvider0.getName(locale0, " e_95Ug/_p8c$i", "TbxM%J");
      defaultNameProvider0.getName(locale0, " e_95Ug/_p8c$i", "PST8PDT");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.ITALY;
      defaultNameProvider0.getName(locale0, "&AJ3~>^`9LqK)", "");
      defaultNameProvider0.getShortName(locale0, "&AJ3~>^`9LqK)", "&AJ3~>^`9LqK)", true);
      defaultNameProvider0.getName(locale0, "", "&AJ3~>^`9LqK)");
      defaultNameProvider0.getShortName(locale0, "Etc/", (String) null, true);
      defaultNameProvider0.getShortName(locale0, "", "Etc/");
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getShortName(locale0, "-Summer", "f|XlL3o]16k!G>u;");
      defaultNameProvider0.getName(locale0, "-Summer", (String) null);
      defaultNameProvider0.getName(locale0, "-Summer", (String) null);
      defaultNameProvider0.getName(locale0, "o9Xy*<[vSz", (String) null);
      defaultNameProvider0.getShortName(locale0, ">#8). -2?", "", true);
      defaultNameProvider0.getName(locale0, "Q??M35", "Q??M35");
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getName(locale0, "Pacific/Samoa", "s@<%Z([<D\"7fQ{j,p", false);
      defaultNameProvider0.getName(locale0, "aVI", (String) null, true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      locale0.getDisplayName();
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getShortName(locale1, "English (United Kingdom)", "");
      Locale.getISOCountries();
      locale0.getExtensionKeys();
      defaultNameProvider0.getName(locale0, "EST", "");
      Locale locale2 = Locale.KOREAN;
      locale2.getUnicodeLocaleAttributes();
      defaultNameProvider0.getShortName(locale2, "^R 6(aOe", "^R 6(aOe");
      defaultNameProvider0.getShortName(locale2, "", "^R 6(aOe", false);
      defaultNameProvider0.getName(locale2, "^R 6(aOe", "(=H%&Dil");
      defaultNameProvider0.getName(locale2, "rU3gG", (String) null, false);
      Locale locale3 = Locale.ENGLISH;
      defaultNameProvider0.getName(locale3, (String) null, (String) null, false);
      defaultNameProvider0.getName(locale3, "Il$$oa.s_}rqEnX", "", false);
      String string0 = defaultNameProvider0.getShortName(locale2, "", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.KOREAN;
      String string0 = "";
      defaultNameProvider0.getName(locale0, "", "");
      boolean boolean0 = true;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      locale0.getUnicodeLocaleKeys();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.LanguageRange locale_LanguageRange0 = null;
      try {
        locale_LanguageRange0 = new Locale.LanguageRange((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale$LanguageRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      String string0 = defaultNameProvider0.getName((Locale) null, "MqSLG-3CR\"t^", "MqSLG-3CR\"t^", true);
      assertNull(string0);
  }
}
