/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 21:09:43 GMT 2017
 */

package org.joda.time.chrono.gj;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.gj.TestGJChronology;
import org.joda.time.chrono.gj.TestGJWeekOfWeekyearField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TestGJWeekOfWeekyearField_ESTest extends TestGJWeekOfWeekyearField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TestGJWeekOfWeekyearField testGJWeekOfWeekyearField0 = new TestGJWeekOfWeekyearField((TestGJChronology) null);
      MonthDay monthDay0 = new MonthDay();
      int int0 = testGJWeekOfWeekyearField0.getMaximumValue((ReadablePartial) monthDay0);
      assertEquals(53, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TestGJWeekOfWeekyearField testGJWeekOfWeekyearField0 = new TestGJWeekOfWeekyearField((TestGJChronology) null);
      // Undeclared exception!
      try { 
        testGJWeekOfWeekyearField0.roundFloor(7L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.chrono.gj.TestGJWeekOfWeekyearField", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TestGJWeekOfWeekyearField testGJWeekOfWeekyearField0 = new TestGJWeekOfWeekyearField((TestGJChronology) null);
      // Undeclared exception!
      try { 
        testGJWeekOfWeekyearField0.getAsShortText(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.chrono.gj.TestGJWeekOfWeekyearField", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TestGJWeekOfWeekyearField testGJWeekOfWeekyearField0 = new TestGJWeekOfWeekyearField((TestGJChronology) null);
      int int0 = testGJWeekOfWeekyearField0.getMinimumValue(0L);
      assertEquals(1, int0);
  }
}
