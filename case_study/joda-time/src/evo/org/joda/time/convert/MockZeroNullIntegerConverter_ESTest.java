/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 21:03:27 GMT 2017
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.convert.MockZeroNullIntegerConverter;
import org.joda.time.format.DateTimeFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MockZeroNullIntegerConverter_ESTest extends MockZeroNullIntegerConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockZeroNullIntegerConverter mockZeroNullIntegerConverter0 = new MockZeroNullIntegerConverter();
      Object object0 = new Object();
      Chronology chronology0 = mockZeroNullIntegerConverter0.getChronology(object0, (Chronology) null);
      assertNull(chronology0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockZeroNullIntegerConverter mockZeroNullIntegerConverter0 = new MockZeroNullIntegerConverter();
      long long0 = mockZeroNullIntegerConverter0.getInstantMillis((Object) null, (Chronology) null, (DateTimeFormatter) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockZeroNullIntegerConverter mockZeroNullIntegerConverter0 = new MockZeroNullIntegerConverter();
      Object object0 = new Object();
      long long0 = mockZeroNullIntegerConverter0.getInstantMillis(object0, (Chronology) null);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockZeroNullIntegerConverter mockZeroNullIntegerConverter0 = new MockZeroNullIntegerConverter();
      Class class0 = mockZeroNullIntegerConverter0.getSupportedType();
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHours((-11));
      Chronology chronology0 = mockZeroNullIntegerConverter0.getChronology((Object) class0, dateTimeZone0);
      assertNull(chronology0);
  }
}
