/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 20:50:44 GMT 2017
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.HijrahDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.joda.time.Chronology;
import org.joda.time.Duration;
import org.joda.time.MutablePeriod;
import org.joda.time.ReadWritablePeriod;
import org.joda.time.convert.MockBadChronology;
import org.joda.time.convert.ReadableDurationConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReadableDurationConverter_ESTest extends ReadableDurationConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Duration duration0 = Duration.ZERO;
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      Duration duration0 = new Duration(394L);
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals(394L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      MockBadChronology mockBadChronology0 = new MockBadChronology();
      // Undeclared exception!
      try { 
        readableDurationConverter0.setInto((ReadWritablePeriod) null, (Object) null, mockBadChronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Duration duration0 = Duration.ZERO;
      // Undeclared exception!
      try { 
        readableDurationConverter0.setInto((ReadWritablePeriod) null, duration0, (Chronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.chrono.BaseChronology", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      MutablePeriod mutablePeriod0 = new MutablePeriod((-31), (-31), 2251, (-31), 1194, 1194, 1194, 1194);
      HijrahDate hijrahDate0 = MockHijrahDate.now();
      // Undeclared exception!
      try { 
        readableDurationConverter0.setInto(mutablePeriod0, hijrahDate0, (Chronology) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.time.chrono.HijrahDate cannot be cast to org.joda.time.ReadableDuration
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      // Undeclared exception!
      try { 
        readableDurationConverter0.getDurationMillis((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readableDurationConverter0.getDurationMillis(readableDurationConverter0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.joda.time.convert.ReadableDurationConverter cannot be cast to org.joda.time.ReadableDuration
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      Class<?> class0 = readableDurationConverter0.getSupportedType();
      assertEquals("interface org.joda.time.ReadableDuration", class0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Duration duration0 = Duration.millis((-12L));
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals((-12L), long0);
  }
}
