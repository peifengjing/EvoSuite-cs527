/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 12 19:19:24 GMT 2017
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Duration;
import org.joda.time.MutablePeriod;
import org.joda.time.Period;
import org.joda.time.ReadableInstant;
import org.joda.time.ReadablePeriod;
import org.joda.time.format.PeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PeriodFormat_ESTest extends PeriodFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        PeriodFormat.wordBased((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      MutablePeriod mutablePeriod0 = new MutablePeriod();
      Locale locale0 = Locale.FRANCE;
      int int0 = periodFormat_DynamicWordBased0.parseInto(mutablePeriod0, "PeriodFormat.months.list", (-142), locale0);
      assertEquals((-142), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Duration duration0 = Duration.standardHours((-627L));
      MutablePeriod mutablePeriod0 = new MutablePeriod((ReadableInstant) null, duration0);
      int int0 = periodFormat_DynamicWordBased0.parseInto(mutablePeriod0, "Mnts", 0, (Locale) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.forLanguageTag("");
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased(locale0);
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Period period0 = periodFormatter0.parsePeriod("");
      StringWriter stringWriter0 = new StringWriter(248);
      periodFormat_DynamicWordBased0.printTo((Writer) stringWriter0, (ReadablePeriod) period0, locale0);
      assertEquals("", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      StringBuffer stringBuffer0 = new StringBuffer("EZDLVM{kf03va");
      Period period0 = new Period((ReadableInstant) null, (ReadableInstant) null);
      periodFormat_DynamicWordBased0.printTo(stringBuffer0, (ReadablePeriod) period0, (Locale) null);
      assertEquals("EZDLVM{kf03va0 milliseconds", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Duration duration0 = Duration.standardHours((-627L));
      MutablePeriod mutablePeriod0 = new MutablePeriod((ReadableInstant) null, duration0);
      Locale locale0 = new Locale("Mnts");
      int int0 = periodFormat_DynamicWordBased0.countFieldsToPrint(mutablePeriod0, 0, locale0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      Period period0 = new Period((ReadableInstant) null, (ReadableInstant) null);
      Locale locale0 = new Locale("Mnts");
      int int0 = periodFormat_DynamicWordBased0.calculatePrintedLength(period0, locale0);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PeriodFormat periodFormat0 = new PeriodFormat();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.getDefault();
      assertTrue(periodFormatter0.isPrinter());
  }
}
